### YamlMime:XRefMap
sorted: true
references:
- uid: Api.Constants
  name: Api.Constants
  href: api/Api.Constants.html
  commentId: N:Api.Constants
  fullName: Api.Constants
  nameWithType: Api.Constants
- uid: Api.Constants.RoleDefaults
  name: RoleDefaults
  href: api/Api.Constants.RoleDefaults.html
  commentId: T:Api.Constants.RoleDefaults
  fullName: Api.Constants.RoleDefaults
  nameWithType: RoleDefaults
- uid: Api.Constants.RoleDefaults.Admin
  name: Admin
  href: api/Api.Constants.RoleDefaults.html#Api_Constants_RoleDefaults_Admin
  commentId: F:Api.Constants.RoleDefaults.Admin
  fullName: Api.Constants.RoleDefaults.Admin
  nameWithType: RoleDefaults.Admin
- uid: Api.Constants.RoleDefaults.User
  name: User
  href: api/Api.Constants.RoleDefaults.html#Api_Constants_RoleDefaults_User
  commentId: F:Api.Constants.RoleDefaults.User
  fullName: Api.Constants.RoleDefaults.User
  nameWithType: RoleDefaults.User
- uid: Api.Constants.Routes
  name: Routes
  href: api/Api.Constants.Routes.html
  commentId: T:Api.Constants.Routes
  fullName: Api.Constants.Routes
  nameWithType: Routes
- uid: Api.Constants.Routes.Admin
  name: Routes.Admin
  href: api/Api.Constants.Routes.Admin.html
  commentId: T:Api.Constants.Routes.Admin
  fullName: Api.Constants.Routes.Admin
  nameWithType: Routes.Admin
- uid: Api.Constants.Routes.Admin.Create
  name: Create
  href: api/Api.Constants.Routes.Admin.html#Api_Constants_Routes_Admin_Create
  commentId: F:Api.Constants.Routes.Admin.Create
  fullName: Api.Constants.Routes.Admin.Create
  nameWithType: Routes.Admin.Create
- uid: Api.Constants.Routes.Admin.DisableMultiFactor
  name: DisableMultiFactor
  href: api/Api.Constants.Routes.Admin.html#Api_Constants_Routes_Admin_DisableMultiFactor
  commentId: F:Api.Constants.Routes.Admin.DisableMultiFactor
  fullName: Api.Constants.Routes.Admin.DisableMultiFactor
  nameWithType: Routes.Admin.DisableMultiFactor
- uid: Api.Constants.Routes.Admin.ReadAllActivities
  name: ReadAllActivities
  href: api/Api.Constants.Routes.Admin.html#Api_Constants_Routes_Admin_ReadAllActivities
  commentId: F:Api.Constants.Routes.Admin.ReadAllActivities
  fullName: Api.Constants.Routes.Admin.ReadAllActivities
  nameWithType: Routes.Admin.ReadAllActivities
- uid: Api.Constants.Routes.Admin.ReadAllApplications
  name: ReadAllApplications
  href: api/Api.Constants.Routes.Admin.html#Api_Constants_Routes_Admin_ReadAllApplications
  commentId: F:Api.Constants.Routes.Admin.ReadAllApplications
  fullName: Api.Constants.Routes.Admin.ReadAllApplications
  nameWithType: Routes.Admin.ReadAllApplications
- uid: Api.Constants.Routes.Admin.ReadAllUsers
  name: ReadAllUsers
  href: api/Api.Constants.Routes.Admin.html#Api_Constants_Routes_Admin_ReadAllUsers
  commentId: F:Api.Constants.Routes.Admin.ReadAllUsers
  fullName: Api.Constants.Routes.Admin.ReadAllUsers
  nameWithType: Routes.Admin.ReadAllUsers
- uid: Api.Constants.Routes.Admin.ResetPassword
  name: ResetPassword
  href: api/Api.Constants.Routes.Admin.html#Api_Constants_Routes_Admin_ResetPassword
  commentId: F:Api.Constants.Routes.Admin.ResetPassword
  fullName: Api.Constants.Routes.Admin.ResetPassword
  nameWithType: Routes.Admin.ResetPassword
- uid: Api.Constants.Routes.Admin.Roles
  name: Routes.Admin.Roles
  href: api/Api.Constants.Routes.Admin.Roles.html
  commentId: T:Api.Constants.Routes.Admin.Roles
  fullName: Api.Constants.Routes.Admin.Roles
  nameWithType: Routes.Admin.Roles
- uid: Api.Constants.Routes.Admin.Roles.Add
  name: Add
  href: api/Api.Constants.Routes.Admin.Roles.html#Api_Constants_Routes_Admin_Roles_Add
  commentId: F:Api.Constants.Routes.Admin.Roles.Add
  fullName: Api.Constants.Routes.Admin.Roles.Add
  nameWithType: Routes.Admin.Roles.Add
- uid: Api.Constants.Routes.Admin.Roles.Create
  name: Create
  href: api/Api.Constants.Routes.Admin.Roles.html#Api_Constants_Routes_Admin_Roles_Create
  commentId: F:Api.Constants.Routes.Admin.Roles.Create
  fullName: Api.Constants.Routes.Admin.Roles.Create
  nameWithType: Routes.Admin.Roles.Create
- uid: Api.Constants.Routes.Admin.Roles.Delete
  name: Delete
  href: api/Api.Constants.Routes.Admin.Roles.html#Api_Constants_Routes_Admin_Roles_Delete
  commentId: F:Api.Constants.Routes.Admin.Roles.Delete
  fullName: Api.Constants.Routes.Admin.Roles.Delete
  nameWithType: Routes.Admin.Roles.Delete
- uid: Api.Constants.Routes.Admin.Roles.Read
  name: Read
  href: api/Api.Constants.Routes.Admin.Roles.html#Api_Constants_Routes_Admin_Roles_Read
  commentId: F:Api.Constants.Routes.Admin.Roles.Read
  fullName: Api.Constants.Routes.Admin.Roles.Read
  nameWithType: Routes.Admin.Roles.Read
- uid: Api.Constants.Routes.Admin.Roles.Update
  name: Update
  href: api/Api.Constants.Routes.Admin.Roles.html#Api_Constants_Routes_Admin_Roles_Update
  commentId: F:Api.Constants.Routes.Admin.Roles.Update
  fullName: Api.Constants.Routes.Admin.Roles.Update
  nameWithType: Routes.Admin.Roles.Update
- uid: Api.Constants.Routes.Applications
  name: Routes.Applications
  href: api/Api.Constants.Routes.Applications.html
  commentId: T:Api.Constants.Routes.Applications
  fullName: Api.Constants.Routes.Applications
  nameWithType: Routes.Applications
- uid: Api.Constants.Routes.Applications.ApplicationSecrets
  name: ApplicationSecrets
  href: api/Api.Constants.Routes.Applications.html#Api_Constants_Routes_Applications_ApplicationSecrets
  commentId: F:Api.Constants.Routes.Applications.ApplicationSecrets
  fullName: Api.Constants.Routes.Applications.ApplicationSecrets
  nameWithType: Routes.Applications.ApplicationSecrets
- uid: Api.Constants.Routes.Applications.Create
  name: Create
  href: api/Api.Constants.Routes.Applications.html#Api_Constants_Routes_Applications_Create
  commentId: F:Api.Constants.Routes.Applications.Create
  fullName: Api.Constants.Routes.Applications.Create
  nameWithType: Routes.Applications.Create
- uid: Api.Constants.Routes.Applications.DeleteByName
  name: DeleteByName
  href: api/Api.Constants.Routes.Applications.html#Api_Constants_Routes_Applications_DeleteByName
  commentId: F:Api.Constants.Routes.Applications.DeleteByName
  fullName: Api.Constants.Routes.Applications.DeleteByName
  nameWithType: Routes.Applications.DeleteByName
- uid: Api.Constants.Routes.Applications.ReadAll
  name: ReadAll
  href: api/Api.Constants.Routes.Applications.html#Api_Constants_Routes_Applications_ReadAll
  commentId: F:Api.Constants.Routes.Applications.ReadAll
  fullName: Api.Constants.Routes.Applications.ReadAll
  nameWithType: Routes.Applications.ReadAll
- uid: Api.Constants.Routes.Applications.ReadByName
  name: ReadByName
  href: api/Api.Constants.Routes.Applications.html#Api_Constants_Routes_Applications_ReadByName
  commentId: F:Api.Constants.Routes.Applications.ReadByName
  fullName: Api.Constants.Routes.Applications.ReadByName
  nameWithType: Routes.Applications.ReadByName
- uid: Api.Constants.Routes.Applications.UpdateByName
  name: UpdateByName
  href: api/Api.Constants.Routes.Applications.html#Api_Constants_Routes_Applications_UpdateByName
  commentId: F:Api.Constants.Routes.Applications.UpdateByName
  fullName: Api.Constants.Routes.Applications.UpdateByName
  nameWithType: Routes.Applications.UpdateByName
- uid: Api.Constants.Routes.BaseRoute
  name: Routes.BaseRoute
  href: api/Api.Constants.Routes.BaseRoute.html
  commentId: T:Api.Constants.Routes.BaseRoute
  fullName: Api.Constants.Routes.BaseRoute
  nameWithType: Routes.BaseRoute
- uid: Api.Constants.Routes.BaseRoute.Name
  name: Name
  href: api/Api.Constants.Routes.BaseRoute.html#Api_Constants_Routes_BaseRoute_Name
  commentId: F:Api.Constants.Routes.BaseRoute.Name
  fullName: Api.Constants.Routes.BaseRoute.Name
  nameWithType: Routes.BaseRoute.Name
- uid: Api.Constants.Routes.OAuth
  name: Routes.OAuth
  href: api/Api.Constants.Routes.OAuth.html
  commentId: T:Api.Constants.Routes.OAuth
  fullName: Api.Constants.Routes.OAuth
  nameWithType: Routes.OAuth
- uid: Api.Constants.Routes.OAuth.Authorize
  name: Authorize
  href: api/Api.Constants.Routes.OAuth.html#Api_Constants_Routes_OAuth_Authorize
  commentId: F:Api.Constants.Routes.OAuth.Authorize
  fullName: Api.Constants.Routes.OAuth.Authorize
  nameWithType: Routes.OAuth.Authorize
- uid: Api.Constants.Routes.OAuth.Device
  name: Device
  href: api/Api.Constants.Routes.OAuth.html#Api_Constants_Routes_OAuth_Device
  commentId: F:Api.Constants.Routes.OAuth.Device
  fullName: Api.Constants.Routes.OAuth.Device
  nameWithType: Routes.OAuth.Device
- uid: Api.Constants.Routes.OAuth.Token
  name: Token
  href: api/Api.Constants.Routes.OAuth.html#Api_Constants_Routes_OAuth_Token
  commentId: F:Api.Constants.Routes.OAuth.Token
  fullName: Api.Constants.Routes.OAuth.Token
  nameWithType: Routes.OAuth.Token
- uid: Api.Constants.Routes.Sessions
  name: Routes.Sessions
  href: api/Api.Constants.Routes.Sessions.html
  commentId: T:Api.Constants.Routes.Sessions
  fullName: Api.Constants.Routes.Sessions
  nameWithType: Routes.Sessions
- uid: Api.Constants.Routes.Sessions.Name
  name: Name
  href: api/Api.Constants.Routes.Sessions.html#Api_Constants_Routes_Sessions_Name
  commentId: F:Api.Constants.Routes.Sessions.Name
  fullName: Api.Constants.Routes.Sessions.Name
  nameWithType: Routes.Sessions.Name
- uid: Api.Constants.Routes.Users
  name: Routes.Users
  href: api/Api.Constants.Routes.Users.html
  commentId: T:Api.Constants.Routes.Users
  fullName: Api.Constants.Routes.Users
  nameWithType: Routes.Users
- uid: Api.Constants.Routes.Users.ConfirmEmail
  name: ConfirmEmail
  href: api/Api.Constants.Routes.Users.html#Api_Constants_Routes_Users_ConfirmEmail
  commentId: F:Api.Constants.Routes.Users.ConfirmEmail
  fullName: Api.Constants.Routes.Users.ConfirmEmail
  nameWithType: Routes.Users.ConfirmEmail
- uid: Api.Constants.Routes.Users.Create
  name: Create
  href: api/Api.Constants.Routes.Users.html#Api_Constants_Routes_Users_Create
  commentId: F:Api.Constants.Routes.Users.Create
  fullName: Api.Constants.Routes.Users.Create
  nameWithType: Routes.Users.Create
- uid: Api.Constants.Routes.Users.DeleteByEmail
  name: DeleteByEmail
  href: api/Api.Constants.Routes.Users.html#Api_Constants_Routes_Users_DeleteByEmail
  commentId: F:Api.Constants.Routes.Users.DeleteByEmail
  fullName: Api.Constants.Routes.Users.DeleteByEmail
  nameWithType: Routes.Users.DeleteByEmail
- uid: Api.Constants.Routes.Users.Login
  name: Login
  href: api/Api.Constants.Routes.Users.html#Api_Constants_Routes_Users_Login
  commentId: F:Api.Constants.Routes.Users.Login
  fullName: Api.Constants.Routes.Users.Login
  nameWithType: Routes.Users.Login
- uid: Api.Constants.Routes.Users.Logout
  name: Logout
  href: api/Api.Constants.Routes.Users.html#Api_Constants_Routes_Users_Logout
  commentId: F:Api.Constants.Routes.Users.Logout
  fullName: Api.Constants.Routes.Users.Logout
  nameWithType: Routes.Users.Logout
- uid: Api.Constants.Routes.Users.MultiFactorLogin
  name: MultiFactorLogin
  href: api/Api.Constants.Routes.Users.html#Api_Constants_Routes_Users_MultiFactorLogin
  commentId: F:Api.Constants.Routes.Users.MultiFactorLogin
  fullName: Api.Constants.Routes.Users.MultiFactorLogin
  nameWithType: Routes.Users.MultiFactorLogin
- uid: Api.Constants.Routes.Users.MultiFactorManage
  name: MultiFactorManage
  href: api/Api.Constants.Routes.Users.html#Api_Constants_Routes_Users_MultiFactorManage
  commentId: F:Api.Constants.Routes.Users.MultiFactorManage
  fullName: Api.Constants.Routes.Users.MultiFactorManage
  nameWithType: Routes.Users.MultiFactorManage
- uid: Api.Constants.Routes.Users.MultiFactorManageAuthenticator
  name: MultiFactorManageAuthenticator
  href: api/Api.Constants.Routes.Users.html#Api_Constants_Routes_Users_MultiFactorManageAuthenticator
  commentId: F:Api.Constants.Routes.Users.MultiFactorManageAuthenticator
  fullName: Api.Constants.Routes.Users.MultiFactorManageAuthenticator
  nameWithType: Routes.Users.MultiFactorManageAuthenticator
- uid: Api.Constants.Routes.Users.MultiFactorRecoveryCodes
  name: MultiFactorRecoveryCodes
  href: api/Api.Constants.Routes.Users.html#Api_Constants_Routes_Users_MultiFactorRecoveryCodes
  commentId: F:Api.Constants.Routes.Users.MultiFactorRecoveryCodes
  fullName: Api.Constants.Routes.Users.MultiFactorRecoveryCodes
  nameWithType: Routes.Users.MultiFactorRecoveryCodes
- uid: Api.Constants.Routes.Users.MultiFactorRedeemRecoveryCodes
  name: MultiFactorRedeemRecoveryCodes
  href: api/Api.Constants.Routes.Users.html#Api_Constants_Routes_Users_MultiFactorRedeemRecoveryCodes
  commentId: F:Api.Constants.Routes.Users.MultiFactorRedeemRecoveryCodes
  fullName: Api.Constants.Routes.Users.MultiFactorRedeemRecoveryCodes
  nameWithType: Routes.Users.MultiFactorRedeemRecoveryCodes
- uid: Api.Constants.Routes.Users.ReadByEmail
  name: ReadByEmail
  href: api/Api.Constants.Routes.Users.html#Api_Constants_Routes_Users_ReadByEmail
  commentId: F:Api.Constants.Routes.Users.ReadByEmail
  fullName: Api.Constants.Routes.Users.ReadByEmail
  nameWithType: Routes.Users.ReadByEmail
- uid: Api.Constants.Routes.Users.Register
  name: Register
  href: api/Api.Constants.Routes.Users.html#Api_Constants_Routes_Users_Register
  commentId: F:Api.Constants.Routes.Users.Register
  fullName: Api.Constants.Routes.Users.Register
  nameWithType: Routes.Users.Register
- uid: Api.Constants.Routes.Users.ResetPassword
  name: ResetPassword
  href: api/Api.Constants.Routes.Users.html#Api_Constants_Routes_Users_ResetPassword
  commentId: F:Api.Constants.Routes.Users.ResetPassword
  fullName: Api.Constants.Routes.Users.ResetPassword
  nameWithType: Routes.Users.ResetPassword
- uid: Api.Constants.Routes.Users.Tokens
  name: Tokens
  href: api/Api.Constants.Routes.Users.html#Api_Constants_Routes_Users_Tokens
  commentId: F:Api.Constants.Routes.Users.Tokens
  fullName: Api.Constants.Routes.Users.Tokens
  nameWithType: Routes.Users.Tokens
- uid: Api.Constants.Routes.Users.UpdateAddress
  name: UpdateAddress
  href: api/Api.Constants.Routes.Users.html#Api_Constants_Routes_Users_UpdateAddress
  commentId: F:Api.Constants.Routes.Users.UpdateAddress
  fullName: Api.Constants.Routes.Users.UpdateAddress
  nameWithType: Routes.Users.UpdateAddress
- uid: Api.Constants.Routes.Users.UpdateEmail
  name: UpdateEmail
  href: api/Api.Constants.Routes.Users.html#Api_Constants_Routes_Users_UpdateEmail
  commentId: F:Api.Constants.Routes.Users.UpdateEmail
  fullName: Api.Constants.Routes.Users.UpdateEmail
  nameWithType: Routes.Users.UpdateEmail
- uid: Api.Constants.Routes.Users.UpdatePhoneNumber
  name: UpdatePhoneNumber
  href: api/Api.Constants.Routes.Users.html#Api_Constants_Routes_Users_UpdatePhoneNumber
  commentId: F:Api.Constants.Routes.Users.UpdatePhoneNumber
  fullName: Api.Constants.Routes.Users.UpdatePhoneNumber
  nameWithType: Routes.Users.UpdatePhoneNumber
- uid: Api.Endpoints
  name: Api.Endpoints
  href: api/Api.Endpoints.html
  commentId: N:Api.Endpoints
  fullName: Api.Endpoints
  nameWithType: Api.Endpoints
- uid: Api.Endpoints.Admin
  name: Api.Endpoints.Admin
  href: api/Api.Endpoints.Admin.html
  commentId: N:Api.Endpoints.Admin
  fullName: Api.Endpoints.Admin
  nameWithType: Api.Endpoints.Admin
- uid: Api.Endpoints.Admin.DisableMultiFactorEndpoint
  name: DisableMultiFactorEndpoint
  href: api/Api.Endpoints.Admin.DisableMultiFactorEndpoint.html
  commentId: T:Api.Endpoints.Admin.DisableMultiFactorEndpoint
  fullName: Api.Endpoints.Admin.DisableMultiFactorEndpoint
  nameWithType: DisableMultiFactorEndpoint
- uid: Api.Endpoints.Admin.DisableMultiFactorEndpoint.#ctor(System.IServiceProvider)
  name: DisableMultiFactorEndpoint(IServiceProvider)
  href: api/Api.Endpoints.Admin.DisableMultiFactorEndpoint.html#Api_Endpoints_Admin_DisableMultiFactorEndpoint__ctor_System_IServiceProvider_
  commentId: M:Api.Endpoints.Admin.DisableMultiFactorEndpoint.#ctor(System.IServiceProvider)
  name.vb: New(IServiceProvider)
  fullName: Api.Endpoints.Admin.DisableMultiFactorEndpoint.DisableMultiFactorEndpoint(System.IServiceProvider)
  fullName.vb: Api.Endpoints.Admin.DisableMultiFactorEndpoint.New(System.IServiceProvider)
  nameWithType: DisableMultiFactorEndpoint.DisableMultiFactorEndpoint(IServiceProvider)
  nameWithType.vb: DisableMultiFactorEndpoint.New(IServiceProvider)
- uid: Api.Endpoints.Admin.DisableMultiFactorEndpoint.#ctor*
  name: DisableMultiFactorEndpoint
  href: api/Api.Endpoints.Admin.DisableMultiFactorEndpoint.html#Api_Endpoints_Admin_DisableMultiFactorEndpoint__ctor_
  commentId: Overload:Api.Endpoints.Admin.DisableMultiFactorEndpoint.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Api.Endpoints.Admin.DisableMultiFactorEndpoint.DisableMultiFactorEndpoint
  fullName.vb: Api.Endpoints.Admin.DisableMultiFactorEndpoint.New
  nameWithType: DisableMultiFactorEndpoint.DisableMultiFactorEndpoint
  nameWithType.vb: DisableMultiFactorEndpoint.New
- uid: Api.Endpoints.Admin.DisableMultiFactorEndpoint.HandleAsync(Api.Requests.DisableMultiFactorRequest,System.Threading.CancellationToken)
  name: HandleAsync(DisableMultiFactorRequest, CancellationToken)
  href: api/Api.Endpoints.Admin.DisableMultiFactorEndpoint.html#Api_Endpoints_Admin_DisableMultiFactorEndpoint_HandleAsync_Api_Requests_DisableMultiFactorRequest_System_Threading_CancellationToken_
  commentId: M:Api.Endpoints.Admin.DisableMultiFactorEndpoint.HandleAsync(Api.Requests.DisableMultiFactorRequest,System.Threading.CancellationToken)
  fullName: Api.Endpoints.Admin.DisableMultiFactorEndpoint.HandleAsync(Api.Requests.DisableMultiFactorRequest, System.Threading.CancellationToken)
  nameWithType: DisableMultiFactorEndpoint.HandleAsync(DisableMultiFactorRequest, CancellationToken)
- uid: Api.Endpoints.Admin.DisableMultiFactorEndpoint.HandleAsync*
  name: HandleAsync
  href: api/Api.Endpoints.Admin.DisableMultiFactorEndpoint.html#Api_Endpoints_Admin_DisableMultiFactorEndpoint_HandleAsync_
  commentId: Overload:Api.Endpoints.Admin.DisableMultiFactorEndpoint.HandleAsync
  isSpec: "True"
  fullName: Api.Endpoints.Admin.DisableMultiFactorEndpoint.HandleAsync
  nameWithType: DisableMultiFactorEndpoint.HandleAsync
- uid: Api.Endpoints.Admin.ReadAllActivitiesEndpoint
  name: ReadAllActivitiesEndpoint
  href: api/Api.Endpoints.Admin.ReadAllActivitiesEndpoint.html
  commentId: T:Api.Endpoints.Admin.ReadAllActivitiesEndpoint
  fullName: Api.Endpoints.Admin.ReadAllActivitiesEndpoint
  nameWithType: ReadAllActivitiesEndpoint
- uid: Api.Endpoints.Admin.ReadAllActivitiesEndpoint.#ctor(System.IServiceProvider)
  name: ReadAllActivitiesEndpoint(IServiceProvider)
  href: api/Api.Endpoints.Admin.ReadAllActivitiesEndpoint.html#Api_Endpoints_Admin_ReadAllActivitiesEndpoint__ctor_System_IServiceProvider_
  commentId: M:Api.Endpoints.Admin.ReadAllActivitiesEndpoint.#ctor(System.IServiceProvider)
  name.vb: New(IServiceProvider)
  fullName: Api.Endpoints.Admin.ReadAllActivitiesEndpoint.ReadAllActivitiesEndpoint(System.IServiceProvider)
  fullName.vb: Api.Endpoints.Admin.ReadAllActivitiesEndpoint.New(System.IServiceProvider)
  nameWithType: ReadAllActivitiesEndpoint.ReadAllActivitiesEndpoint(IServiceProvider)
  nameWithType.vb: ReadAllActivitiesEndpoint.New(IServiceProvider)
- uid: Api.Endpoints.Admin.ReadAllActivitiesEndpoint.#ctor*
  name: ReadAllActivitiesEndpoint
  href: api/Api.Endpoints.Admin.ReadAllActivitiesEndpoint.html#Api_Endpoints_Admin_ReadAllActivitiesEndpoint__ctor_
  commentId: Overload:Api.Endpoints.Admin.ReadAllActivitiesEndpoint.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Api.Endpoints.Admin.ReadAllActivitiesEndpoint.ReadAllActivitiesEndpoint
  fullName.vb: Api.Endpoints.Admin.ReadAllActivitiesEndpoint.New
  nameWithType: ReadAllActivitiesEndpoint.ReadAllActivitiesEndpoint
  nameWithType.vb: ReadAllActivitiesEndpoint.New
- uid: Api.Endpoints.Admin.ReadAllActivitiesEndpoint.HandleAsync(System.Threading.CancellationToken)
  name: HandleAsync(CancellationToken)
  href: api/Api.Endpoints.Admin.ReadAllActivitiesEndpoint.html#Api_Endpoints_Admin_ReadAllActivitiesEndpoint_HandleAsync_System_Threading_CancellationToken_
  commentId: M:Api.Endpoints.Admin.ReadAllActivitiesEndpoint.HandleAsync(System.Threading.CancellationToken)
  fullName: Api.Endpoints.Admin.ReadAllActivitiesEndpoint.HandleAsync(System.Threading.CancellationToken)
  nameWithType: ReadAllActivitiesEndpoint.HandleAsync(CancellationToken)
- uid: Api.Endpoints.Admin.ReadAllActivitiesEndpoint.HandleAsync*
  name: HandleAsync
  href: api/Api.Endpoints.Admin.ReadAllActivitiesEndpoint.html#Api_Endpoints_Admin_ReadAllActivitiesEndpoint_HandleAsync_
  commentId: Overload:Api.Endpoints.Admin.ReadAllActivitiesEndpoint.HandleAsync
  isSpec: "True"
  fullName: Api.Endpoints.Admin.ReadAllActivitiesEndpoint.HandleAsync
  nameWithType: ReadAllActivitiesEndpoint.HandleAsync
- uid: Api.Endpoints.Admin.ReadAllApplicationsEndpoint
  name: ReadAllApplicationsEndpoint
  href: api/Api.Endpoints.Admin.ReadAllApplicationsEndpoint.html
  commentId: T:Api.Endpoints.Admin.ReadAllApplicationsEndpoint
  fullName: Api.Endpoints.Admin.ReadAllApplicationsEndpoint
  nameWithType: ReadAllApplicationsEndpoint
- uid: Api.Endpoints.Admin.ReadAllApplicationsEndpoint.#ctor(System.IServiceProvider)
  name: ReadAllApplicationsEndpoint(IServiceProvider)
  href: api/Api.Endpoints.Admin.ReadAllApplicationsEndpoint.html#Api_Endpoints_Admin_ReadAllApplicationsEndpoint__ctor_System_IServiceProvider_
  commentId: M:Api.Endpoints.Admin.ReadAllApplicationsEndpoint.#ctor(System.IServiceProvider)
  name.vb: New(IServiceProvider)
  fullName: Api.Endpoints.Admin.ReadAllApplicationsEndpoint.ReadAllApplicationsEndpoint(System.IServiceProvider)
  fullName.vb: Api.Endpoints.Admin.ReadAllApplicationsEndpoint.New(System.IServiceProvider)
  nameWithType: ReadAllApplicationsEndpoint.ReadAllApplicationsEndpoint(IServiceProvider)
  nameWithType.vb: ReadAllApplicationsEndpoint.New(IServiceProvider)
- uid: Api.Endpoints.Admin.ReadAllApplicationsEndpoint.#ctor*
  name: ReadAllApplicationsEndpoint
  href: api/Api.Endpoints.Admin.ReadAllApplicationsEndpoint.html#Api_Endpoints_Admin_ReadAllApplicationsEndpoint__ctor_
  commentId: Overload:Api.Endpoints.Admin.ReadAllApplicationsEndpoint.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Api.Endpoints.Admin.ReadAllApplicationsEndpoint.ReadAllApplicationsEndpoint
  fullName.vb: Api.Endpoints.Admin.ReadAllApplicationsEndpoint.New
  nameWithType: ReadAllApplicationsEndpoint.ReadAllApplicationsEndpoint
  nameWithType.vb: ReadAllApplicationsEndpoint.New
- uid: Api.Endpoints.Admin.ReadAllApplicationsEndpoint.HandleAsync(System.Threading.CancellationToken)
  name: HandleAsync(CancellationToken)
  href: api/Api.Endpoints.Admin.ReadAllApplicationsEndpoint.html#Api_Endpoints_Admin_ReadAllApplicationsEndpoint_HandleAsync_System_Threading_CancellationToken_
  commentId: M:Api.Endpoints.Admin.ReadAllApplicationsEndpoint.HandleAsync(System.Threading.CancellationToken)
  fullName: Api.Endpoints.Admin.ReadAllApplicationsEndpoint.HandleAsync(System.Threading.CancellationToken)
  nameWithType: ReadAllApplicationsEndpoint.HandleAsync(CancellationToken)
- uid: Api.Endpoints.Admin.ReadAllApplicationsEndpoint.HandleAsync*
  name: HandleAsync
  href: api/Api.Endpoints.Admin.ReadAllApplicationsEndpoint.html#Api_Endpoints_Admin_ReadAllApplicationsEndpoint_HandleAsync_
  commentId: Overload:Api.Endpoints.Admin.ReadAllApplicationsEndpoint.HandleAsync
  isSpec: "True"
  fullName: Api.Endpoints.Admin.ReadAllApplicationsEndpoint.HandleAsync
  nameWithType: ReadAllApplicationsEndpoint.HandleAsync
- uid: Api.Endpoints.Admin.ReadAllUsersEndpoint
  name: ReadAllUsersEndpoint
  href: api/Api.Endpoints.Admin.ReadAllUsersEndpoint.html
  commentId: T:Api.Endpoints.Admin.ReadAllUsersEndpoint
  fullName: Api.Endpoints.Admin.ReadAllUsersEndpoint
  nameWithType: ReadAllUsersEndpoint
- uid: Api.Endpoints.Admin.ReadAllUsersEndpoint.#ctor(System.IServiceProvider)
  name: ReadAllUsersEndpoint(IServiceProvider)
  href: api/Api.Endpoints.Admin.ReadAllUsersEndpoint.html#Api_Endpoints_Admin_ReadAllUsersEndpoint__ctor_System_IServiceProvider_
  commentId: M:Api.Endpoints.Admin.ReadAllUsersEndpoint.#ctor(System.IServiceProvider)
  name.vb: New(IServiceProvider)
  fullName: Api.Endpoints.Admin.ReadAllUsersEndpoint.ReadAllUsersEndpoint(System.IServiceProvider)
  fullName.vb: Api.Endpoints.Admin.ReadAllUsersEndpoint.New(System.IServiceProvider)
  nameWithType: ReadAllUsersEndpoint.ReadAllUsersEndpoint(IServiceProvider)
  nameWithType.vb: ReadAllUsersEndpoint.New(IServiceProvider)
- uid: Api.Endpoints.Admin.ReadAllUsersEndpoint.#ctor*
  name: ReadAllUsersEndpoint
  href: api/Api.Endpoints.Admin.ReadAllUsersEndpoint.html#Api_Endpoints_Admin_ReadAllUsersEndpoint__ctor_
  commentId: Overload:Api.Endpoints.Admin.ReadAllUsersEndpoint.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Api.Endpoints.Admin.ReadAllUsersEndpoint.ReadAllUsersEndpoint
  fullName.vb: Api.Endpoints.Admin.ReadAllUsersEndpoint.New
  nameWithType: ReadAllUsersEndpoint.ReadAllUsersEndpoint
  nameWithType.vb: ReadAllUsersEndpoint.New
- uid: Api.Endpoints.Admin.ReadAllUsersEndpoint.HandleAsync(System.Threading.CancellationToken)
  name: HandleAsync(CancellationToken)
  href: api/Api.Endpoints.Admin.ReadAllUsersEndpoint.html#Api_Endpoints_Admin_ReadAllUsersEndpoint_HandleAsync_System_Threading_CancellationToken_
  commentId: M:Api.Endpoints.Admin.ReadAllUsersEndpoint.HandleAsync(System.Threading.CancellationToken)
  fullName: Api.Endpoints.Admin.ReadAllUsersEndpoint.HandleAsync(System.Threading.CancellationToken)
  nameWithType: ReadAllUsersEndpoint.HandleAsync(CancellationToken)
- uid: Api.Endpoints.Admin.ReadAllUsersEndpoint.HandleAsync*
  name: HandleAsync
  href: api/Api.Endpoints.Admin.ReadAllUsersEndpoint.html#Api_Endpoints_Admin_ReadAllUsersEndpoint_HandleAsync_
  commentId: Overload:Api.Endpoints.Admin.ReadAllUsersEndpoint.HandleAsync
  isSpec: "True"
  fullName: Api.Endpoints.Admin.ReadAllUsersEndpoint.HandleAsync
  nameWithType: ReadAllUsersEndpoint.HandleAsync
- uid: Api.Endpoints.Admin.RegisterAdminEndpoint
  name: RegisterAdminEndpoint
  href: api/Api.Endpoints.Admin.RegisterAdminEndpoint.html
  commentId: T:Api.Endpoints.Admin.RegisterAdminEndpoint
  fullName: Api.Endpoints.Admin.RegisterAdminEndpoint
  nameWithType: RegisterAdminEndpoint
- uid: Api.Endpoints.Admin.RegisterAdminEndpoint.#ctor(System.IServiceProvider)
  name: RegisterAdminEndpoint(IServiceProvider)
  href: api/Api.Endpoints.Admin.RegisterAdminEndpoint.html#Api_Endpoints_Admin_RegisterAdminEndpoint__ctor_System_IServiceProvider_
  commentId: M:Api.Endpoints.Admin.RegisterAdminEndpoint.#ctor(System.IServiceProvider)
  name.vb: New(IServiceProvider)
  fullName: Api.Endpoints.Admin.RegisterAdminEndpoint.RegisterAdminEndpoint(System.IServiceProvider)
  fullName.vb: Api.Endpoints.Admin.RegisterAdminEndpoint.New(System.IServiceProvider)
  nameWithType: RegisterAdminEndpoint.RegisterAdminEndpoint(IServiceProvider)
  nameWithType.vb: RegisterAdminEndpoint.New(IServiceProvider)
- uid: Api.Endpoints.Admin.RegisterAdminEndpoint.#ctor*
  name: RegisterAdminEndpoint
  href: api/Api.Endpoints.Admin.RegisterAdminEndpoint.html#Api_Endpoints_Admin_RegisterAdminEndpoint__ctor_
  commentId: Overload:Api.Endpoints.Admin.RegisterAdminEndpoint.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Api.Endpoints.Admin.RegisterAdminEndpoint.RegisterAdminEndpoint
  fullName.vb: Api.Endpoints.Admin.RegisterAdminEndpoint.New
  nameWithType: RegisterAdminEndpoint.RegisterAdminEndpoint
  nameWithType.vb: RegisterAdminEndpoint.New
- uid: Api.Endpoints.Admin.RegisterAdminEndpoint.HandleAsync(Api.Requests.RegisterRequest,System.Threading.CancellationToken)
  name: HandleAsync(RegisterRequest, CancellationToken)
  href: api/Api.Endpoints.Admin.RegisterAdminEndpoint.html#Api_Endpoints_Admin_RegisterAdminEndpoint_HandleAsync_Api_Requests_RegisterRequest_System_Threading_CancellationToken_
  commentId: M:Api.Endpoints.Admin.RegisterAdminEndpoint.HandleAsync(Api.Requests.RegisterRequest,System.Threading.CancellationToken)
  fullName: Api.Endpoints.Admin.RegisterAdminEndpoint.HandleAsync(Api.Requests.RegisterRequest, System.Threading.CancellationToken)
  nameWithType: RegisterAdminEndpoint.HandleAsync(RegisterRequest, CancellationToken)
- uid: Api.Endpoints.Admin.RegisterAdminEndpoint.HandleAsync*
  name: HandleAsync
  href: api/Api.Endpoints.Admin.RegisterAdminEndpoint.html#Api_Endpoints_Admin_RegisterAdminEndpoint_HandleAsync_
  commentId: Overload:Api.Endpoints.Admin.RegisterAdminEndpoint.HandleAsync
  isSpec: "True"
  fullName: Api.Endpoints.Admin.RegisterAdminEndpoint.HandleAsync
  nameWithType: RegisterAdminEndpoint.HandleAsync
- uid: Api.Endpoints.Admin.ResetPasswordEndpoint
  name: ResetPasswordEndpoint
  href: api/Api.Endpoints.Admin.ResetPasswordEndpoint.html
  commentId: T:Api.Endpoints.Admin.ResetPasswordEndpoint
  fullName: Api.Endpoints.Admin.ResetPasswordEndpoint
  nameWithType: ResetPasswordEndpoint
- uid: Api.Endpoints.Admin.ResetPasswordEndpoint.#ctor(System.IServiceProvider)
  name: ResetPasswordEndpoint(IServiceProvider)
  href: api/Api.Endpoints.Admin.ResetPasswordEndpoint.html#Api_Endpoints_Admin_ResetPasswordEndpoint__ctor_System_IServiceProvider_
  commentId: M:Api.Endpoints.Admin.ResetPasswordEndpoint.#ctor(System.IServiceProvider)
  name.vb: New(IServiceProvider)
  fullName: Api.Endpoints.Admin.ResetPasswordEndpoint.ResetPasswordEndpoint(System.IServiceProvider)
  fullName.vb: Api.Endpoints.Admin.ResetPasswordEndpoint.New(System.IServiceProvider)
  nameWithType: ResetPasswordEndpoint.ResetPasswordEndpoint(IServiceProvider)
  nameWithType.vb: ResetPasswordEndpoint.New(IServiceProvider)
- uid: Api.Endpoints.Admin.ResetPasswordEndpoint.#ctor*
  name: ResetPasswordEndpoint
  href: api/Api.Endpoints.Admin.ResetPasswordEndpoint.html#Api_Endpoints_Admin_ResetPasswordEndpoint__ctor_
  commentId: Overload:Api.Endpoints.Admin.ResetPasswordEndpoint.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Api.Endpoints.Admin.ResetPasswordEndpoint.ResetPasswordEndpoint
  fullName.vb: Api.Endpoints.Admin.ResetPasswordEndpoint.New
  nameWithType: ResetPasswordEndpoint.ResetPasswordEndpoint
  nameWithType.vb: ResetPasswordEndpoint.New
- uid: Api.Endpoints.Admin.ResetPasswordEndpoint.HandleAsync(Api.Requests.AdminPasswordResetRequest,System.Threading.CancellationToken)
  name: HandleAsync(AdminPasswordResetRequest, CancellationToken)
  href: api/Api.Endpoints.Admin.ResetPasswordEndpoint.html#Api_Endpoints_Admin_ResetPasswordEndpoint_HandleAsync_Api_Requests_AdminPasswordResetRequest_System_Threading_CancellationToken_
  commentId: M:Api.Endpoints.Admin.ResetPasswordEndpoint.HandleAsync(Api.Requests.AdminPasswordResetRequest,System.Threading.CancellationToken)
  fullName: Api.Endpoints.Admin.ResetPasswordEndpoint.HandleAsync(Api.Requests.AdminPasswordResetRequest, System.Threading.CancellationToken)
  nameWithType: ResetPasswordEndpoint.HandleAsync(AdminPasswordResetRequest, CancellationToken)
- uid: Api.Endpoints.Admin.ResetPasswordEndpoint.HandleAsync*
  name: HandleAsync
  href: api/Api.Endpoints.Admin.ResetPasswordEndpoint.html#Api_Endpoints_Admin_ResetPasswordEndpoint_HandleAsync_
  commentId: Overload:Api.Endpoints.Admin.ResetPasswordEndpoint.HandleAsync
  isSpec: "True"
  fullName: Api.Endpoints.Admin.ResetPasswordEndpoint.HandleAsync
  nameWithType: ResetPasswordEndpoint.HandleAsync
- uid: Api.Endpoints.Admin.Roles
  name: Api.Endpoints.Admin.Roles
  href: api/Api.Endpoints.Admin.Roles.html
  commentId: N:Api.Endpoints.Admin.Roles
  fullName: Api.Endpoints.Admin.Roles
  nameWithType: Api.Endpoints.Admin.Roles
- uid: Api.Endpoints.Admin.Roles.AddToRoleEndpoint
  name: AddToRoleEndpoint
  href: api/Api.Endpoints.Admin.Roles.AddToRoleEndpoint.html
  commentId: T:Api.Endpoints.Admin.Roles.AddToRoleEndpoint
  fullName: Api.Endpoints.Admin.Roles.AddToRoleEndpoint
  nameWithType: AddToRoleEndpoint
- uid: Api.Endpoints.Admin.Roles.AddToRoleEndpoint.#ctor(System.IServiceProvider)
  name: AddToRoleEndpoint(IServiceProvider)
  href: api/Api.Endpoints.Admin.Roles.AddToRoleEndpoint.html#Api_Endpoints_Admin_Roles_AddToRoleEndpoint__ctor_System_IServiceProvider_
  commentId: M:Api.Endpoints.Admin.Roles.AddToRoleEndpoint.#ctor(System.IServiceProvider)
  name.vb: New(IServiceProvider)
  fullName: Api.Endpoints.Admin.Roles.AddToRoleEndpoint.AddToRoleEndpoint(System.IServiceProvider)
  fullName.vb: Api.Endpoints.Admin.Roles.AddToRoleEndpoint.New(System.IServiceProvider)
  nameWithType: AddToRoleEndpoint.AddToRoleEndpoint(IServiceProvider)
  nameWithType.vb: AddToRoleEndpoint.New(IServiceProvider)
- uid: Api.Endpoints.Admin.Roles.AddToRoleEndpoint.#ctor*
  name: AddToRoleEndpoint
  href: api/Api.Endpoints.Admin.Roles.AddToRoleEndpoint.html#Api_Endpoints_Admin_Roles_AddToRoleEndpoint__ctor_
  commentId: Overload:Api.Endpoints.Admin.Roles.AddToRoleEndpoint.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Api.Endpoints.Admin.Roles.AddToRoleEndpoint.AddToRoleEndpoint
  fullName.vb: Api.Endpoints.Admin.Roles.AddToRoleEndpoint.New
  nameWithType: AddToRoleEndpoint.AddToRoleEndpoint
  nameWithType.vb: AddToRoleEndpoint.New
- uid: Api.Endpoints.Admin.Roles.AddToRoleEndpoint.HandleAsync(Api.Requests.AddToRoleRequest,System.Threading.CancellationToken)
  name: HandleAsync(AddToRoleRequest, CancellationToken)
  href: api/Api.Endpoints.Admin.Roles.AddToRoleEndpoint.html#Api_Endpoints_Admin_Roles_AddToRoleEndpoint_HandleAsync_Api_Requests_AddToRoleRequest_System_Threading_CancellationToken_
  commentId: M:Api.Endpoints.Admin.Roles.AddToRoleEndpoint.HandleAsync(Api.Requests.AddToRoleRequest,System.Threading.CancellationToken)
  fullName: Api.Endpoints.Admin.Roles.AddToRoleEndpoint.HandleAsync(Api.Requests.AddToRoleRequest, System.Threading.CancellationToken)
  nameWithType: AddToRoleEndpoint.HandleAsync(AddToRoleRequest, CancellationToken)
- uid: Api.Endpoints.Admin.Roles.AddToRoleEndpoint.HandleAsync*
  name: HandleAsync
  href: api/Api.Endpoints.Admin.Roles.AddToRoleEndpoint.html#Api_Endpoints_Admin_Roles_AddToRoleEndpoint_HandleAsync_
  commentId: Overload:Api.Endpoints.Admin.Roles.AddToRoleEndpoint.HandleAsync
  isSpec: "True"
  fullName: Api.Endpoints.Admin.Roles.AddToRoleEndpoint.HandleAsync
  nameWithType: AddToRoleEndpoint.HandleAsync
- uid: Api.Endpoints.Admin.Roles.CreateRoleEndpoint
  name: CreateRoleEndpoint
  href: api/Api.Endpoints.Admin.Roles.CreateRoleEndpoint.html
  commentId: T:Api.Endpoints.Admin.Roles.CreateRoleEndpoint
  fullName: Api.Endpoints.Admin.Roles.CreateRoleEndpoint
  nameWithType: CreateRoleEndpoint
- uid: Api.Endpoints.Admin.Roles.CreateRoleEndpoint.#ctor(System.IServiceProvider)
  name: CreateRoleEndpoint(IServiceProvider)
  href: api/Api.Endpoints.Admin.Roles.CreateRoleEndpoint.html#Api_Endpoints_Admin_Roles_CreateRoleEndpoint__ctor_System_IServiceProvider_
  commentId: M:Api.Endpoints.Admin.Roles.CreateRoleEndpoint.#ctor(System.IServiceProvider)
  name.vb: New(IServiceProvider)
  fullName: Api.Endpoints.Admin.Roles.CreateRoleEndpoint.CreateRoleEndpoint(System.IServiceProvider)
  fullName.vb: Api.Endpoints.Admin.Roles.CreateRoleEndpoint.New(System.IServiceProvider)
  nameWithType: CreateRoleEndpoint.CreateRoleEndpoint(IServiceProvider)
  nameWithType.vb: CreateRoleEndpoint.New(IServiceProvider)
- uid: Api.Endpoints.Admin.Roles.CreateRoleEndpoint.#ctor*
  name: CreateRoleEndpoint
  href: api/Api.Endpoints.Admin.Roles.CreateRoleEndpoint.html#Api_Endpoints_Admin_Roles_CreateRoleEndpoint__ctor_
  commentId: Overload:Api.Endpoints.Admin.Roles.CreateRoleEndpoint.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Api.Endpoints.Admin.Roles.CreateRoleEndpoint.CreateRoleEndpoint
  fullName.vb: Api.Endpoints.Admin.Roles.CreateRoleEndpoint.New
  nameWithType: CreateRoleEndpoint.CreateRoleEndpoint
  nameWithType.vb: CreateRoleEndpoint.New
- uid: Api.Endpoints.Admin.Roles.CreateRoleEndpoint.HandleAsync(Api.Requests.CreateRoleRequest,System.Threading.CancellationToken)
  name: HandleAsync(CreateRoleRequest, CancellationToken)
  href: api/Api.Endpoints.Admin.Roles.CreateRoleEndpoint.html#Api_Endpoints_Admin_Roles_CreateRoleEndpoint_HandleAsync_Api_Requests_CreateRoleRequest_System_Threading_CancellationToken_
  commentId: M:Api.Endpoints.Admin.Roles.CreateRoleEndpoint.HandleAsync(Api.Requests.CreateRoleRequest,System.Threading.CancellationToken)
  fullName: Api.Endpoints.Admin.Roles.CreateRoleEndpoint.HandleAsync(Api.Requests.CreateRoleRequest, System.Threading.CancellationToken)
  nameWithType: CreateRoleEndpoint.HandleAsync(CreateRoleRequest, CancellationToken)
- uid: Api.Endpoints.Admin.Roles.CreateRoleEndpoint.HandleAsync*
  name: HandleAsync
  href: api/Api.Endpoints.Admin.Roles.CreateRoleEndpoint.html#Api_Endpoints_Admin_Roles_CreateRoleEndpoint_HandleAsync_
  commentId: Overload:Api.Endpoints.Admin.Roles.CreateRoleEndpoint.HandleAsync
  isSpec: "True"
  fullName: Api.Endpoints.Admin.Roles.CreateRoleEndpoint.HandleAsync
  nameWithType: CreateRoleEndpoint.HandleAsync
- uid: Api.Endpoints.Admin.Roles.DeleteRoleEndpoint
  name: DeleteRoleEndpoint
  href: api/Api.Endpoints.Admin.Roles.DeleteRoleEndpoint.html
  commentId: T:Api.Endpoints.Admin.Roles.DeleteRoleEndpoint
  fullName: Api.Endpoints.Admin.Roles.DeleteRoleEndpoint
  nameWithType: DeleteRoleEndpoint
- uid: Api.Endpoints.Admin.Roles.DeleteRoleEndpoint.#ctor(System.IServiceProvider)
  name: DeleteRoleEndpoint(IServiceProvider)
  href: api/Api.Endpoints.Admin.Roles.DeleteRoleEndpoint.html#Api_Endpoints_Admin_Roles_DeleteRoleEndpoint__ctor_System_IServiceProvider_
  commentId: M:Api.Endpoints.Admin.Roles.DeleteRoleEndpoint.#ctor(System.IServiceProvider)
  name.vb: New(IServiceProvider)
  fullName: Api.Endpoints.Admin.Roles.DeleteRoleEndpoint.DeleteRoleEndpoint(System.IServiceProvider)
  fullName.vb: Api.Endpoints.Admin.Roles.DeleteRoleEndpoint.New(System.IServiceProvider)
  nameWithType: DeleteRoleEndpoint.DeleteRoleEndpoint(IServiceProvider)
  nameWithType.vb: DeleteRoleEndpoint.New(IServiceProvider)
- uid: Api.Endpoints.Admin.Roles.DeleteRoleEndpoint.#ctor*
  name: DeleteRoleEndpoint
  href: api/Api.Endpoints.Admin.Roles.DeleteRoleEndpoint.html#Api_Endpoints_Admin_Roles_DeleteRoleEndpoint__ctor_
  commentId: Overload:Api.Endpoints.Admin.Roles.DeleteRoleEndpoint.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Api.Endpoints.Admin.Roles.DeleteRoleEndpoint.DeleteRoleEndpoint
  fullName.vb: Api.Endpoints.Admin.Roles.DeleteRoleEndpoint.New
  nameWithType: DeleteRoleEndpoint.DeleteRoleEndpoint
  nameWithType.vb: DeleteRoleEndpoint.New
- uid: Api.Endpoints.Admin.Roles.DeleteRoleEndpoint.HandleAsync(Api.Requests.DeleteRoleRequest,System.Threading.CancellationToken)
  name: HandleAsync(DeleteRoleRequest, CancellationToken)
  href: api/Api.Endpoints.Admin.Roles.DeleteRoleEndpoint.html#Api_Endpoints_Admin_Roles_DeleteRoleEndpoint_HandleAsync_Api_Requests_DeleteRoleRequest_System_Threading_CancellationToken_
  commentId: M:Api.Endpoints.Admin.Roles.DeleteRoleEndpoint.HandleAsync(Api.Requests.DeleteRoleRequest,System.Threading.CancellationToken)
  fullName: Api.Endpoints.Admin.Roles.DeleteRoleEndpoint.HandleAsync(Api.Requests.DeleteRoleRequest, System.Threading.CancellationToken)
  nameWithType: DeleteRoleEndpoint.HandleAsync(DeleteRoleRequest, CancellationToken)
- uid: Api.Endpoints.Admin.Roles.DeleteRoleEndpoint.HandleAsync*
  name: HandleAsync
  href: api/Api.Endpoints.Admin.Roles.DeleteRoleEndpoint.html#Api_Endpoints_Admin_Roles_DeleteRoleEndpoint_HandleAsync_
  commentId: Overload:Api.Endpoints.Admin.Roles.DeleteRoleEndpoint.HandleAsync
  isSpec: "True"
  fullName: Api.Endpoints.Admin.Roles.DeleteRoleEndpoint.HandleAsync
  nameWithType: DeleteRoleEndpoint.HandleAsync
- uid: Api.Endpoints.Admin.Roles.ReadRolesEndpoint
  name: ReadRolesEndpoint
  href: api/Api.Endpoints.Admin.Roles.ReadRolesEndpoint.html
  commentId: T:Api.Endpoints.Admin.Roles.ReadRolesEndpoint
  fullName: Api.Endpoints.Admin.Roles.ReadRolesEndpoint
  nameWithType: ReadRolesEndpoint
- uid: Api.Endpoints.Admin.Roles.ReadRolesEndpoint.#ctor(System.IServiceProvider)
  name: ReadRolesEndpoint(IServiceProvider)
  href: api/Api.Endpoints.Admin.Roles.ReadRolesEndpoint.html#Api_Endpoints_Admin_Roles_ReadRolesEndpoint__ctor_System_IServiceProvider_
  commentId: M:Api.Endpoints.Admin.Roles.ReadRolesEndpoint.#ctor(System.IServiceProvider)
  name.vb: New(IServiceProvider)
  fullName: Api.Endpoints.Admin.Roles.ReadRolesEndpoint.ReadRolesEndpoint(System.IServiceProvider)
  fullName.vb: Api.Endpoints.Admin.Roles.ReadRolesEndpoint.New(System.IServiceProvider)
  nameWithType: ReadRolesEndpoint.ReadRolesEndpoint(IServiceProvider)
  nameWithType.vb: ReadRolesEndpoint.New(IServiceProvider)
- uid: Api.Endpoints.Admin.Roles.ReadRolesEndpoint.#ctor*
  name: ReadRolesEndpoint
  href: api/Api.Endpoints.Admin.Roles.ReadRolesEndpoint.html#Api_Endpoints_Admin_Roles_ReadRolesEndpoint__ctor_
  commentId: Overload:Api.Endpoints.Admin.Roles.ReadRolesEndpoint.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Api.Endpoints.Admin.Roles.ReadRolesEndpoint.ReadRolesEndpoint
  fullName.vb: Api.Endpoints.Admin.Roles.ReadRolesEndpoint.New
  nameWithType: ReadRolesEndpoint.ReadRolesEndpoint
  nameWithType.vb: ReadRolesEndpoint.New
- uid: Api.Endpoints.Admin.Roles.ReadRolesEndpoint.HandleAsync(System.Threading.CancellationToken)
  name: HandleAsync(CancellationToken)
  href: api/Api.Endpoints.Admin.Roles.ReadRolesEndpoint.html#Api_Endpoints_Admin_Roles_ReadRolesEndpoint_HandleAsync_System_Threading_CancellationToken_
  commentId: M:Api.Endpoints.Admin.Roles.ReadRolesEndpoint.HandleAsync(System.Threading.CancellationToken)
  fullName: Api.Endpoints.Admin.Roles.ReadRolesEndpoint.HandleAsync(System.Threading.CancellationToken)
  nameWithType: ReadRolesEndpoint.HandleAsync(CancellationToken)
- uid: Api.Endpoints.Admin.Roles.ReadRolesEndpoint.HandleAsync*
  name: HandleAsync
  href: api/Api.Endpoints.Admin.Roles.ReadRolesEndpoint.html#Api_Endpoints_Admin_Roles_ReadRolesEndpoint_HandleAsync_
  commentId: Overload:Api.Endpoints.Admin.Roles.ReadRolesEndpoint.HandleAsync
  isSpec: "True"
  fullName: Api.Endpoints.Admin.Roles.ReadRolesEndpoint.HandleAsync
  nameWithType: ReadRolesEndpoint.HandleAsync
- uid: Api.Endpoints.Admin.Roles.UpdateRoleEndpoint
  name: UpdateRoleEndpoint
  href: api/Api.Endpoints.Admin.Roles.UpdateRoleEndpoint.html
  commentId: T:Api.Endpoints.Admin.Roles.UpdateRoleEndpoint
  fullName: Api.Endpoints.Admin.Roles.UpdateRoleEndpoint
  nameWithType: UpdateRoleEndpoint
- uid: Api.Endpoints.Admin.Roles.UpdateRoleEndpoint.#ctor(System.IServiceProvider)
  name: UpdateRoleEndpoint(IServiceProvider)
  href: api/Api.Endpoints.Admin.Roles.UpdateRoleEndpoint.html#Api_Endpoints_Admin_Roles_UpdateRoleEndpoint__ctor_System_IServiceProvider_
  commentId: M:Api.Endpoints.Admin.Roles.UpdateRoleEndpoint.#ctor(System.IServiceProvider)
  name.vb: New(IServiceProvider)
  fullName: Api.Endpoints.Admin.Roles.UpdateRoleEndpoint.UpdateRoleEndpoint(System.IServiceProvider)
  fullName.vb: Api.Endpoints.Admin.Roles.UpdateRoleEndpoint.New(System.IServiceProvider)
  nameWithType: UpdateRoleEndpoint.UpdateRoleEndpoint(IServiceProvider)
  nameWithType.vb: UpdateRoleEndpoint.New(IServiceProvider)
- uid: Api.Endpoints.Admin.Roles.UpdateRoleEndpoint.#ctor*
  name: UpdateRoleEndpoint
  href: api/Api.Endpoints.Admin.Roles.UpdateRoleEndpoint.html#Api_Endpoints_Admin_Roles_UpdateRoleEndpoint__ctor_
  commentId: Overload:Api.Endpoints.Admin.Roles.UpdateRoleEndpoint.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Api.Endpoints.Admin.Roles.UpdateRoleEndpoint.UpdateRoleEndpoint
  fullName.vb: Api.Endpoints.Admin.Roles.UpdateRoleEndpoint.New
  nameWithType: UpdateRoleEndpoint.UpdateRoleEndpoint
  nameWithType.vb: UpdateRoleEndpoint.New
- uid: Api.Endpoints.Admin.Roles.UpdateRoleEndpoint.HandleAsync(Api.Requests.UpdateRoleRequest,System.Threading.CancellationToken)
  name: HandleAsync(UpdateRoleRequest, CancellationToken)
  href: api/Api.Endpoints.Admin.Roles.UpdateRoleEndpoint.html#Api_Endpoints_Admin_Roles_UpdateRoleEndpoint_HandleAsync_Api_Requests_UpdateRoleRequest_System_Threading_CancellationToken_
  commentId: M:Api.Endpoints.Admin.Roles.UpdateRoleEndpoint.HandleAsync(Api.Requests.UpdateRoleRequest,System.Threading.CancellationToken)
  fullName: Api.Endpoints.Admin.Roles.UpdateRoleEndpoint.HandleAsync(Api.Requests.UpdateRoleRequest, System.Threading.CancellationToken)
  nameWithType: UpdateRoleEndpoint.HandleAsync(UpdateRoleRequest, CancellationToken)
- uid: Api.Endpoints.Admin.Roles.UpdateRoleEndpoint.HandleAsync*
  name: HandleAsync
  href: api/Api.Endpoints.Admin.Roles.UpdateRoleEndpoint.html#Api_Endpoints_Admin_Roles_UpdateRoleEndpoint_HandleAsync_
  commentId: Overload:Api.Endpoints.Admin.Roles.UpdateRoleEndpoint.HandleAsync
  isSpec: "True"
  fullName: Api.Endpoints.Admin.Roles.UpdateRoleEndpoint.HandleAsync
  nameWithType: UpdateRoleEndpoint.HandleAsync
- uid: Api.Endpoints.Applications
  name: Api.Endpoints.Applications
  href: api/Api.Endpoints.Applications.html
  commentId: N:Api.Endpoints.Applications
  fullName: Api.Endpoints.Applications
  nameWithType: Api.Endpoints.Applications
- uid: Api.Endpoints.Applications.CreateApplicationEndpoint
  name: CreateApplicationEndpoint
  href: api/Api.Endpoints.Applications.CreateApplicationEndpoint.html
  commentId: T:Api.Endpoints.Applications.CreateApplicationEndpoint
  fullName: Api.Endpoints.Applications.CreateApplicationEndpoint
  nameWithType: CreateApplicationEndpoint
- uid: Api.Endpoints.Applications.CreateApplicationEndpoint.#ctor(System.IServiceProvider)
  name: CreateApplicationEndpoint(IServiceProvider)
  href: api/Api.Endpoints.Applications.CreateApplicationEndpoint.html#Api_Endpoints_Applications_CreateApplicationEndpoint__ctor_System_IServiceProvider_
  commentId: M:Api.Endpoints.Applications.CreateApplicationEndpoint.#ctor(System.IServiceProvider)
  name.vb: New(IServiceProvider)
  fullName: Api.Endpoints.Applications.CreateApplicationEndpoint.CreateApplicationEndpoint(System.IServiceProvider)
  fullName.vb: Api.Endpoints.Applications.CreateApplicationEndpoint.New(System.IServiceProvider)
  nameWithType: CreateApplicationEndpoint.CreateApplicationEndpoint(IServiceProvider)
  nameWithType.vb: CreateApplicationEndpoint.New(IServiceProvider)
- uid: Api.Endpoints.Applications.CreateApplicationEndpoint.#ctor*
  name: CreateApplicationEndpoint
  href: api/Api.Endpoints.Applications.CreateApplicationEndpoint.html#Api_Endpoints_Applications_CreateApplicationEndpoint__ctor_
  commentId: Overload:Api.Endpoints.Applications.CreateApplicationEndpoint.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Api.Endpoints.Applications.CreateApplicationEndpoint.CreateApplicationEndpoint
  fullName.vb: Api.Endpoints.Applications.CreateApplicationEndpoint.New
  nameWithType: CreateApplicationEndpoint.CreateApplicationEndpoint
  nameWithType.vb: CreateApplicationEndpoint.New
- uid: Api.Endpoints.Applications.CreateApplicationEndpoint.HandleAsync(Api.Requests.CreateApplicationRequest,System.Threading.CancellationToken)
  name: HandleAsync(CreateApplicationRequest, CancellationToken)
  href: api/Api.Endpoints.Applications.CreateApplicationEndpoint.html#Api_Endpoints_Applications_CreateApplicationEndpoint_HandleAsync_Api_Requests_CreateApplicationRequest_System_Threading_CancellationToken_
  commentId: M:Api.Endpoints.Applications.CreateApplicationEndpoint.HandleAsync(Api.Requests.CreateApplicationRequest,System.Threading.CancellationToken)
  fullName: Api.Endpoints.Applications.CreateApplicationEndpoint.HandleAsync(Api.Requests.CreateApplicationRequest, System.Threading.CancellationToken)
  nameWithType: CreateApplicationEndpoint.HandleAsync(CreateApplicationRequest, CancellationToken)
- uid: Api.Endpoints.Applications.CreateApplicationEndpoint.HandleAsync*
  name: HandleAsync
  href: api/Api.Endpoints.Applications.CreateApplicationEndpoint.html#Api_Endpoints_Applications_CreateApplicationEndpoint_HandleAsync_
  commentId: Overload:Api.Endpoints.Applications.CreateApplicationEndpoint.HandleAsync
  isSpec: "True"
  fullName: Api.Endpoints.Applications.CreateApplicationEndpoint.HandleAsync
  nameWithType: CreateApplicationEndpoint.HandleAsync
- uid: Api.Endpoints.Applications.CreateApplicationSecretEndpoint
  name: CreateApplicationSecretEndpoint
  href: api/Api.Endpoints.Applications.CreateApplicationSecretEndpoint.html
  commentId: T:Api.Endpoints.Applications.CreateApplicationSecretEndpoint
  fullName: Api.Endpoints.Applications.CreateApplicationSecretEndpoint
  nameWithType: CreateApplicationSecretEndpoint
- uid: Api.Endpoints.Applications.CreateApplicationSecretEndpoint.#ctor(System.IServiceProvider)
  name: CreateApplicationSecretEndpoint(IServiceProvider)
  href: api/Api.Endpoints.Applications.CreateApplicationSecretEndpoint.html#Api_Endpoints_Applications_CreateApplicationSecretEndpoint__ctor_System_IServiceProvider_
  commentId: M:Api.Endpoints.Applications.CreateApplicationSecretEndpoint.#ctor(System.IServiceProvider)
  name.vb: New(IServiceProvider)
  fullName: Api.Endpoints.Applications.CreateApplicationSecretEndpoint.CreateApplicationSecretEndpoint(System.IServiceProvider)
  fullName.vb: Api.Endpoints.Applications.CreateApplicationSecretEndpoint.New(System.IServiceProvider)
  nameWithType: CreateApplicationSecretEndpoint.CreateApplicationSecretEndpoint(IServiceProvider)
  nameWithType.vb: CreateApplicationSecretEndpoint.New(IServiceProvider)
- uid: Api.Endpoints.Applications.CreateApplicationSecretEndpoint.#ctor*
  name: CreateApplicationSecretEndpoint
  href: api/Api.Endpoints.Applications.CreateApplicationSecretEndpoint.html#Api_Endpoints_Applications_CreateApplicationSecretEndpoint__ctor_
  commentId: Overload:Api.Endpoints.Applications.CreateApplicationSecretEndpoint.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Api.Endpoints.Applications.CreateApplicationSecretEndpoint.CreateApplicationSecretEndpoint
  fullName.vb: Api.Endpoints.Applications.CreateApplicationSecretEndpoint.New
  nameWithType: CreateApplicationSecretEndpoint.CreateApplicationSecretEndpoint
  nameWithType.vb: CreateApplicationSecretEndpoint.New
- uid: Api.Endpoints.Applications.CreateApplicationSecretEndpoint.HandleAsync(Api.Requests.CreateApplicationSecretRequest,System.Threading.CancellationToken)
  name: HandleAsync(CreateApplicationSecretRequest, CancellationToken)
  href: api/Api.Endpoints.Applications.CreateApplicationSecretEndpoint.html#Api_Endpoints_Applications_CreateApplicationSecretEndpoint_HandleAsync_Api_Requests_CreateApplicationSecretRequest_System_Threading_CancellationToken_
  commentId: M:Api.Endpoints.Applications.CreateApplicationSecretEndpoint.HandleAsync(Api.Requests.CreateApplicationSecretRequest,System.Threading.CancellationToken)
  fullName: Api.Endpoints.Applications.CreateApplicationSecretEndpoint.HandleAsync(Api.Requests.CreateApplicationSecretRequest, System.Threading.CancellationToken)
  nameWithType: CreateApplicationSecretEndpoint.HandleAsync(CreateApplicationSecretRequest, CancellationToken)
- uid: Api.Endpoints.Applications.CreateApplicationSecretEndpoint.HandleAsync*
  name: HandleAsync
  href: api/Api.Endpoints.Applications.CreateApplicationSecretEndpoint.html#Api_Endpoints_Applications_CreateApplicationSecretEndpoint_HandleAsync_
  commentId: Overload:Api.Endpoints.Applications.CreateApplicationSecretEndpoint.HandleAsync
  isSpec: "True"
  fullName: Api.Endpoints.Applications.CreateApplicationSecretEndpoint.HandleAsync
  nameWithType: CreateApplicationSecretEndpoint.HandleAsync
- uid: Api.Endpoints.Applications.DeleteByNameApplicationEndpoint
  name: DeleteByNameApplicationEndpoint
  href: api/Api.Endpoints.Applications.DeleteByNameApplicationEndpoint.html
  commentId: T:Api.Endpoints.Applications.DeleteByNameApplicationEndpoint
  fullName: Api.Endpoints.Applications.DeleteByNameApplicationEndpoint
  nameWithType: DeleteByNameApplicationEndpoint
- uid: Api.Endpoints.Applications.DeleteByNameApplicationEndpoint.#ctor(System.IServiceProvider)
  name: DeleteByNameApplicationEndpoint(IServiceProvider)
  href: api/Api.Endpoints.Applications.DeleteByNameApplicationEndpoint.html#Api_Endpoints_Applications_DeleteByNameApplicationEndpoint__ctor_System_IServiceProvider_
  commentId: M:Api.Endpoints.Applications.DeleteByNameApplicationEndpoint.#ctor(System.IServiceProvider)
  name.vb: New(IServiceProvider)
  fullName: Api.Endpoints.Applications.DeleteByNameApplicationEndpoint.DeleteByNameApplicationEndpoint(System.IServiceProvider)
  fullName.vb: Api.Endpoints.Applications.DeleteByNameApplicationEndpoint.New(System.IServiceProvider)
  nameWithType: DeleteByNameApplicationEndpoint.DeleteByNameApplicationEndpoint(IServiceProvider)
  nameWithType.vb: DeleteByNameApplicationEndpoint.New(IServiceProvider)
- uid: Api.Endpoints.Applications.DeleteByNameApplicationEndpoint.#ctor*
  name: DeleteByNameApplicationEndpoint
  href: api/Api.Endpoints.Applications.DeleteByNameApplicationEndpoint.html#Api_Endpoints_Applications_DeleteByNameApplicationEndpoint__ctor_
  commentId: Overload:Api.Endpoints.Applications.DeleteByNameApplicationEndpoint.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Api.Endpoints.Applications.DeleteByNameApplicationEndpoint.DeleteByNameApplicationEndpoint
  fullName.vb: Api.Endpoints.Applications.DeleteByNameApplicationEndpoint.New
  nameWithType: DeleteByNameApplicationEndpoint.DeleteByNameApplicationEndpoint
  nameWithType.vb: DeleteByNameApplicationEndpoint.New
- uid: Api.Endpoints.Applications.DeleteByNameApplicationEndpoint.HandleAsync(Api.Requests.DeleteApplicationByNameRequest,System.Threading.CancellationToken)
  name: HandleAsync(DeleteApplicationByNameRequest, CancellationToken)
  href: api/Api.Endpoints.Applications.DeleteByNameApplicationEndpoint.html#Api_Endpoints_Applications_DeleteByNameApplicationEndpoint_HandleAsync_Api_Requests_DeleteApplicationByNameRequest_System_Threading_CancellationToken_
  commentId: M:Api.Endpoints.Applications.DeleteByNameApplicationEndpoint.HandleAsync(Api.Requests.DeleteApplicationByNameRequest,System.Threading.CancellationToken)
  fullName: Api.Endpoints.Applications.DeleteByNameApplicationEndpoint.HandleAsync(Api.Requests.DeleteApplicationByNameRequest, System.Threading.CancellationToken)
  nameWithType: DeleteByNameApplicationEndpoint.HandleAsync(DeleteApplicationByNameRequest, CancellationToken)
- uid: Api.Endpoints.Applications.DeleteByNameApplicationEndpoint.HandleAsync*
  name: HandleAsync
  href: api/Api.Endpoints.Applications.DeleteByNameApplicationEndpoint.html#Api_Endpoints_Applications_DeleteByNameApplicationEndpoint_HandleAsync_
  commentId: Overload:Api.Endpoints.Applications.DeleteByNameApplicationEndpoint.HandleAsync
  isSpec: "True"
  fullName: Api.Endpoints.Applications.DeleteByNameApplicationEndpoint.HandleAsync
  nameWithType: DeleteByNameApplicationEndpoint.HandleAsync
- uid: Api.Endpoints.Applications.ReadApplicationsEndpoint
  name: ReadApplicationsEndpoint
  href: api/Api.Endpoints.Applications.ReadApplicationsEndpoint.html
  commentId: T:Api.Endpoints.Applications.ReadApplicationsEndpoint
  fullName: Api.Endpoints.Applications.ReadApplicationsEndpoint
  nameWithType: ReadApplicationsEndpoint
- uid: Api.Endpoints.Applications.ReadApplicationsEndpoint.#ctor(System.IServiceProvider)
  name: ReadApplicationsEndpoint(IServiceProvider)
  href: api/Api.Endpoints.Applications.ReadApplicationsEndpoint.html#Api_Endpoints_Applications_ReadApplicationsEndpoint__ctor_System_IServiceProvider_
  commentId: M:Api.Endpoints.Applications.ReadApplicationsEndpoint.#ctor(System.IServiceProvider)
  name.vb: New(IServiceProvider)
  fullName: Api.Endpoints.Applications.ReadApplicationsEndpoint.ReadApplicationsEndpoint(System.IServiceProvider)
  fullName.vb: Api.Endpoints.Applications.ReadApplicationsEndpoint.New(System.IServiceProvider)
  nameWithType: ReadApplicationsEndpoint.ReadApplicationsEndpoint(IServiceProvider)
  nameWithType.vb: ReadApplicationsEndpoint.New(IServiceProvider)
- uid: Api.Endpoints.Applications.ReadApplicationsEndpoint.#ctor*
  name: ReadApplicationsEndpoint
  href: api/Api.Endpoints.Applications.ReadApplicationsEndpoint.html#Api_Endpoints_Applications_ReadApplicationsEndpoint__ctor_
  commentId: Overload:Api.Endpoints.Applications.ReadApplicationsEndpoint.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Api.Endpoints.Applications.ReadApplicationsEndpoint.ReadApplicationsEndpoint
  fullName.vb: Api.Endpoints.Applications.ReadApplicationsEndpoint.New
  nameWithType: ReadApplicationsEndpoint.ReadApplicationsEndpoint
  nameWithType.vb: ReadApplicationsEndpoint.New
- uid: Api.Endpoints.Applications.ReadApplicationsEndpoint.HandleAsync(System.Threading.CancellationToken)
  name: HandleAsync(CancellationToken)
  href: api/Api.Endpoints.Applications.ReadApplicationsEndpoint.html#Api_Endpoints_Applications_ReadApplicationsEndpoint_HandleAsync_System_Threading_CancellationToken_
  commentId: M:Api.Endpoints.Applications.ReadApplicationsEndpoint.HandleAsync(System.Threading.CancellationToken)
  fullName: Api.Endpoints.Applications.ReadApplicationsEndpoint.HandleAsync(System.Threading.CancellationToken)
  nameWithType: ReadApplicationsEndpoint.HandleAsync(CancellationToken)
- uid: Api.Endpoints.Applications.ReadApplicationsEndpoint.HandleAsync*
  name: HandleAsync
  href: api/Api.Endpoints.Applications.ReadApplicationsEndpoint.html#Api_Endpoints_Applications_ReadApplicationsEndpoint_HandleAsync_
  commentId: Overload:Api.Endpoints.Applications.ReadApplicationsEndpoint.HandleAsync
  isSpec: "True"
  fullName: Api.Endpoints.Applications.ReadApplicationsEndpoint.HandleAsync
  nameWithType: ReadApplicationsEndpoint.HandleAsync
- uid: Api.Endpoints.Applications.ReadByNameApplicationEndpoint
  name: ReadByNameApplicationEndpoint
  href: api/Api.Endpoints.Applications.ReadByNameApplicationEndpoint.html
  commentId: T:Api.Endpoints.Applications.ReadByNameApplicationEndpoint
  fullName: Api.Endpoints.Applications.ReadByNameApplicationEndpoint
  nameWithType: ReadByNameApplicationEndpoint
- uid: Api.Endpoints.Applications.ReadByNameApplicationEndpoint.#ctor(System.IServiceProvider)
  name: ReadByNameApplicationEndpoint(IServiceProvider)
  href: api/Api.Endpoints.Applications.ReadByNameApplicationEndpoint.html#Api_Endpoints_Applications_ReadByNameApplicationEndpoint__ctor_System_IServiceProvider_
  commentId: M:Api.Endpoints.Applications.ReadByNameApplicationEndpoint.#ctor(System.IServiceProvider)
  name.vb: New(IServiceProvider)
  fullName: Api.Endpoints.Applications.ReadByNameApplicationEndpoint.ReadByNameApplicationEndpoint(System.IServiceProvider)
  fullName.vb: Api.Endpoints.Applications.ReadByNameApplicationEndpoint.New(System.IServiceProvider)
  nameWithType: ReadByNameApplicationEndpoint.ReadByNameApplicationEndpoint(IServiceProvider)
  nameWithType.vb: ReadByNameApplicationEndpoint.New(IServiceProvider)
- uid: Api.Endpoints.Applications.ReadByNameApplicationEndpoint.#ctor*
  name: ReadByNameApplicationEndpoint
  href: api/Api.Endpoints.Applications.ReadByNameApplicationEndpoint.html#Api_Endpoints_Applications_ReadByNameApplicationEndpoint__ctor_
  commentId: Overload:Api.Endpoints.Applications.ReadByNameApplicationEndpoint.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Api.Endpoints.Applications.ReadByNameApplicationEndpoint.ReadByNameApplicationEndpoint
  fullName.vb: Api.Endpoints.Applications.ReadByNameApplicationEndpoint.New
  nameWithType: ReadByNameApplicationEndpoint.ReadByNameApplicationEndpoint
  nameWithType.vb: ReadByNameApplicationEndpoint.New
- uid: Api.Endpoints.Applications.ReadByNameApplicationEndpoint.HandleAsync(Api.Requests.ReadApplicationByNameRequest,System.Threading.CancellationToken)
  name: HandleAsync(ReadApplicationByNameRequest, CancellationToken)
  href: api/Api.Endpoints.Applications.ReadByNameApplicationEndpoint.html#Api_Endpoints_Applications_ReadByNameApplicationEndpoint_HandleAsync_Api_Requests_ReadApplicationByNameRequest_System_Threading_CancellationToken_
  commentId: M:Api.Endpoints.Applications.ReadByNameApplicationEndpoint.HandleAsync(Api.Requests.ReadApplicationByNameRequest,System.Threading.CancellationToken)
  fullName: Api.Endpoints.Applications.ReadByNameApplicationEndpoint.HandleAsync(Api.Requests.ReadApplicationByNameRequest, System.Threading.CancellationToken)
  nameWithType: ReadByNameApplicationEndpoint.HandleAsync(ReadApplicationByNameRequest, CancellationToken)
- uid: Api.Endpoints.Applications.ReadByNameApplicationEndpoint.HandleAsync*
  name: HandleAsync
  href: api/Api.Endpoints.Applications.ReadByNameApplicationEndpoint.html#Api_Endpoints_Applications_ReadByNameApplicationEndpoint_HandleAsync_
  commentId: Overload:Api.Endpoints.Applications.ReadByNameApplicationEndpoint.HandleAsync
  isSpec: "True"
  fullName: Api.Endpoints.Applications.ReadByNameApplicationEndpoint.HandleAsync
  nameWithType: ReadByNameApplicationEndpoint.HandleAsync
- uid: Api.Endpoints.Applications.UpdateByNameApplicationEndpoint
  name: UpdateByNameApplicationEndpoint
  href: api/Api.Endpoints.Applications.UpdateByNameApplicationEndpoint.html
  commentId: T:Api.Endpoints.Applications.UpdateByNameApplicationEndpoint
  fullName: Api.Endpoints.Applications.UpdateByNameApplicationEndpoint
  nameWithType: UpdateByNameApplicationEndpoint
- uid: Api.Endpoints.Applications.UpdateByNameApplicationEndpoint.#ctor(System.IServiceProvider)
  name: UpdateByNameApplicationEndpoint(IServiceProvider)
  href: api/Api.Endpoints.Applications.UpdateByNameApplicationEndpoint.html#Api_Endpoints_Applications_UpdateByNameApplicationEndpoint__ctor_System_IServiceProvider_
  commentId: M:Api.Endpoints.Applications.UpdateByNameApplicationEndpoint.#ctor(System.IServiceProvider)
  name.vb: New(IServiceProvider)
  fullName: Api.Endpoints.Applications.UpdateByNameApplicationEndpoint.UpdateByNameApplicationEndpoint(System.IServiceProvider)
  fullName.vb: Api.Endpoints.Applications.UpdateByNameApplicationEndpoint.New(System.IServiceProvider)
  nameWithType: UpdateByNameApplicationEndpoint.UpdateByNameApplicationEndpoint(IServiceProvider)
  nameWithType.vb: UpdateByNameApplicationEndpoint.New(IServiceProvider)
- uid: Api.Endpoints.Applications.UpdateByNameApplicationEndpoint.#ctor*
  name: UpdateByNameApplicationEndpoint
  href: api/Api.Endpoints.Applications.UpdateByNameApplicationEndpoint.html#Api_Endpoints_Applications_UpdateByNameApplicationEndpoint__ctor_
  commentId: Overload:Api.Endpoints.Applications.UpdateByNameApplicationEndpoint.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Api.Endpoints.Applications.UpdateByNameApplicationEndpoint.UpdateByNameApplicationEndpoint
  fullName.vb: Api.Endpoints.Applications.UpdateByNameApplicationEndpoint.New
  nameWithType: UpdateByNameApplicationEndpoint.UpdateByNameApplicationEndpoint
  nameWithType.vb: UpdateByNameApplicationEndpoint.New
- uid: Api.Endpoints.Applications.UpdateByNameApplicationEndpoint.HandleAsync(Api.Requests.UpdateApplicationByNameRequest,System.Threading.CancellationToken)
  name: HandleAsync(UpdateApplicationByNameRequest, CancellationToken)
  href: api/Api.Endpoints.Applications.UpdateByNameApplicationEndpoint.html#Api_Endpoints_Applications_UpdateByNameApplicationEndpoint_HandleAsync_Api_Requests_UpdateApplicationByNameRequest_System_Threading_CancellationToken_
  commentId: M:Api.Endpoints.Applications.UpdateByNameApplicationEndpoint.HandleAsync(Api.Requests.UpdateApplicationByNameRequest,System.Threading.CancellationToken)
  fullName: Api.Endpoints.Applications.UpdateByNameApplicationEndpoint.HandleAsync(Api.Requests.UpdateApplicationByNameRequest, System.Threading.CancellationToken)
  nameWithType: UpdateByNameApplicationEndpoint.HandleAsync(UpdateApplicationByNameRequest, CancellationToken)
- uid: Api.Endpoints.Applications.UpdateByNameApplicationEndpoint.HandleAsync*
  name: HandleAsync
  href: api/Api.Endpoints.Applications.UpdateByNameApplicationEndpoint.html#Api_Endpoints_Applications_UpdateByNameApplicationEndpoint_HandleAsync_
  commentId: Overload:Api.Endpoints.Applications.UpdateByNameApplicationEndpoint.HandleAsync
  isSpec: "True"
  fullName: Api.Endpoints.Applications.UpdateByNameApplicationEndpoint.HandleAsync
  nameWithType: UpdateByNameApplicationEndpoint.HandleAsync
- uid: Api.Endpoints.DeleteSessionEndpoint
  name: DeleteSessionEndpoint
  href: api/Api.Endpoints.DeleteSessionEndpoint.html
  commentId: T:Api.Endpoints.DeleteSessionEndpoint
  fullName: Api.Endpoints.DeleteSessionEndpoint
  nameWithType: DeleteSessionEndpoint
- uid: Api.Endpoints.DeleteSessionEndpoint.#ctor(System.IServiceProvider)
  name: DeleteSessionEndpoint(IServiceProvider)
  href: api/Api.Endpoints.DeleteSessionEndpoint.html#Api_Endpoints_DeleteSessionEndpoint__ctor_System_IServiceProvider_
  commentId: M:Api.Endpoints.DeleteSessionEndpoint.#ctor(System.IServiceProvider)
  name.vb: New(IServiceProvider)
  fullName: Api.Endpoints.DeleteSessionEndpoint.DeleteSessionEndpoint(System.IServiceProvider)
  fullName.vb: Api.Endpoints.DeleteSessionEndpoint.New(System.IServiceProvider)
  nameWithType: DeleteSessionEndpoint.DeleteSessionEndpoint(IServiceProvider)
  nameWithType.vb: DeleteSessionEndpoint.New(IServiceProvider)
- uid: Api.Endpoints.DeleteSessionEndpoint.#ctor*
  name: DeleteSessionEndpoint
  href: api/Api.Endpoints.DeleteSessionEndpoint.html#Api_Endpoints_DeleteSessionEndpoint__ctor_
  commentId: Overload:Api.Endpoints.DeleteSessionEndpoint.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Api.Endpoints.DeleteSessionEndpoint.DeleteSessionEndpoint
  fullName.vb: Api.Endpoints.DeleteSessionEndpoint.New
  nameWithType: DeleteSessionEndpoint.DeleteSessionEndpoint
  nameWithType.vb: DeleteSessionEndpoint.New
- uid: Api.Endpoints.DeleteSessionEndpoint.HandleAsync(Api.Requests.DeleteSessionRequest,System.Threading.CancellationToken)
  name: HandleAsync(DeleteSessionRequest, CancellationToken)
  href: api/Api.Endpoints.DeleteSessionEndpoint.html#Api_Endpoints_DeleteSessionEndpoint_HandleAsync_Api_Requests_DeleteSessionRequest_System_Threading_CancellationToken_
  commentId: M:Api.Endpoints.DeleteSessionEndpoint.HandleAsync(Api.Requests.DeleteSessionRequest,System.Threading.CancellationToken)
  fullName: Api.Endpoints.DeleteSessionEndpoint.HandleAsync(Api.Requests.DeleteSessionRequest, System.Threading.CancellationToken)
  nameWithType: DeleteSessionEndpoint.HandleAsync(DeleteSessionRequest, CancellationToken)
- uid: Api.Endpoints.DeleteSessionEndpoint.HandleAsync*
  name: HandleAsync
  href: api/Api.Endpoints.DeleteSessionEndpoint.html#Api_Endpoints_DeleteSessionEndpoint_HandleAsync_
  commentId: Overload:Api.Endpoints.DeleteSessionEndpoint.HandleAsync
  isSpec: "True"
  fullName: Api.Endpoints.DeleteSessionEndpoint.HandleAsync
  nameWithType: DeleteSessionEndpoint.HandleAsync
- uid: Api.Endpoints.OAuth
  name: Api.Endpoints.OAuth
  href: api/Api.Endpoints.OAuth.html
  commentId: N:Api.Endpoints.OAuth
  fullName: Api.Endpoints.OAuth
  nameWithType: Api.Endpoints.OAuth
- uid: Api.Endpoints.OAuth.AuthorizeEndpoint
  name: AuthorizeEndpoint
  href: api/Api.Endpoints.OAuth.AuthorizeEndpoint.html
  commentId: T:Api.Endpoints.OAuth.AuthorizeEndpoint
  fullName: Api.Endpoints.OAuth.AuthorizeEndpoint
  nameWithType: AuthorizeEndpoint
- uid: Api.Endpoints.OAuth.AuthorizeEndpoint.#ctor(System.IServiceProvider)
  name: AuthorizeEndpoint(IServiceProvider)
  href: api/Api.Endpoints.OAuth.AuthorizeEndpoint.html#Api_Endpoints_OAuth_AuthorizeEndpoint__ctor_System_IServiceProvider_
  commentId: M:Api.Endpoints.OAuth.AuthorizeEndpoint.#ctor(System.IServiceProvider)
  name.vb: New(IServiceProvider)
  fullName: Api.Endpoints.OAuth.AuthorizeEndpoint.AuthorizeEndpoint(System.IServiceProvider)
  fullName.vb: Api.Endpoints.OAuth.AuthorizeEndpoint.New(System.IServiceProvider)
  nameWithType: AuthorizeEndpoint.AuthorizeEndpoint(IServiceProvider)
  nameWithType.vb: AuthorizeEndpoint.New(IServiceProvider)
- uid: Api.Endpoints.OAuth.AuthorizeEndpoint.#ctor*
  name: AuthorizeEndpoint
  href: api/Api.Endpoints.OAuth.AuthorizeEndpoint.html#Api_Endpoints_OAuth_AuthorizeEndpoint__ctor_
  commentId: Overload:Api.Endpoints.OAuth.AuthorizeEndpoint.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Api.Endpoints.OAuth.AuthorizeEndpoint.AuthorizeEndpoint
  fullName.vb: Api.Endpoints.OAuth.AuthorizeEndpoint.New
  nameWithType: AuthorizeEndpoint.AuthorizeEndpoint
  nameWithType.vb: AuthorizeEndpoint.New
- uid: Api.Endpoints.OAuth.AuthorizeEndpoint.HandleAsync(Api.Requests.AuthorizeRequest,System.Threading.CancellationToken)
  name: HandleAsync(AuthorizeRequest, CancellationToken)
  href: api/Api.Endpoints.OAuth.AuthorizeEndpoint.html#Api_Endpoints_OAuth_AuthorizeEndpoint_HandleAsync_Api_Requests_AuthorizeRequest_System_Threading_CancellationToken_
  commentId: M:Api.Endpoints.OAuth.AuthorizeEndpoint.HandleAsync(Api.Requests.AuthorizeRequest,System.Threading.CancellationToken)
  fullName: Api.Endpoints.OAuth.AuthorizeEndpoint.HandleAsync(Api.Requests.AuthorizeRequest, System.Threading.CancellationToken)
  nameWithType: AuthorizeEndpoint.HandleAsync(AuthorizeRequest, CancellationToken)
- uid: Api.Endpoints.OAuth.AuthorizeEndpoint.HandleAsync*
  name: HandleAsync
  href: api/Api.Endpoints.OAuth.AuthorizeEndpoint.html#Api_Endpoints_OAuth_AuthorizeEndpoint_HandleAsync_
  commentId: Overload:Api.Endpoints.OAuth.AuthorizeEndpoint.HandleAsync
  isSpec: "True"
  fullName: Api.Endpoints.OAuth.AuthorizeEndpoint.HandleAsync
  nameWithType: AuthorizeEndpoint.HandleAsync
- uid: Api.Endpoints.OAuth.CreateDeviceCodeEndpoint
  name: CreateDeviceCodeEndpoint
  href: api/Api.Endpoints.OAuth.CreateDeviceCodeEndpoint.html
  commentId: T:Api.Endpoints.OAuth.CreateDeviceCodeEndpoint
  fullName: Api.Endpoints.OAuth.CreateDeviceCodeEndpoint
  nameWithType: CreateDeviceCodeEndpoint
- uid: Api.Endpoints.OAuth.CreateDeviceCodeEndpoint.#ctor(System.IServiceProvider)
  name: CreateDeviceCodeEndpoint(IServiceProvider)
  href: api/Api.Endpoints.OAuth.CreateDeviceCodeEndpoint.html#Api_Endpoints_OAuth_CreateDeviceCodeEndpoint__ctor_System_IServiceProvider_
  commentId: M:Api.Endpoints.OAuth.CreateDeviceCodeEndpoint.#ctor(System.IServiceProvider)
  name.vb: New(IServiceProvider)
  fullName: Api.Endpoints.OAuth.CreateDeviceCodeEndpoint.CreateDeviceCodeEndpoint(System.IServiceProvider)
  fullName.vb: Api.Endpoints.OAuth.CreateDeviceCodeEndpoint.New(System.IServiceProvider)
  nameWithType: CreateDeviceCodeEndpoint.CreateDeviceCodeEndpoint(IServiceProvider)
  nameWithType.vb: CreateDeviceCodeEndpoint.New(IServiceProvider)
- uid: Api.Endpoints.OAuth.CreateDeviceCodeEndpoint.#ctor*
  name: CreateDeviceCodeEndpoint
  href: api/Api.Endpoints.OAuth.CreateDeviceCodeEndpoint.html#Api_Endpoints_OAuth_CreateDeviceCodeEndpoint__ctor_
  commentId: Overload:Api.Endpoints.OAuth.CreateDeviceCodeEndpoint.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Api.Endpoints.OAuth.CreateDeviceCodeEndpoint.CreateDeviceCodeEndpoint
  fullName.vb: Api.Endpoints.OAuth.CreateDeviceCodeEndpoint.New
  nameWithType: CreateDeviceCodeEndpoint.CreateDeviceCodeEndpoint
  nameWithType.vb: CreateDeviceCodeEndpoint.New
- uid: Api.Endpoints.OAuth.CreateDeviceCodeEndpoint.HandleAsync(System.Threading.CancellationToken)
  name: HandleAsync(CancellationToken)
  href: api/Api.Endpoints.OAuth.CreateDeviceCodeEndpoint.html#Api_Endpoints_OAuth_CreateDeviceCodeEndpoint_HandleAsync_System_Threading_CancellationToken_
  commentId: M:Api.Endpoints.OAuth.CreateDeviceCodeEndpoint.HandleAsync(System.Threading.CancellationToken)
  fullName: Api.Endpoints.OAuth.CreateDeviceCodeEndpoint.HandleAsync(System.Threading.CancellationToken)
  nameWithType: CreateDeviceCodeEndpoint.HandleAsync(CancellationToken)
- uid: Api.Endpoints.OAuth.CreateDeviceCodeEndpoint.HandleAsync*
  name: HandleAsync
  href: api/Api.Endpoints.OAuth.CreateDeviceCodeEndpoint.html#Api_Endpoints_OAuth_CreateDeviceCodeEndpoint_HandleAsync_
  commentId: Overload:Api.Endpoints.OAuth.CreateDeviceCodeEndpoint.HandleAsync
  isSpec: "True"
  fullName: Api.Endpoints.OAuth.CreateDeviceCodeEndpoint.HandleAsync
  nameWithType: CreateDeviceCodeEndpoint.HandleAsync
- uid: Api.Endpoints.OAuth.TokenEndpoint
  name: TokenEndpoint
  href: api/Api.Endpoints.OAuth.TokenEndpoint.html
  commentId: T:Api.Endpoints.OAuth.TokenEndpoint
  fullName: Api.Endpoints.OAuth.TokenEndpoint
  nameWithType: TokenEndpoint
- uid: Api.Endpoints.OAuth.TokenEndpoint.#ctor(System.IServiceProvider)
  name: TokenEndpoint(IServiceProvider)
  href: api/Api.Endpoints.OAuth.TokenEndpoint.html#Api_Endpoints_OAuth_TokenEndpoint__ctor_System_IServiceProvider_
  commentId: M:Api.Endpoints.OAuth.TokenEndpoint.#ctor(System.IServiceProvider)
  name.vb: New(IServiceProvider)
  fullName: Api.Endpoints.OAuth.TokenEndpoint.TokenEndpoint(System.IServiceProvider)
  fullName.vb: Api.Endpoints.OAuth.TokenEndpoint.New(System.IServiceProvider)
  nameWithType: TokenEndpoint.TokenEndpoint(IServiceProvider)
  nameWithType.vb: TokenEndpoint.New(IServiceProvider)
- uid: Api.Endpoints.OAuth.TokenEndpoint.#ctor*
  name: TokenEndpoint
  href: api/Api.Endpoints.OAuth.TokenEndpoint.html#Api_Endpoints_OAuth_TokenEndpoint__ctor_
  commentId: Overload:Api.Endpoints.OAuth.TokenEndpoint.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Api.Endpoints.OAuth.TokenEndpoint.TokenEndpoint
  fullName.vb: Api.Endpoints.OAuth.TokenEndpoint.New
  nameWithType: TokenEndpoint.TokenEndpoint
  nameWithType.vb: TokenEndpoint.New
- uid: Api.Endpoints.OAuth.TokenEndpoint.HandleAsync(Api.Requests.TokenRequest,System.Threading.CancellationToken)
  name: HandleAsync(TokenRequest, CancellationToken)
  href: api/Api.Endpoints.OAuth.TokenEndpoint.html#Api_Endpoints_OAuth_TokenEndpoint_HandleAsync_Api_Requests_TokenRequest_System_Threading_CancellationToken_
  commentId: M:Api.Endpoints.OAuth.TokenEndpoint.HandleAsync(Api.Requests.TokenRequest,System.Threading.CancellationToken)
  fullName: Api.Endpoints.OAuth.TokenEndpoint.HandleAsync(Api.Requests.TokenRequest, System.Threading.CancellationToken)
  nameWithType: TokenEndpoint.HandleAsync(TokenRequest, CancellationToken)
- uid: Api.Endpoints.OAuth.TokenEndpoint.HandleAsync*
  name: HandleAsync
  href: api/Api.Endpoints.OAuth.TokenEndpoint.html#Api_Endpoints_OAuth_TokenEndpoint_HandleAsync_
  commentId: Overload:Api.Endpoints.OAuth.TokenEndpoint.HandleAsync
  isSpec: "True"
  fullName: Api.Endpoints.OAuth.TokenEndpoint.HandleAsync
  nameWithType: TokenEndpoint.HandleAsync
- uid: Api.Endpoints.ReadSessionsEndpoint
  name: ReadSessionsEndpoint
  href: api/Api.Endpoints.ReadSessionsEndpoint.html
  commentId: T:Api.Endpoints.ReadSessionsEndpoint
  fullName: Api.Endpoints.ReadSessionsEndpoint
  nameWithType: ReadSessionsEndpoint
- uid: Api.Endpoints.ReadSessionsEndpoint.#ctor(System.IServiceProvider)
  name: ReadSessionsEndpoint(IServiceProvider)
  href: api/Api.Endpoints.ReadSessionsEndpoint.html#Api_Endpoints_ReadSessionsEndpoint__ctor_System_IServiceProvider_
  commentId: M:Api.Endpoints.ReadSessionsEndpoint.#ctor(System.IServiceProvider)
  name.vb: New(IServiceProvider)
  fullName: Api.Endpoints.ReadSessionsEndpoint.ReadSessionsEndpoint(System.IServiceProvider)
  fullName.vb: Api.Endpoints.ReadSessionsEndpoint.New(System.IServiceProvider)
  nameWithType: ReadSessionsEndpoint.ReadSessionsEndpoint(IServiceProvider)
  nameWithType.vb: ReadSessionsEndpoint.New(IServiceProvider)
- uid: Api.Endpoints.ReadSessionsEndpoint.#ctor*
  name: ReadSessionsEndpoint
  href: api/Api.Endpoints.ReadSessionsEndpoint.html#Api_Endpoints_ReadSessionsEndpoint__ctor_
  commentId: Overload:Api.Endpoints.ReadSessionsEndpoint.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Api.Endpoints.ReadSessionsEndpoint.ReadSessionsEndpoint
  fullName.vb: Api.Endpoints.ReadSessionsEndpoint.New
  nameWithType: ReadSessionsEndpoint.ReadSessionsEndpoint
  nameWithType.vb: ReadSessionsEndpoint.New
- uid: Api.Endpoints.ReadSessionsEndpoint.HandleAsync(System.Threading.CancellationToken)
  name: HandleAsync(CancellationToken)
  href: api/Api.Endpoints.ReadSessionsEndpoint.html#Api_Endpoints_ReadSessionsEndpoint_HandleAsync_System_Threading_CancellationToken_
  commentId: M:Api.Endpoints.ReadSessionsEndpoint.HandleAsync(System.Threading.CancellationToken)
  fullName: Api.Endpoints.ReadSessionsEndpoint.HandleAsync(System.Threading.CancellationToken)
  nameWithType: ReadSessionsEndpoint.HandleAsync(CancellationToken)
- uid: Api.Endpoints.ReadSessionsEndpoint.HandleAsync*
  name: HandleAsync
  href: api/Api.Endpoints.ReadSessionsEndpoint.html#Api_Endpoints_ReadSessionsEndpoint_HandleAsync_
  commentId: Overload:Api.Endpoints.ReadSessionsEndpoint.HandleAsync
  isSpec: "True"
  fullName: Api.Endpoints.ReadSessionsEndpoint.HandleAsync
  nameWithType: ReadSessionsEndpoint.HandleAsync
- uid: Api.Endpoints.Users
  name: Api.Endpoints.Users
  href: api/Api.Endpoints.Users.html
  commentId: N:Api.Endpoints.Users
  fullName: Api.Endpoints.Users
  nameWithType: Api.Endpoints.Users
- uid: Api.Endpoints.Users.ConfirmEmailEndpoint
  name: ConfirmEmailEndpoint
  href: api/Api.Endpoints.Users.ConfirmEmailEndpoint.html
  commentId: T:Api.Endpoints.Users.ConfirmEmailEndpoint
  fullName: Api.Endpoints.Users.ConfirmEmailEndpoint
  nameWithType: ConfirmEmailEndpoint
- uid: Api.Endpoints.Users.ConfirmEmailEndpoint.#ctor(System.IServiceProvider)
  name: ConfirmEmailEndpoint(IServiceProvider)
  href: api/Api.Endpoints.Users.ConfirmEmailEndpoint.html#Api_Endpoints_Users_ConfirmEmailEndpoint__ctor_System_IServiceProvider_
  commentId: M:Api.Endpoints.Users.ConfirmEmailEndpoint.#ctor(System.IServiceProvider)
  name.vb: New(IServiceProvider)
  fullName: Api.Endpoints.Users.ConfirmEmailEndpoint.ConfirmEmailEndpoint(System.IServiceProvider)
  fullName.vb: Api.Endpoints.Users.ConfirmEmailEndpoint.New(System.IServiceProvider)
  nameWithType: ConfirmEmailEndpoint.ConfirmEmailEndpoint(IServiceProvider)
  nameWithType.vb: ConfirmEmailEndpoint.New(IServiceProvider)
- uid: Api.Endpoints.Users.ConfirmEmailEndpoint.#ctor*
  name: ConfirmEmailEndpoint
  href: api/Api.Endpoints.Users.ConfirmEmailEndpoint.html#Api_Endpoints_Users_ConfirmEmailEndpoint__ctor_
  commentId: Overload:Api.Endpoints.Users.ConfirmEmailEndpoint.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Api.Endpoints.Users.ConfirmEmailEndpoint.ConfirmEmailEndpoint
  fullName.vb: Api.Endpoints.Users.ConfirmEmailEndpoint.New
  nameWithType: ConfirmEmailEndpoint.ConfirmEmailEndpoint
  nameWithType.vb: ConfirmEmailEndpoint.New
- uid: Api.Endpoints.Users.ConfirmEmailEndpoint.HandleAsync(Api.Requests.ConfirmEmailRequest,System.Threading.CancellationToken)
  name: HandleAsync(ConfirmEmailRequest, CancellationToken)
  href: api/Api.Endpoints.Users.ConfirmEmailEndpoint.html#Api_Endpoints_Users_ConfirmEmailEndpoint_HandleAsync_Api_Requests_ConfirmEmailRequest_System_Threading_CancellationToken_
  commentId: M:Api.Endpoints.Users.ConfirmEmailEndpoint.HandleAsync(Api.Requests.ConfirmEmailRequest,System.Threading.CancellationToken)
  fullName: Api.Endpoints.Users.ConfirmEmailEndpoint.HandleAsync(Api.Requests.ConfirmEmailRequest, System.Threading.CancellationToken)
  nameWithType: ConfirmEmailEndpoint.HandleAsync(ConfirmEmailRequest, CancellationToken)
- uid: Api.Endpoints.Users.ConfirmEmailEndpoint.HandleAsync*
  name: HandleAsync
  href: api/Api.Endpoints.Users.ConfirmEmailEndpoint.html#Api_Endpoints_Users_ConfirmEmailEndpoint_HandleAsync_
  commentId: Overload:Api.Endpoints.Users.ConfirmEmailEndpoint.HandleAsync
  isSpec: "True"
  fullName: Api.Endpoints.Users.ConfirmEmailEndpoint.HandleAsync
  nameWithType: ConfirmEmailEndpoint.HandleAsync
- uid: Api.Endpoints.Users.DeleteAccountEndpoint
  name: DeleteAccountEndpoint
  href: api/Api.Endpoints.Users.DeleteAccountEndpoint.html
  commentId: T:Api.Endpoints.Users.DeleteAccountEndpoint
  fullName: Api.Endpoints.Users.DeleteAccountEndpoint
  nameWithType: DeleteAccountEndpoint
- uid: Api.Endpoints.Users.DeleteAccountEndpoint.#ctor(System.IServiceProvider)
  name: DeleteAccountEndpoint(IServiceProvider)
  href: api/Api.Endpoints.Users.DeleteAccountEndpoint.html#Api_Endpoints_Users_DeleteAccountEndpoint__ctor_System_IServiceProvider_
  commentId: M:Api.Endpoints.Users.DeleteAccountEndpoint.#ctor(System.IServiceProvider)
  name.vb: New(IServiceProvider)
  fullName: Api.Endpoints.Users.DeleteAccountEndpoint.DeleteAccountEndpoint(System.IServiceProvider)
  fullName.vb: Api.Endpoints.Users.DeleteAccountEndpoint.New(System.IServiceProvider)
  nameWithType: DeleteAccountEndpoint.DeleteAccountEndpoint(IServiceProvider)
  nameWithType.vb: DeleteAccountEndpoint.New(IServiceProvider)
- uid: Api.Endpoints.Users.DeleteAccountEndpoint.#ctor*
  name: DeleteAccountEndpoint
  href: api/Api.Endpoints.Users.DeleteAccountEndpoint.html#Api_Endpoints_Users_DeleteAccountEndpoint__ctor_
  commentId: Overload:Api.Endpoints.Users.DeleteAccountEndpoint.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Api.Endpoints.Users.DeleteAccountEndpoint.DeleteAccountEndpoint
  fullName.vb: Api.Endpoints.Users.DeleteAccountEndpoint.New
  nameWithType: DeleteAccountEndpoint.DeleteAccountEndpoint
  nameWithType.vb: DeleteAccountEndpoint.New
- uid: Api.Endpoints.Users.DeleteAccountEndpoint.HandleAsync(System.Threading.CancellationToken)
  name: HandleAsync(CancellationToken)
  href: api/Api.Endpoints.Users.DeleteAccountEndpoint.html#Api_Endpoints_Users_DeleteAccountEndpoint_HandleAsync_System_Threading_CancellationToken_
  commentId: M:Api.Endpoints.Users.DeleteAccountEndpoint.HandleAsync(System.Threading.CancellationToken)
  fullName: Api.Endpoints.Users.DeleteAccountEndpoint.HandleAsync(System.Threading.CancellationToken)
  nameWithType: DeleteAccountEndpoint.HandleAsync(CancellationToken)
- uid: Api.Endpoints.Users.DeleteAccountEndpoint.HandleAsync*
  name: HandleAsync
  href: api/Api.Endpoints.Users.DeleteAccountEndpoint.html#Api_Endpoints_Users_DeleteAccountEndpoint_HandleAsync_
  commentId: Overload:Api.Endpoints.Users.DeleteAccountEndpoint.HandleAsync
  isSpec: "True"
  fullName: Api.Endpoints.Users.DeleteAccountEndpoint.HandleAsync
  nameWithType: DeleteAccountEndpoint.HandleAsync
- uid: Api.Endpoints.Users.LoginEndpoint
  name: LoginEndpoint
  href: api/Api.Endpoints.Users.LoginEndpoint.html
  commentId: T:Api.Endpoints.Users.LoginEndpoint
  fullName: Api.Endpoints.Users.LoginEndpoint
  nameWithType: LoginEndpoint
- uid: Api.Endpoints.Users.LoginEndpoint.#ctor(System.IServiceProvider)
  name: LoginEndpoint(IServiceProvider)
  href: api/Api.Endpoints.Users.LoginEndpoint.html#Api_Endpoints_Users_LoginEndpoint__ctor_System_IServiceProvider_
  commentId: M:Api.Endpoints.Users.LoginEndpoint.#ctor(System.IServiceProvider)
  name.vb: New(IServiceProvider)
  fullName: Api.Endpoints.Users.LoginEndpoint.LoginEndpoint(System.IServiceProvider)
  fullName.vb: Api.Endpoints.Users.LoginEndpoint.New(System.IServiceProvider)
  nameWithType: LoginEndpoint.LoginEndpoint(IServiceProvider)
  nameWithType.vb: LoginEndpoint.New(IServiceProvider)
- uid: Api.Endpoints.Users.LoginEndpoint.#ctor*
  name: LoginEndpoint
  href: api/Api.Endpoints.Users.LoginEndpoint.html#Api_Endpoints_Users_LoginEndpoint__ctor_
  commentId: Overload:Api.Endpoints.Users.LoginEndpoint.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Api.Endpoints.Users.LoginEndpoint.LoginEndpoint
  fullName.vb: Api.Endpoints.Users.LoginEndpoint.New
  nameWithType: LoginEndpoint.LoginEndpoint
  nameWithType.vb: LoginEndpoint.New
- uid: Api.Endpoints.Users.LoginEndpoint.HandleAsync(Api.Requests.LoginRequest,System.Threading.CancellationToken)
  name: HandleAsync(LoginRequest, CancellationToken)
  href: api/Api.Endpoints.Users.LoginEndpoint.html#Api_Endpoints_Users_LoginEndpoint_HandleAsync_Api_Requests_LoginRequest_System_Threading_CancellationToken_
  commentId: M:Api.Endpoints.Users.LoginEndpoint.HandleAsync(Api.Requests.LoginRequest,System.Threading.CancellationToken)
  fullName: Api.Endpoints.Users.LoginEndpoint.HandleAsync(Api.Requests.LoginRequest, System.Threading.CancellationToken)
  nameWithType: LoginEndpoint.HandleAsync(LoginRequest, CancellationToken)
- uid: Api.Endpoints.Users.LoginEndpoint.HandleAsync*
  name: HandleAsync
  href: api/Api.Endpoints.Users.LoginEndpoint.html#Api_Endpoints_Users_LoginEndpoint_HandleAsync_
  commentId: Overload:Api.Endpoints.Users.LoginEndpoint.HandleAsync
  isSpec: "True"
  fullName: Api.Endpoints.Users.LoginEndpoint.HandleAsync
  nameWithType: LoginEndpoint.HandleAsync
- uid: Api.Endpoints.Users.LogoutEndpoint
  name: LogoutEndpoint
  href: api/Api.Endpoints.Users.LogoutEndpoint.html
  commentId: T:Api.Endpoints.Users.LogoutEndpoint
  fullName: Api.Endpoints.Users.LogoutEndpoint
  nameWithType: LogoutEndpoint
- uid: Api.Endpoints.Users.LogoutEndpoint.#ctor(System.IServiceProvider)
  name: LogoutEndpoint(IServiceProvider)
  href: api/Api.Endpoints.Users.LogoutEndpoint.html#Api_Endpoints_Users_LogoutEndpoint__ctor_System_IServiceProvider_
  commentId: M:Api.Endpoints.Users.LogoutEndpoint.#ctor(System.IServiceProvider)
  name.vb: New(IServiceProvider)
  fullName: Api.Endpoints.Users.LogoutEndpoint.LogoutEndpoint(System.IServiceProvider)
  fullName.vb: Api.Endpoints.Users.LogoutEndpoint.New(System.IServiceProvider)
  nameWithType: LogoutEndpoint.LogoutEndpoint(IServiceProvider)
  nameWithType.vb: LogoutEndpoint.New(IServiceProvider)
- uid: Api.Endpoints.Users.LogoutEndpoint.#ctor*
  name: LogoutEndpoint
  href: api/Api.Endpoints.Users.LogoutEndpoint.html#Api_Endpoints_Users_LogoutEndpoint__ctor_
  commentId: Overload:Api.Endpoints.Users.LogoutEndpoint.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Api.Endpoints.Users.LogoutEndpoint.LogoutEndpoint
  fullName.vb: Api.Endpoints.Users.LogoutEndpoint.New
  nameWithType: LogoutEndpoint.LogoutEndpoint
  nameWithType.vb: LogoutEndpoint.New
- uid: Api.Endpoints.Users.LogoutEndpoint.HandleAsync(System.Threading.CancellationToken)
  name: HandleAsync(CancellationToken)
  href: api/Api.Endpoints.Users.LogoutEndpoint.html#Api_Endpoints_Users_LogoutEndpoint_HandleAsync_System_Threading_CancellationToken_
  commentId: M:Api.Endpoints.Users.LogoutEndpoint.HandleAsync(System.Threading.CancellationToken)
  fullName: Api.Endpoints.Users.LogoutEndpoint.HandleAsync(System.Threading.CancellationToken)
  nameWithType: LogoutEndpoint.HandleAsync(CancellationToken)
- uid: Api.Endpoints.Users.LogoutEndpoint.HandleAsync*
  name: HandleAsync
  href: api/Api.Endpoints.Users.LogoutEndpoint.html#Api_Endpoints_Users_LogoutEndpoint_HandleAsync_
  commentId: Overload:Api.Endpoints.Users.LogoutEndpoint.HandleAsync
  isSpec: "True"
  fullName: Api.Endpoints.Users.LogoutEndpoint.HandleAsync
  nameWithType: LogoutEndpoint.HandleAsync
- uid: Api.Endpoints.Users.MultiFactorLoginEndpoint
  name: MultiFactorLoginEndpoint
  href: api/Api.Endpoints.Users.MultiFactorLoginEndpoint.html
  commentId: T:Api.Endpoints.Users.MultiFactorLoginEndpoint
  fullName: Api.Endpoints.Users.MultiFactorLoginEndpoint
  nameWithType: MultiFactorLoginEndpoint
- uid: Api.Endpoints.Users.MultiFactorLoginEndpoint.#ctor(System.IServiceProvider)
  name: MultiFactorLoginEndpoint(IServiceProvider)
  href: api/Api.Endpoints.Users.MultiFactorLoginEndpoint.html#Api_Endpoints_Users_MultiFactorLoginEndpoint__ctor_System_IServiceProvider_
  commentId: M:Api.Endpoints.Users.MultiFactorLoginEndpoint.#ctor(System.IServiceProvider)
  name.vb: New(IServiceProvider)
  fullName: Api.Endpoints.Users.MultiFactorLoginEndpoint.MultiFactorLoginEndpoint(System.IServiceProvider)
  fullName.vb: Api.Endpoints.Users.MultiFactorLoginEndpoint.New(System.IServiceProvider)
  nameWithType: MultiFactorLoginEndpoint.MultiFactorLoginEndpoint(IServiceProvider)
  nameWithType.vb: MultiFactorLoginEndpoint.New(IServiceProvider)
- uid: Api.Endpoints.Users.MultiFactorLoginEndpoint.#ctor*
  name: MultiFactorLoginEndpoint
  href: api/Api.Endpoints.Users.MultiFactorLoginEndpoint.html#Api_Endpoints_Users_MultiFactorLoginEndpoint__ctor_
  commentId: Overload:Api.Endpoints.Users.MultiFactorLoginEndpoint.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Api.Endpoints.Users.MultiFactorLoginEndpoint.MultiFactorLoginEndpoint
  fullName.vb: Api.Endpoints.Users.MultiFactorLoginEndpoint.New
  nameWithType: MultiFactorLoginEndpoint.MultiFactorLoginEndpoint
  nameWithType.vb: MultiFactorLoginEndpoint.New
- uid: Api.Endpoints.Users.MultiFactorLoginEndpoint.HandleAsync(Api.Requests.MultiFactorLoginRequest,System.Threading.CancellationToken)
  name: HandleAsync(MultiFactorLoginRequest, CancellationToken)
  href: api/Api.Endpoints.Users.MultiFactorLoginEndpoint.html#Api_Endpoints_Users_MultiFactorLoginEndpoint_HandleAsync_Api_Requests_MultiFactorLoginRequest_System_Threading_CancellationToken_
  commentId: M:Api.Endpoints.Users.MultiFactorLoginEndpoint.HandleAsync(Api.Requests.MultiFactorLoginRequest,System.Threading.CancellationToken)
  fullName: Api.Endpoints.Users.MultiFactorLoginEndpoint.HandleAsync(Api.Requests.MultiFactorLoginRequest, System.Threading.CancellationToken)
  nameWithType: MultiFactorLoginEndpoint.HandleAsync(MultiFactorLoginRequest, CancellationToken)
- uid: Api.Endpoints.Users.MultiFactorLoginEndpoint.HandleAsync*
  name: HandleAsync
  href: api/Api.Endpoints.Users.MultiFactorLoginEndpoint.html#Api_Endpoints_Users_MultiFactorLoginEndpoint_HandleAsync_
  commentId: Overload:Api.Endpoints.Users.MultiFactorLoginEndpoint.HandleAsync
  isSpec: "True"
  fullName: Api.Endpoints.Users.MultiFactorLoginEndpoint.HandleAsync
  nameWithType: MultiFactorLoginEndpoint.HandleAsync
- uid: Api.Endpoints.Users.MultiFactorManageAuthenticatorEndpoint
  name: MultiFactorManageAuthenticatorEndpoint
  href: api/Api.Endpoints.Users.MultiFactorManageAuthenticatorEndpoint.html
  commentId: T:Api.Endpoints.Users.MultiFactorManageAuthenticatorEndpoint
  fullName: Api.Endpoints.Users.MultiFactorManageAuthenticatorEndpoint
  nameWithType: MultiFactorManageAuthenticatorEndpoint
- uid: Api.Endpoints.Users.MultiFactorManageAuthenticatorEndpoint.#ctor(System.IServiceProvider)
  name: MultiFactorManageAuthenticatorEndpoint(IServiceProvider)
  href: api/Api.Endpoints.Users.MultiFactorManageAuthenticatorEndpoint.html#Api_Endpoints_Users_MultiFactorManageAuthenticatorEndpoint__ctor_System_IServiceProvider_
  commentId: M:Api.Endpoints.Users.MultiFactorManageAuthenticatorEndpoint.#ctor(System.IServiceProvider)
  name.vb: New(IServiceProvider)
  fullName: Api.Endpoints.Users.MultiFactorManageAuthenticatorEndpoint.MultiFactorManageAuthenticatorEndpoint(System.IServiceProvider)
  fullName.vb: Api.Endpoints.Users.MultiFactorManageAuthenticatorEndpoint.New(System.IServiceProvider)
  nameWithType: MultiFactorManageAuthenticatorEndpoint.MultiFactorManageAuthenticatorEndpoint(IServiceProvider)
  nameWithType.vb: MultiFactorManageAuthenticatorEndpoint.New(IServiceProvider)
- uid: Api.Endpoints.Users.MultiFactorManageAuthenticatorEndpoint.#ctor*
  name: MultiFactorManageAuthenticatorEndpoint
  href: api/Api.Endpoints.Users.MultiFactorManageAuthenticatorEndpoint.html#Api_Endpoints_Users_MultiFactorManageAuthenticatorEndpoint__ctor_
  commentId: Overload:Api.Endpoints.Users.MultiFactorManageAuthenticatorEndpoint.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Api.Endpoints.Users.MultiFactorManageAuthenticatorEndpoint.MultiFactorManageAuthenticatorEndpoint
  fullName.vb: Api.Endpoints.Users.MultiFactorManageAuthenticatorEndpoint.New
  nameWithType: MultiFactorManageAuthenticatorEndpoint.MultiFactorManageAuthenticatorEndpoint
  nameWithType.vb: MultiFactorManageAuthenticatorEndpoint.New
- uid: Api.Endpoints.Users.MultiFactorManageAuthenticatorEndpoint.HandleAsync(Api.Requests.MultiFactorManageAuthenticatorRequest,System.Threading.CancellationToken)
  name: HandleAsync(MultiFactorManageAuthenticatorRequest, CancellationToken)
  href: api/Api.Endpoints.Users.MultiFactorManageAuthenticatorEndpoint.html#Api_Endpoints_Users_MultiFactorManageAuthenticatorEndpoint_HandleAsync_Api_Requests_MultiFactorManageAuthenticatorRequest_System_Threading_CancellationToken_
  commentId: M:Api.Endpoints.Users.MultiFactorManageAuthenticatorEndpoint.HandleAsync(Api.Requests.MultiFactorManageAuthenticatorRequest,System.Threading.CancellationToken)
  fullName: Api.Endpoints.Users.MultiFactorManageAuthenticatorEndpoint.HandleAsync(Api.Requests.MultiFactorManageAuthenticatorRequest, System.Threading.CancellationToken)
  nameWithType: MultiFactorManageAuthenticatorEndpoint.HandleAsync(MultiFactorManageAuthenticatorRequest, CancellationToken)
- uid: Api.Endpoints.Users.MultiFactorManageAuthenticatorEndpoint.HandleAsync*
  name: HandleAsync
  href: api/Api.Endpoints.Users.MultiFactorManageAuthenticatorEndpoint.html#Api_Endpoints_Users_MultiFactorManageAuthenticatorEndpoint_HandleAsync_
  commentId: Overload:Api.Endpoints.Users.MultiFactorManageAuthenticatorEndpoint.HandleAsync
  isSpec: "True"
  fullName: Api.Endpoints.Users.MultiFactorManageAuthenticatorEndpoint.HandleAsync
  nameWithType: MultiFactorManageAuthenticatorEndpoint.HandleAsync
- uid: Api.Endpoints.Users.MultiFactorManageEndpoint
  name: MultiFactorManageEndpoint
  href: api/Api.Endpoints.Users.MultiFactorManageEndpoint.html
  commentId: T:Api.Endpoints.Users.MultiFactorManageEndpoint
  fullName: Api.Endpoints.Users.MultiFactorManageEndpoint
  nameWithType: MultiFactorManageEndpoint
- uid: Api.Endpoints.Users.MultiFactorManageEndpoint.#ctor(System.IServiceProvider)
  name: MultiFactorManageEndpoint(IServiceProvider)
  href: api/Api.Endpoints.Users.MultiFactorManageEndpoint.html#Api_Endpoints_Users_MultiFactorManageEndpoint__ctor_System_IServiceProvider_
  commentId: M:Api.Endpoints.Users.MultiFactorManageEndpoint.#ctor(System.IServiceProvider)
  name.vb: New(IServiceProvider)
  fullName: Api.Endpoints.Users.MultiFactorManageEndpoint.MultiFactorManageEndpoint(System.IServiceProvider)
  fullName.vb: Api.Endpoints.Users.MultiFactorManageEndpoint.New(System.IServiceProvider)
  nameWithType: MultiFactorManageEndpoint.MultiFactorManageEndpoint(IServiceProvider)
  nameWithType.vb: MultiFactorManageEndpoint.New(IServiceProvider)
- uid: Api.Endpoints.Users.MultiFactorManageEndpoint.#ctor*
  name: MultiFactorManageEndpoint
  href: api/Api.Endpoints.Users.MultiFactorManageEndpoint.html#Api_Endpoints_Users_MultiFactorManageEndpoint__ctor_
  commentId: Overload:Api.Endpoints.Users.MultiFactorManageEndpoint.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Api.Endpoints.Users.MultiFactorManageEndpoint.MultiFactorManageEndpoint
  fullName.vb: Api.Endpoints.Users.MultiFactorManageEndpoint.New
  nameWithType: MultiFactorManageEndpoint.MultiFactorManageEndpoint
  nameWithType.vb: MultiFactorManageEndpoint.New
- uid: Api.Endpoints.Users.MultiFactorManageEndpoint.HandleAsync(Api.Requests.MultiFactorManageRequest,System.Threading.CancellationToken)
  name: HandleAsync(MultiFactorManageRequest, CancellationToken)
  href: api/Api.Endpoints.Users.MultiFactorManageEndpoint.html#Api_Endpoints_Users_MultiFactorManageEndpoint_HandleAsync_Api_Requests_MultiFactorManageRequest_System_Threading_CancellationToken_
  commentId: M:Api.Endpoints.Users.MultiFactorManageEndpoint.HandleAsync(Api.Requests.MultiFactorManageRequest,System.Threading.CancellationToken)
  fullName: Api.Endpoints.Users.MultiFactorManageEndpoint.HandleAsync(Api.Requests.MultiFactorManageRequest, System.Threading.CancellationToken)
  nameWithType: MultiFactorManageEndpoint.HandleAsync(MultiFactorManageRequest, CancellationToken)
- uid: Api.Endpoints.Users.MultiFactorManageEndpoint.HandleAsync*
  name: HandleAsync
  href: api/Api.Endpoints.Users.MultiFactorManageEndpoint.html#Api_Endpoints_Users_MultiFactorManageEndpoint_HandleAsync_
  commentId: Overload:Api.Endpoints.Users.MultiFactorManageEndpoint.HandleAsync
  isSpec: "True"
  fullName: Api.Endpoints.Users.MultiFactorManageEndpoint.HandleAsync
  nameWithType: MultiFactorManageEndpoint.HandleAsync
- uid: Api.Endpoints.Users.MultiFactorRecoveryCodeRedeemEndpoint
  name: MultiFactorRecoveryCodeRedeemEndpoint
  href: api/Api.Endpoints.Users.MultiFactorRecoveryCodeRedeemEndpoint.html
  commentId: T:Api.Endpoints.Users.MultiFactorRecoveryCodeRedeemEndpoint
  fullName: Api.Endpoints.Users.MultiFactorRecoveryCodeRedeemEndpoint
  nameWithType: MultiFactorRecoveryCodeRedeemEndpoint
- uid: Api.Endpoints.Users.MultiFactorRecoveryCodeRedeemEndpoint.#ctor(System.IServiceProvider)
  name: MultiFactorRecoveryCodeRedeemEndpoint(IServiceProvider)
  href: api/Api.Endpoints.Users.MultiFactorRecoveryCodeRedeemEndpoint.html#Api_Endpoints_Users_MultiFactorRecoveryCodeRedeemEndpoint__ctor_System_IServiceProvider_
  commentId: M:Api.Endpoints.Users.MultiFactorRecoveryCodeRedeemEndpoint.#ctor(System.IServiceProvider)
  name.vb: New(IServiceProvider)
  fullName: Api.Endpoints.Users.MultiFactorRecoveryCodeRedeemEndpoint.MultiFactorRecoveryCodeRedeemEndpoint(System.IServiceProvider)
  fullName.vb: Api.Endpoints.Users.MultiFactorRecoveryCodeRedeemEndpoint.New(System.IServiceProvider)
  nameWithType: MultiFactorRecoveryCodeRedeemEndpoint.MultiFactorRecoveryCodeRedeemEndpoint(IServiceProvider)
  nameWithType.vb: MultiFactorRecoveryCodeRedeemEndpoint.New(IServiceProvider)
- uid: Api.Endpoints.Users.MultiFactorRecoveryCodeRedeemEndpoint.#ctor*
  name: MultiFactorRecoveryCodeRedeemEndpoint
  href: api/Api.Endpoints.Users.MultiFactorRecoveryCodeRedeemEndpoint.html#Api_Endpoints_Users_MultiFactorRecoveryCodeRedeemEndpoint__ctor_
  commentId: Overload:Api.Endpoints.Users.MultiFactorRecoveryCodeRedeemEndpoint.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Api.Endpoints.Users.MultiFactorRecoveryCodeRedeemEndpoint.MultiFactorRecoveryCodeRedeemEndpoint
  fullName.vb: Api.Endpoints.Users.MultiFactorRecoveryCodeRedeemEndpoint.New
  nameWithType: MultiFactorRecoveryCodeRedeemEndpoint.MultiFactorRecoveryCodeRedeemEndpoint
  nameWithType.vb: MultiFactorRecoveryCodeRedeemEndpoint.New
- uid: Api.Endpoints.Users.MultiFactorRecoveryCodeRedeemEndpoint.HandleAsync(Api.Requests.MultiFactorRecoveryCodeRedeemRequest,System.Threading.CancellationToken)
  name: HandleAsync(MultiFactorRecoveryCodeRedeemRequest, CancellationToken)
  href: api/Api.Endpoints.Users.MultiFactorRecoveryCodeRedeemEndpoint.html#Api_Endpoints_Users_MultiFactorRecoveryCodeRedeemEndpoint_HandleAsync_Api_Requests_MultiFactorRecoveryCodeRedeemRequest_System_Threading_CancellationToken_
  commentId: M:Api.Endpoints.Users.MultiFactorRecoveryCodeRedeemEndpoint.HandleAsync(Api.Requests.MultiFactorRecoveryCodeRedeemRequest,System.Threading.CancellationToken)
  fullName: Api.Endpoints.Users.MultiFactorRecoveryCodeRedeemEndpoint.HandleAsync(Api.Requests.MultiFactorRecoveryCodeRedeemRequest, System.Threading.CancellationToken)
  nameWithType: MultiFactorRecoveryCodeRedeemEndpoint.HandleAsync(MultiFactorRecoveryCodeRedeemRequest, CancellationToken)
- uid: Api.Endpoints.Users.MultiFactorRecoveryCodeRedeemEndpoint.HandleAsync*
  name: HandleAsync
  href: api/Api.Endpoints.Users.MultiFactorRecoveryCodeRedeemEndpoint.html#Api_Endpoints_Users_MultiFactorRecoveryCodeRedeemEndpoint_HandleAsync_
  commentId: Overload:Api.Endpoints.Users.MultiFactorRecoveryCodeRedeemEndpoint.HandleAsync
  isSpec: "True"
  fullName: Api.Endpoints.Users.MultiFactorRecoveryCodeRedeemEndpoint.HandleAsync
  nameWithType: MultiFactorRecoveryCodeRedeemEndpoint.HandleAsync
- uid: Api.Endpoints.Users.MultiFactorRecoveryCodesEndpoint
  name: MultiFactorRecoveryCodesEndpoint
  href: api/Api.Endpoints.Users.MultiFactorRecoveryCodesEndpoint.html
  commentId: T:Api.Endpoints.Users.MultiFactorRecoveryCodesEndpoint
  fullName: Api.Endpoints.Users.MultiFactorRecoveryCodesEndpoint
  nameWithType: MultiFactorRecoveryCodesEndpoint
- uid: Api.Endpoints.Users.MultiFactorRecoveryCodesEndpoint.#ctor(System.IServiceProvider)
  name: MultiFactorRecoveryCodesEndpoint(IServiceProvider)
  href: api/Api.Endpoints.Users.MultiFactorRecoveryCodesEndpoint.html#Api_Endpoints_Users_MultiFactorRecoveryCodesEndpoint__ctor_System_IServiceProvider_
  commentId: M:Api.Endpoints.Users.MultiFactorRecoveryCodesEndpoint.#ctor(System.IServiceProvider)
  name.vb: New(IServiceProvider)
  fullName: Api.Endpoints.Users.MultiFactorRecoveryCodesEndpoint.MultiFactorRecoveryCodesEndpoint(System.IServiceProvider)
  fullName.vb: Api.Endpoints.Users.MultiFactorRecoveryCodesEndpoint.New(System.IServiceProvider)
  nameWithType: MultiFactorRecoveryCodesEndpoint.MultiFactorRecoveryCodesEndpoint(IServiceProvider)
  nameWithType.vb: MultiFactorRecoveryCodesEndpoint.New(IServiceProvider)
- uid: Api.Endpoints.Users.MultiFactorRecoveryCodesEndpoint.#ctor*
  name: MultiFactorRecoveryCodesEndpoint
  href: api/Api.Endpoints.Users.MultiFactorRecoveryCodesEndpoint.html#Api_Endpoints_Users_MultiFactorRecoveryCodesEndpoint__ctor_
  commentId: Overload:Api.Endpoints.Users.MultiFactorRecoveryCodesEndpoint.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Api.Endpoints.Users.MultiFactorRecoveryCodesEndpoint.MultiFactorRecoveryCodesEndpoint
  fullName.vb: Api.Endpoints.Users.MultiFactorRecoveryCodesEndpoint.New
  nameWithType: MultiFactorRecoveryCodesEndpoint.MultiFactorRecoveryCodesEndpoint
  nameWithType.vb: MultiFactorRecoveryCodesEndpoint.New
- uid: Api.Endpoints.Users.MultiFactorRecoveryCodesEndpoint.HandleAsync(System.Threading.CancellationToken)
  name: HandleAsync(CancellationToken)
  href: api/Api.Endpoints.Users.MultiFactorRecoveryCodesEndpoint.html#Api_Endpoints_Users_MultiFactorRecoveryCodesEndpoint_HandleAsync_System_Threading_CancellationToken_
  commentId: M:Api.Endpoints.Users.MultiFactorRecoveryCodesEndpoint.HandleAsync(System.Threading.CancellationToken)
  fullName: Api.Endpoints.Users.MultiFactorRecoveryCodesEndpoint.HandleAsync(System.Threading.CancellationToken)
  nameWithType: MultiFactorRecoveryCodesEndpoint.HandleAsync(CancellationToken)
- uid: Api.Endpoints.Users.MultiFactorRecoveryCodesEndpoint.HandleAsync*
  name: HandleAsync
  href: api/Api.Endpoints.Users.MultiFactorRecoveryCodesEndpoint.html#Api_Endpoints_Users_MultiFactorRecoveryCodesEndpoint_HandleAsync_
  commentId: Overload:Api.Endpoints.Users.MultiFactorRecoveryCodesEndpoint.HandleAsync
  isSpec: "True"
  fullName: Api.Endpoints.Users.MultiFactorRecoveryCodesEndpoint.HandleAsync
  nameWithType: MultiFactorRecoveryCodesEndpoint.HandleAsync
- uid: Api.Endpoints.Users.PasswordResetEndpoint
  name: PasswordResetEndpoint
  href: api/Api.Endpoints.Users.PasswordResetEndpoint.html
  commentId: T:Api.Endpoints.Users.PasswordResetEndpoint
  fullName: Api.Endpoints.Users.PasswordResetEndpoint
  nameWithType: PasswordResetEndpoint
- uid: Api.Endpoints.Users.PasswordResetEndpoint.#ctor(System.IServiceProvider)
  name: PasswordResetEndpoint(IServiceProvider)
  href: api/Api.Endpoints.Users.PasswordResetEndpoint.html#Api_Endpoints_Users_PasswordResetEndpoint__ctor_System_IServiceProvider_
  commentId: M:Api.Endpoints.Users.PasswordResetEndpoint.#ctor(System.IServiceProvider)
  name.vb: New(IServiceProvider)
  fullName: Api.Endpoints.Users.PasswordResetEndpoint.PasswordResetEndpoint(System.IServiceProvider)
  fullName.vb: Api.Endpoints.Users.PasswordResetEndpoint.New(System.IServiceProvider)
  nameWithType: PasswordResetEndpoint.PasswordResetEndpoint(IServiceProvider)
  nameWithType.vb: PasswordResetEndpoint.New(IServiceProvider)
- uid: Api.Endpoints.Users.PasswordResetEndpoint.#ctor*
  name: PasswordResetEndpoint
  href: api/Api.Endpoints.Users.PasswordResetEndpoint.html#Api_Endpoints_Users_PasswordResetEndpoint__ctor_
  commentId: Overload:Api.Endpoints.Users.PasswordResetEndpoint.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Api.Endpoints.Users.PasswordResetEndpoint.PasswordResetEndpoint
  fullName.vb: Api.Endpoints.Users.PasswordResetEndpoint.New
  nameWithType: PasswordResetEndpoint.PasswordResetEndpoint
  nameWithType.vb: PasswordResetEndpoint.New
- uid: Api.Endpoints.Users.PasswordResetEndpoint.HandleAsync(Api.Requests.PasswordResetRequest,System.Threading.CancellationToken)
  name: HandleAsync(PasswordResetRequest, CancellationToken)
  href: api/Api.Endpoints.Users.PasswordResetEndpoint.html#Api_Endpoints_Users_PasswordResetEndpoint_HandleAsync_Api_Requests_PasswordResetRequest_System_Threading_CancellationToken_
  commentId: M:Api.Endpoints.Users.PasswordResetEndpoint.HandleAsync(Api.Requests.PasswordResetRequest,System.Threading.CancellationToken)
  fullName: Api.Endpoints.Users.PasswordResetEndpoint.HandleAsync(Api.Requests.PasswordResetRequest, System.Threading.CancellationToken)
  nameWithType: PasswordResetEndpoint.HandleAsync(PasswordResetRequest, CancellationToken)
- uid: Api.Endpoints.Users.PasswordResetEndpoint.HandleAsync*
  name: HandleAsync
  href: api/Api.Endpoints.Users.PasswordResetEndpoint.html#Api_Endpoints_Users_PasswordResetEndpoint_HandleAsync_
  commentId: Overload:Api.Endpoints.Users.PasswordResetEndpoint.HandleAsync
  isSpec: "True"
  fullName: Api.Endpoints.Users.PasswordResetEndpoint.HandleAsync
  nameWithType: PasswordResetEndpoint.HandleAsync
- uid: Api.Endpoints.Users.RegisterEndpoint
  name: RegisterEndpoint
  href: api/Api.Endpoints.Users.RegisterEndpoint.html
  commentId: T:Api.Endpoints.Users.RegisterEndpoint
  fullName: Api.Endpoints.Users.RegisterEndpoint
  nameWithType: RegisterEndpoint
- uid: Api.Endpoints.Users.RegisterEndpoint.#ctor(System.IServiceProvider)
  name: RegisterEndpoint(IServiceProvider)
  href: api/Api.Endpoints.Users.RegisterEndpoint.html#Api_Endpoints_Users_RegisterEndpoint__ctor_System_IServiceProvider_
  commentId: M:Api.Endpoints.Users.RegisterEndpoint.#ctor(System.IServiceProvider)
  name.vb: New(IServiceProvider)
  fullName: Api.Endpoints.Users.RegisterEndpoint.RegisterEndpoint(System.IServiceProvider)
  fullName.vb: Api.Endpoints.Users.RegisterEndpoint.New(System.IServiceProvider)
  nameWithType: RegisterEndpoint.RegisterEndpoint(IServiceProvider)
  nameWithType.vb: RegisterEndpoint.New(IServiceProvider)
- uid: Api.Endpoints.Users.RegisterEndpoint.#ctor*
  name: RegisterEndpoint
  href: api/Api.Endpoints.Users.RegisterEndpoint.html#Api_Endpoints_Users_RegisterEndpoint__ctor_
  commentId: Overload:Api.Endpoints.Users.RegisterEndpoint.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Api.Endpoints.Users.RegisterEndpoint.RegisterEndpoint
  fullName.vb: Api.Endpoints.Users.RegisterEndpoint.New
  nameWithType: RegisterEndpoint.RegisterEndpoint
  nameWithType.vb: RegisterEndpoint.New
- uid: Api.Endpoints.Users.RegisterEndpoint.HandleAsync(Api.Requests.RegisterRequest,System.Threading.CancellationToken)
  name: HandleAsync(RegisterRequest, CancellationToken)
  href: api/Api.Endpoints.Users.RegisterEndpoint.html#Api_Endpoints_Users_RegisterEndpoint_HandleAsync_Api_Requests_RegisterRequest_System_Threading_CancellationToken_
  commentId: M:Api.Endpoints.Users.RegisterEndpoint.HandleAsync(Api.Requests.RegisterRequest,System.Threading.CancellationToken)
  fullName: Api.Endpoints.Users.RegisterEndpoint.HandleAsync(Api.Requests.RegisterRequest, System.Threading.CancellationToken)
  nameWithType: RegisterEndpoint.HandleAsync(RegisterRequest, CancellationToken)
- uid: Api.Endpoints.Users.RegisterEndpoint.HandleAsync*
  name: HandleAsync
  href: api/Api.Endpoints.Users.RegisterEndpoint.html#Api_Endpoints_Users_RegisterEndpoint_HandleAsync_
  commentId: Overload:Api.Endpoints.Users.RegisterEndpoint.HandleAsync
  isSpec: "True"
  fullName: Api.Endpoints.Users.RegisterEndpoint.HandleAsync
  nameWithType: RegisterEndpoint.HandleAsync
- uid: Api.Endpoints.Users.SendTokenEndpoint
  name: SendTokenEndpoint
  href: api/Api.Endpoints.Users.SendTokenEndpoint.html
  commentId: T:Api.Endpoints.Users.SendTokenEndpoint
  fullName: Api.Endpoints.Users.SendTokenEndpoint
  nameWithType: SendTokenEndpoint
- uid: Api.Endpoints.Users.SendTokenEndpoint.#ctor(System.IServiceProvider)
  name: SendTokenEndpoint(IServiceProvider)
  href: api/Api.Endpoints.Users.SendTokenEndpoint.html#Api_Endpoints_Users_SendTokenEndpoint__ctor_System_IServiceProvider_
  commentId: M:Api.Endpoints.Users.SendTokenEndpoint.#ctor(System.IServiceProvider)
  name.vb: New(IServiceProvider)
  fullName: Api.Endpoints.Users.SendTokenEndpoint.SendTokenEndpoint(System.IServiceProvider)
  fullName.vb: Api.Endpoints.Users.SendTokenEndpoint.New(System.IServiceProvider)
  nameWithType: SendTokenEndpoint.SendTokenEndpoint(IServiceProvider)
  nameWithType.vb: SendTokenEndpoint.New(IServiceProvider)
- uid: Api.Endpoints.Users.SendTokenEndpoint.#ctor*
  name: SendTokenEndpoint
  href: api/Api.Endpoints.Users.SendTokenEndpoint.html#Api_Endpoints_Users_SendTokenEndpoint__ctor_
  commentId: Overload:Api.Endpoints.Users.SendTokenEndpoint.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Api.Endpoints.Users.SendTokenEndpoint.SendTokenEndpoint
  fullName.vb: Api.Endpoints.Users.SendTokenEndpoint.New
  nameWithType: SendTokenEndpoint.SendTokenEndpoint
  nameWithType.vb: SendTokenEndpoint.New
- uid: Api.Endpoints.Users.SendTokenEndpoint.HandleAsync(Api.Requests.SendTokenRequest,System.Threading.CancellationToken)
  name: HandleAsync(SendTokenRequest, CancellationToken)
  href: api/Api.Endpoints.Users.SendTokenEndpoint.html#Api_Endpoints_Users_SendTokenEndpoint_HandleAsync_Api_Requests_SendTokenRequest_System_Threading_CancellationToken_
  commentId: M:Api.Endpoints.Users.SendTokenEndpoint.HandleAsync(Api.Requests.SendTokenRequest,System.Threading.CancellationToken)
  fullName: Api.Endpoints.Users.SendTokenEndpoint.HandleAsync(Api.Requests.SendTokenRequest, System.Threading.CancellationToken)
  nameWithType: SendTokenEndpoint.HandleAsync(SendTokenRequest, CancellationToken)
- uid: Api.Endpoints.Users.SendTokenEndpoint.HandleAsync*
  name: HandleAsync
  href: api/Api.Endpoints.Users.SendTokenEndpoint.html#Api_Endpoints_Users_SendTokenEndpoint_HandleAsync_
  commentId: Overload:Api.Endpoints.Users.SendTokenEndpoint.HandleAsync
  isSpec: "True"
  fullName: Api.Endpoints.Users.SendTokenEndpoint.HandleAsync
  nameWithType: SendTokenEndpoint.HandleAsync
- uid: Api.Endpoints.Users.UpdateAddressEndpoint
  name: UpdateAddressEndpoint
  href: api/Api.Endpoints.Users.UpdateAddressEndpoint.html
  commentId: T:Api.Endpoints.Users.UpdateAddressEndpoint
  fullName: Api.Endpoints.Users.UpdateAddressEndpoint
  nameWithType: UpdateAddressEndpoint
- uid: Api.Endpoints.Users.UpdateAddressEndpoint.#ctor(System.IServiceProvider)
  name: UpdateAddressEndpoint(IServiceProvider)
  href: api/Api.Endpoints.Users.UpdateAddressEndpoint.html#Api_Endpoints_Users_UpdateAddressEndpoint__ctor_System_IServiceProvider_
  commentId: M:Api.Endpoints.Users.UpdateAddressEndpoint.#ctor(System.IServiceProvider)
  name.vb: New(IServiceProvider)
  fullName: Api.Endpoints.Users.UpdateAddressEndpoint.UpdateAddressEndpoint(System.IServiceProvider)
  fullName.vb: Api.Endpoints.Users.UpdateAddressEndpoint.New(System.IServiceProvider)
  nameWithType: UpdateAddressEndpoint.UpdateAddressEndpoint(IServiceProvider)
  nameWithType.vb: UpdateAddressEndpoint.New(IServiceProvider)
- uid: Api.Endpoints.Users.UpdateAddressEndpoint.#ctor*
  name: UpdateAddressEndpoint
  href: api/Api.Endpoints.Users.UpdateAddressEndpoint.html#Api_Endpoints_Users_UpdateAddressEndpoint__ctor_
  commentId: Overload:Api.Endpoints.Users.UpdateAddressEndpoint.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Api.Endpoints.Users.UpdateAddressEndpoint.UpdateAddressEndpoint
  fullName.vb: Api.Endpoints.Users.UpdateAddressEndpoint.New
  nameWithType: UpdateAddressEndpoint.UpdateAddressEndpoint
  nameWithType.vb: UpdateAddressEndpoint.New
- uid: Api.Endpoints.Users.UpdateAddressEndpoint.HandleAsync(Api.Requests.UpdateAddressRequest,System.Threading.CancellationToken)
  name: HandleAsync(UpdateAddressRequest, CancellationToken)
  href: api/Api.Endpoints.Users.UpdateAddressEndpoint.html#Api_Endpoints_Users_UpdateAddressEndpoint_HandleAsync_Api_Requests_UpdateAddressRequest_System_Threading_CancellationToken_
  commentId: M:Api.Endpoints.Users.UpdateAddressEndpoint.HandleAsync(Api.Requests.UpdateAddressRequest,System.Threading.CancellationToken)
  fullName: Api.Endpoints.Users.UpdateAddressEndpoint.HandleAsync(Api.Requests.UpdateAddressRequest, System.Threading.CancellationToken)
  nameWithType: UpdateAddressEndpoint.HandleAsync(UpdateAddressRequest, CancellationToken)
- uid: Api.Endpoints.Users.UpdateAddressEndpoint.HandleAsync*
  name: HandleAsync
  href: api/Api.Endpoints.Users.UpdateAddressEndpoint.html#Api_Endpoints_Users_UpdateAddressEndpoint_HandleAsync_
  commentId: Overload:Api.Endpoints.Users.UpdateAddressEndpoint.HandleAsync
  isSpec: "True"
  fullName: Api.Endpoints.Users.UpdateAddressEndpoint.HandleAsync
  nameWithType: UpdateAddressEndpoint.HandleAsync
- uid: Api.Endpoints.Users.UpdateEmailEndpoint
  name: UpdateEmailEndpoint
  href: api/Api.Endpoints.Users.UpdateEmailEndpoint.html
  commentId: T:Api.Endpoints.Users.UpdateEmailEndpoint
  fullName: Api.Endpoints.Users.UpdateEmailEndpoint
  nameWithType: UpdateEmailEndpoint
- uid: Api.Endpoints.Users.UpdateEmailEndpoint.#ctor(System.IServiceProvider)
  name: UpdateEmailEndpoint(IServiceProvider)
  href: api/Api.Endpoints.Users.UpdateEmailEndpoint.html#Api_Endpoints_Users_UpdateEmailEndpoint__ctor_System_IServiceProvider_
  commentId: M:Api.Endpoints.Users.UpdateEmailEndpoint.#ctor(System.IServiceProvider)
  name.vb: New(IServiceProvider)
  fullName: Api.Endpoints.Users.UpdateEmailEndpoint.UpdateEmailEndpoint(System.IServiceProvider)
  fullName.vb: Api.Endpoints.Users.UpdateEmailEndpoint.New(System.IServiceProvider)
  nameWithType: UpdateEmailEndpoint.UpdateEmailEndpoint(IServiceProvider)
  nameWithType.vb: UpdateEmailEndpoint.New(IServiceProvider)
- uid: Api.Endpoints.Users.UpdateEmailEndpoint.#ctor*
  name: UpdateEmailEndpoint
  href: api/Api.Endpoints.Users.UpdateEmailEndpoint.html#Api_Endpoints_Users_UpdateEmailEndpoint__ctor_
  commentId: Overload:Api.Endpoints.Users.UpdateEmailEndpoint.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Api.Endpoints.Users.UpdateEmailEndpoint.UpdateEmailEndpoint
  fullName.vb: Api.Endpoints.Users.UpdateEmailEndpoint.New
  nameWithType: UpdateEmailEndpoint.UpdateEmailEndpoint
  nameWithType.vb: UpdateEmailEndpoint.New
- uid: Api.Endpoints.Users.UpdateEmailEndpoint.HandleAsync(Api.Requests.UpdateEmailRequest,System.Threading.CancellationToken)
  name: HandleAsync(UpdateEmailRequest, CancellationToken)
  href: api/Api.Endpoints.Users.UpdateEmailEndpoint.html#Api_Endpoints_Users_UpdateEmailEndpoint_HandleAsync_Api_Requests_UpdateEmailRequest_System_Threading_CancellationToken_
  commentId: M:Api.Endpoints.Users.UpdateEmailEndpoint.HandleAsync(Api.Requests.UpdateEmailRequest,System.Threading.CancellationToken)
  fullName: Api.Endpoints.Users.UpdateEmailEndpoint.HandleAsync(Api.Requests.UpdateEmailRequest, System.Threading.CancellationToken)
  nameWithType: UpdateEmailEndpoint.HandleAsync(UpdateEmailRequest, CancellationToken)
- uid: Api.Endpoints.Users.UpdateEmailEndpoint.HandleAsync*
  name: HandleAsync
  href: api/Api.Endpoints.Users.UpdateEmailEndpoint.html#Api_Endpoints_Users_UpdateEmailEndpoint_HandleAsync_
  commentId: Overload:Api.Endpoints.Users.UpdateEmailEndpoint.HandleAsync
  isSpec: "True"
  fullName: Api.Endpoints.Users.UpdateEmailEndpoint.HandleAsync
  nameWithType: UpdateEmailEndpoint.HandleAsync
- uid: Api.Endpoints.Users.UpdatePhoneNumberEndpoint
  name: UpdatePhoneNumberEndpoint
  href: api/Api.Endpoints.Users.UpdatePhoneNumberEndpoint.html
  commentId: T:Api.Endpoints.Users.UpdatePhoneNumberEndpoint
  fullName: Api.Endpoints.Users.UpdatePhoneNumberEndpoint
  nameWithType: UpdatePhoneNumberEndpoint
- uid: Api.Endpoints.Users.UpdatePhoneNumberEndpoint.#ctor(System.IServiceProvider)
  name: UpdatePhoneNumberEndpoint(IServiceProvider)
  href: api/Api.Endpoints.Users.UpdatePhoneNumberEndpoint.html#Api_Endpoints_Users_UpdatePhoneNumberEndpoint__ctor_System_IServiceProvider_
  commentId: M:Api.Endpoints.Users.UpdatePhoneNumberEndpoint.#ctor(System.IServiceProvider)
  name.vb: New(IServiceProvider)
  fullName: Api.Endpoints.Users.UpdatePhoneNumberEndpoint.UpdatePhoneNumberEndpoint(System.IServiceProvider)
  fullName.vb: Api.Endpoints.Users.UpdatePhoneNumberEndpoint.New(System.IServiceProvider)
  nameWithType: UpdatePhoneNumberEndpoint.UpdatePhoneNumberEndpoint(IServiceProvider)
  nameWithType.vb: UpdatePhoneNumberEndpoint.New(IServiceProvider)
- uid: Api.Endpoints.Users.UpdatePhoneNumberEndpoint.#ctor*
  name: UpdatePhoneNumberEndpoint
  href: api/Api.Endpoints.Users.UpdatePhoneNumberEndpoint.html#Api_Endpoints_Users_UpdatePhoneNumberEndpoint__ctor_
  commentId: Overload:Api.Endpoints.Users.UpdatePhoneNumberEndpoint.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Api.Endpoints.Users.UpdatePhoneNumberEndpoint.UpdatePhoneNumberEndpoint
  fullName.vb: Api.Endpoints.Users.UpdatePhoneNumberEndpoint.New
  nameWithType: UpdatePhoneNumberEndpoint.UpdatePhoneNumberEndpoint
  nameWithType.vb: UpdatePhoneNumberEndpoint.New
- uid: Api.Endpoints.Users.UpdatePhoneNumberEndpoint.HandleAsync(Api.Requests.UpdatePhoneNumberRequest,System.Threading.CancellationToken)
  name: HandleAsync(UpdatePhoneNumberRequest, CancellationToken)
  href: api/Api.Endpoints.Users.UpdatePhoneNumberEndpoint.html#Api_Endpoints_Users_UpdatePhoneNumberEndpoint_HandleAsync_Api_Requests_UpdatePhoneNumberRequest_System_Threading_CancellationToken_
  commentId: M:Api.Endpoints.Users.UpdatePhoneNumberEndpoint.HandleAsync(Api.Requests.UpdatePhoneNumberRequest,System.Threading.CancellationToken)
  fullName: Api.Endpoints.Users.UpdatePhoneNumberEndpoint.HandleAsync(Api.Requests.UpdatePhoneNumberRequest, System.Threading.CancellationToken)
  nameWithType: UpdatePhoneNumberEndpoint.HandleAsync(UpdatePhoneNumberRequest, CancellationToken)
- uid: Api.Endpoints.Users.UpdatePhoneNumberEndpoint.HandleAsync*
  name: HandleAsync
  href: api/Api.Endpoints.Users.UpdatePhoneNumberEndpoint.html#Api_Endpoints_Users_UpdatePhoneNumberEndpoint_HandleAsync_
  commentId: Overload:Api.Endpoints.Users.UpdatePhoneNumberEndpoint.HandleAsync
  isSpec: "True"
  fullName: Api.Endpoints.Users.UpdatePhoneNumberEndpoint.HandleAsync
  nameWithType: UpdatePhoneNumberEndpoint.HandleAsync
- uid: Api.Middlware
  name: Api.Middlware
  href: api/Api.Middlware.html
  commentId: N:Api.Middlware
  fullName: Api.Middlware
  nameWithType: Api.Middlware
- uid: Api.Middlware.ErrorHandlingMiddleware
  name: ErrorHandlingMiddleware
  href: api/Api.Middlware.ErrorHandlingMiddleware.html
  commentId: T:Api.Middlware.ErrorHandlingMiddleware
  fullName: Api.Middlware.ErrorHandlingMiddleware
  nameWithType: ErrorHandlingMiddleware
- uid: Api.Middlware.ErrorHandlingMiddleware.#ctor(Microsoft.AspNetCore.Http.RequestDelegate,Microsoft.Extensions.Logging.ILogger{Api.Middlware.ErrorHandlingMiddleware})
  name: ErrorHandlingMiddleware(RequestDelegate, ILogger<ErrorHandlingMiddleware>)
  href: api/Api.Middlware.ErrorHandlingMiddleware.html#Api_Middlware_ErrorHandlingMiddleware__ctor_Microsoft_AspNetCore_Http_RequestDelegate_Microsoft_Extensions_Logging_ILogger_Api_Middlware_ErrorHandlingMiddleware__
  commentId: M:Api.Middlware.ErrorHandlingMiddleware.#ctor(Microsoft.AspNetCore.Http.RequestDelegate,Microsoft.Extensions.Logging.ILogger{Api.Middlware.ErrorHandlingMiddleware})
  name.vb: New(RequestDelegate, ILogger(Of ErrorHandlingMiddleware))
  fullName: Api.Middlware.ErrorHandlingMiddleware.ErrorHandlingMiddleware(Microsoft.AspNetCore.Http.RequestDelegate, Microsoft.Extensions.Logging.ILogger<Api.Middlware.ErrorHandlingMiddleware>)
  fullName.vb: Api.Middlware.ErrorHandlingMiddleware.New(Microsoft.AspNetCore.Http.RequestDelegate, Microsoft.Extensions.Logging.ILogger(Of Api.Middlware.ErrorHandlingMiddleware))
  nameWithType: ErrorHandlingMiddleware.ErrorHandlingMiddleware(RequestDelegate, ILogger<ErrorHandlingMiddleware>)
  nameWithType.vb: ErrorHandlingMiddleware.New(RequestDelegate, ILogger(Of ErrorHandlingMiddleware))
- uid: Api.Middlware.ErrorHandlingMiddleware.#ctor*
  name: ErrorHandlingMiddleware
  href: api/Api.Middlware.ErrorHandlingMiddleware.html#Api_Middlware_ErrorHandlingMiddleware__ctor_
  commentId: Overload:Api.Middlware.ErrorHandlingMiddleware.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Api.Middlware.ErrorHandlingMiddleware.ErrorHandlingMiddleware
  fullName.vb: Api.Middlware.ErrorHandlingMiddleware.New
  nameWithType: ErrorHandlingMiddleware.ErrorHandlingMiddleware
  nameWithType.vb: ErrorHandlingMiddleware.New
- uid: Api.Middlware.ErrorHandlingMiddleware.InvokeAsync(Microsoft.AspNetCore.Http.HttpContext)
  name: InvokeAsync(HttpContext)
  href: api/Api.Middlware.ErrorHandlingMiddleware.html#Api_Middlware_ErrorHandlingMiddleware_InvokeAsync_Microsoft_AspNetCore_Http_HttpContext_
  commentId: M:Api.Middlware.ErrorHandlingMiddleware.InvokeAsync(Microsoft.AspNetCore.Http.HttpContext)
  fullName: Api.Middlware.ErrorHandlingMiddleware.InvokeAsync(Microsoft.AspNetCore.Http.HttpContext)
  nameWithType: ErrorHandlingMiddleware.InvokeAsync(HttpContext)
- uid: Api.Middlware.ErrorHandlingMiddleware.InvokeAsync*
  name: InvokeAsync
  href: api/Api.Middlware.ErrorHandlingMiddleware.html#Api_Middlware_ErrorHandlingMiddleware_InvokeAsync_
  commentId: Overload:Api.Middlware.ErrorHandlingMiddleware.InvokeAsync
  isSpec: "True"
  fullName: Api.Middlware.ErrorHandlingMiddleware.InvokeAsync
  nameWithType: ErrorHandlingMiddleware.InvokeAsync
- uid: Api.Middlware.ExceptionMiddleware
  name: ExceptionMiddleware
  href: api/Api.Middlware.ExceptionMiddleware.html
  commentId: T:Api.Middlware.ExceptionMiddleware
  fullName: Api.Middlware.ExceptionMiddleware
  nameWithType: ExceptionMiddleware
- uid: Api.Middlware.ExceptionMiddleware.#ctor(Microsoft.AspNetCore.Http.RequestDelegate,Microsoft.Extensions.Logging.ILogger{Api.Middlware.ExceptionMiddleware})
  name: ExceptionMiddleware(RequestDelegate, ILogger<ExceptionMiddleware>)
  href: api/Api.Middlware.ExceptionMiddleware.html#Api_Middlware_ExceptionMiddleware__ctor_Microsoft_AspNetCore_Http_RequestDelegate_Microsoft_Extensions_Logging_ILogger_Api_Middlware_ExceptionMiddleware__
  commentId: M:Api.Middlware.ExceptionMiddleware.#ctor(Microsoft.AspNetCore.Http.RequestDelegate,Microsoft.Extensions.Logging.ILogger{Api.Middlware.ExceptionMiddleware})
  name.vb: New(RequestDelegate, ILogger(Of ExceptionMiddleware))
  fullName: Api.Middlware.ExceptionMiddleware.ExceptionMiddleware(Microsoft.AspNetCore.Http.RequestDelegate, Microsoft.Extensions.Logging.ILogger<Api.Middlware.ExceptionMiddleware>)
  fullName.vb: Api.Middlware.ExceptionMiddleware.New(Microsoft.AspNetCore.Http.RequestDelegate, Microsoft.Extensions.Logging.ILogger(Of Api.Middlware.ExceptionMiddleware))
  nameWithType: ExceptionMiddleware.ExceptionMiddleware(RequestDelegate, ILogger<ExceptionMiddleware>)
  nameWithType.vb: ExceptionMiddleware.New(RequestDelegate, ILogger(Of ExceptionMiddleware))
- uid: Api.Middlware.ExceptionMiddleware.#ctor*
  name: ExceptionMiddleware
  href: api/Api.Middlware.ExceptionMiddleware.html#Api_Middlware_ExceptionMiddleware__ctor_
  commentId: Overload:Api.Middlware.ExceptionMiddleware.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Api.Middlware.ExceptionMiddleware.ExceptionMiddleware
  fullName.vb: Api.Middlware.ExceptionMiddleware.New
  nameWithType: ExceptionMiddleware.ExceptionMiddleware
  nameWithType.vb: ExceptionMiddleware.New
- uid: Api.Middlware.ExceptionMiddleware.InvokeAsync(Microsoft.AspNetCore.Http.HttpContext)
  name: InvokeAsync(HttpContext)
  href: api/Api.Middlware.ExceptionMiddleware.html#Api_Middlware_ExceptionMiddleware_InvokeAsync_Microsoft_AspNetCore_Http_HttpContext_
  commentId: M:Api.Middlware.ExceptionMiddleware.InvokeAsync(Microsoft.AspNetCore.Http.HttpContext)
  fullName: Api.Middlware.ExceptionMiddleware.InvokeAsync(Microsoft.AspNetCore.Http.HttpContext)
  nameWithType: ExceptionMiddleware.InvokeAsync(HttpContext)
- uid: Api.Middlware.ExceptionMiddleware.InvokeAsync*
  name: InvokeAsync
  href: api/Api.Middlware.ExceptionMiddleware.html#Api_Middlware_ExceptionMiddleware_InvokeAsync_
  commentId: Overload:Api.Middlware.ExceptionMiddleware.InvokeAsync
  isSpec: "True"
  fullName: Api.Middlware.ExceptionMiddleware.InvokeAsync
  nameWithType: ExceptionMiddleware.InvokeAsync
- uid: Api.Middlware.SessionMiddleware
  name: SessionMiddleware
  href: api/Api.Middlware.SessionMiddleware.html
  commentId: T:Api.Middlware.SessionMiddleware
  fullName: Api.Middlware.SessionMiddleware
  nameWithType: SessionMiddleware
- uid: Api.Middlware.SessionMiddleware.#ctor(Microsoft.AspNetCore.Http.RequestDelegate)
  name: SessionMiddleware(RequestDelegate)
  href: api/Api.Middlware.SessionMiddleware.html#Api_Middlware_SessionMiddleware__ctor_Microsoft_AspNetCore_Http_RequestDelegate_
  commentId: M:Api.Middlware.SessionMiddleware.#ctor(Microsoft.AspNetCore.Http.RequestDelegate)
  name.vb: New(RequestDelegate)
  fullName: Api.Middlware.SessionMiddleware.SessionMiddleware(Microsoft.AspNetCore.Http.RequestDelegate)
  fullName.vb: Api.Middlware.SessionMiddleware.New(Microsoft.AspNetCore.Http.RequestDelegate)
  nameWithType: SessionMiddleware.SessionMiddleware(RequestDelegate)
  nameWithType.vb: SessionMiddleware.New(RequestDelegate)
- uid: Api.Middlware.SessionMiddleware.#ctor*
  name: SessionMiddleware
  href: api/Api.Middlware.SessionMiddleware.html#Api_Middlware_SessionMiddleware__ctor_
  commentId: Overload:Api.Middlware.SessionMiddleware.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Api.Middlware.SessionMiddleware.SessionMiddleware
  fullName.vb: Api.Middlware.SessionMiddleware.New
  nameWithType: SessionMiddleware.SessionMiddleware
  nameWithType.vb: SessionMiddleware.New
- uid: Api.Middlware.SessionMiddleware.InvokeAsync(Microsoft.AspNetCore.Http.HttpContext)
  name: InvokeAsync(HttpContext)
  href: api/Api.Middlware.SessionMiddleware.html#Api_Middlware_SessionMiddleware_InvokeAsync_Microsoft_AspNetCore_Http_HttpContext_
  commentId: M:Api.Middlware.SessionMiddleware.InvokeAsync(Microsoft.AspNetCore.Http.HttpContext)
  fullName: Api.Middlware.SessionMiddleware.InvokeAsync(Microsoft.AspNetCore.Http.HttpContext)
  nameWithType: SessionMiddleware.InvokeAsync(HttpContext)
- uid: Api.Middlware.SessionMiddleware.InvokeAsync*
  name: InvokeAsync
  href: api/Api.Middlware.SessionMiddleware.html#Api_Middlware_SessionMiddleware_InvokeAsync_
  commentId: Overload:Api.Middlware.SessionMiddleware.InvokeAsync
  isSpec: "True"
  fullName: Api.Middlware.SessionMiddleware.InvokeAsync
  nameWithType: SessionMiddleware.InvokeAsync
- uid: Api.Requests
  name: Api.Requests
  href: api/Api.Requests.html
  commentId: N:Api.Requests
  fullName: Api.Requests
  nameWithType: Api.Requests
- uid: Api.Requests.AddToRoleRequest
  name: AddToRoleRequest
  href: api/Api.Requests.AddToRoleRequest.html
  commentId: T:Api.Requests.AddToRoleRequest
  fullName: Api.Requests.AddToRoleRequest
  nameWithType: AddToRoleRequest
- uid: Api.Requests.AddToRoleRequest.Email
  name: Email
  href: api/Api.Requests.AddToRoleRequest.html#Api_Requests_AddToRoleRequest_Email
  commentId: P:Api.Requests.AddToRoleRequest.Email
  fullName: Api.Requests.AddToRoleRequest.Email
  nameWithType: AddToRoleRequest.Email
- uid: Api.Requests.AddToRoleRequest.Email*
  name: Email
  href: api/Api.Requests.AddToRoleRequest.html#Api_Requests_AddToRoleRequest_Email_
  commentId: Overload:Api.Requests.AddToRoleRequest.Email
  isSpec: "True"
  fullName: Api.Requests.AddToRoleRequest.Email
  nameWithType: AddToRoleRequest.Email
- uid: Api.Requests.AddToRoleRequest.Role
  name: Role
  href: api/Api.Requests.AddToRoleRequest.html#Api_Requests_AddToRoleRequest_Role
  commentId: P:Api.Requests.AddToRoleRequest.Role
  fullName: Api.Requests.AddToRoleRequest.Role
  nameWithType: AddToRoleRequest.Role
- uid: Api.Requests.AddToRoleRequest.Role*
  name: Role
  href: api/Api.Requests.AddToRoleRequest.html#Api_Requests_AddToRoleRequest_Role_
  commentId: Overload:Api.Requests.AddToRoleRequest.Role
  isSpec: "True"
  fullName: Api.Requests.AddToRoleRequest.Role
  nameWithType: AddToRoleRequest.Role
- uid: Api.Requests.AdminPasswordResetRequest
  name: AdminPasswordResetRequest
  href: api/Api.Requests.AdminPasswordResetRequest.html
  commentId: T:Api.Requests.AdminPasswordResetRequest
  fullName: Api.Requests.AdminPasswordResetRequest
  nameWithType: AdminPasswordResetRequest
- uid: Api.Requests.AdminPasswordResetRequest.Email
  name: Email
  href: api/Api.Requests.AdminPasswordResetRequest.html#Api_Requests_AdminPasswordResetRequest_Email
  commentId: P:Api.Requests.AdminPasswordResetRequest.Email
  fullName: Api.Requests.AdminPasswordResetRequest.Email
  nameWithType: AdminPasswordResetRequest.Email
- uid: Api.Requests.AdminPasswordResetRequest.Email*
  name: Email
  href: api/Api.Requests.AdminPasswordResetRequest.html#Api_Requests_AdminPasswordResetRequest_Email_
  commentId: Overload:Api.Requests.AdminPasswordResetRequest.Email
  isSpec: "True"
  fullName: Api.Requests.AdminPasswordResetRequest.Email
  nameWithType: AdminPasswordResetRequest.Email
- uid: Api.Requests.AdminPasswordResetRequest.Password
  name: Password
  href: api/Api.Requests.AdminPasswordResetRequest.html#Api_Requests_AdminPasswordResetRequest_Password
  commentId: P:Api.Requests.AdminPasswordResetRequest.Password
  fullName: Api.Requests.AdminPasswordResetRequest.Password
  nameWithType: AdminPasswordResetRequest.Password
- uid: Api.Requests.AdminPasswordResetRequest.Password*
  name: Password
  href: api/Api.Requests.AdminPasswordResetRequest.html#Api_Requests_AdminPasswordResetRequest_Password_
  commentId: Overload:Api.Requests.AdminPasswordResetRequest.Password
  isSpec: "True"
  fullName: Api.Requests.AdminPasswordResetRequest.Password
  nameWithType: AdminPasswordResetRequest.Password
- uid: Api.Requests.AuthorizeRequest
  name: AuthorizeRequest
  href: api/Api.Requests.AuthorizeRequest.html
  commentId: T:Api.Requests.AuthorizeRequest
  fullName: Api.Requests.AuthorizeRequest
  nameWithType: AuthorizeRequest
- uid: Api.Requests.AuthorizeRequest.CallbackUri
  name: CallbackUri
  href: api/Api.Requests.AuthorizeRequest.html#Api_Requests_AuthorizeRequest_CallbackUri
  commentId: P:Api.Requests.AuthorizeRequest.CallbackUri
  fullName: Api.Requests.AuthorizeRequest.CallbackUri
  nameWithType: AuthorizeRequest.CallbackUri
- uid: Api.Requests.AuthorizeRequest.CallbackUri*
  name: CallbackUri
  href: api/Api.Requests.AuthorizeRequest.html#Api_Requests_AuthorizeRequest_CallbackUri_
  commentId: Overload:Api.Requests.AuthorizeRequest.CallbackUri
  isSpec: "True"
  fullName: Api.Requests.AuthorizeRequest.CallbackUri
  nameWithType: AuthorizeRequest.CallbackUri
- uid: Api.Requests.AuthorizeRequest.ClientId
  name: ClientId
  href: api/Api.Requests.AuthorizeRequest.html#Api_Requests_AuthorizeRequest_ClientId
  commentId: P:Api.Requests.AuthorizeRequest.ClientId
  fullName: Api.Requests.AuthorizeRequest.ClientId
  nameWithType: AuthorizeRequest.ClientId
- uid: Api.Requests.AuthorizeRequest.ClientId*
  name: ClientId
  href: api/Api.Requests.AuthorizeRequest.html#Api_Requests_AuthorizeRequest_ClientId_
  commentId: Overload:Api.Requests.AuthorizeRequest.ClientId
  isSpec: "True"
  fullName: Api.Requests.AuthorizeRequest.ClientId
  nameWithType: AuthorizeRequest.ClientId
- uid: Api.Requests.AuthorizeRequest.CodeChallenge
  name: CodeChallenge
  href: api/Api.Requests.AuthorizeRequest.html#Api_Requests_AuthorizeRequest_CodeChallenge
  commentId: P:Api.Requests.AuthorizeRequest.CodeChallenge
  fullName: Api.Requests.AuthorizeRequest.CodeChallenge
  nameWithType: AuthorizeRequest.CodeChallenge
- uid: Api.Requests.AuthorizeRequest.CodeChallenge*
  name: CodeChallenge
  href: api/Api.Requests.AuthorizeRequest.html#Api_Requests_AuthorizeRequest_CodeChallenge_
  commentId: Overload:Api.Requests.AuthorizeRequest.CodeChallenge
  isSpec: "True"
  fullName: Api.Requests.AuthorizeRequest.CodeChallenge
  nameWithType: AuthorizeRequest.CodeChallenge
- uid: Api.Requests.AuthorizeRequest.CodeChallengeMethod
  name: CodeChallengeMethod
  href: api/Api.Requests.AuthorizeRequest.html#Api_Requests_AuthorizeRequest_CodeChallengeMethod
  commentId: P:Api.Requests.AuthorizeRequest.CodeChallengeMethod
  fullName: Api.Requests.AuthorizeRequest.CodeChallengeMethod
  nameWithType: AuthorizeRequest.CodeChallengeMethod
- uid: Api.Requests.AuthorizeRequest.CodeChallengeMethod*
  name: CodeChallengeMethod
  href: api/Api.Requests.AuthorizeRequest.html#Api_Requests_AuthorizeRequest_CodeChallengeMethod_
  commentId: Overload:Api.Requests.AuthorizeRequest.CodeChallengeMethod
  isSpec: "True"
  fullName: Api.Requests.AuthorizeRequest.CodeChallengeMethod
  nameWithType: AuthorizeRequest.CodeChallengeMethod
- uid: Api.Requests.ConfirmEmailRequest
  name: ConfirmEmailRequest
  href: api/Api.Requests.ConfirmEmailRequest.html
  commentId: T:Api.Requests.ConfirmEmailRequest
  fullName: Api.Requests.ConfirmEmailRequest
  nameWithType: ConfirmEmailRequest
- uid: Api.Requests.ConfirmEmailRequest.Email
  name: Email
  href: api/Api.Requests.ConfirmEmailRequest.html#Api_Requests_ConfirmEmailRequest_Email
  commentId: P:Api.Requests.ConfirmEmailRequest.Email
  fullName: Api.Requests.ConfirmEmailRequest.Email
  nameWithType: ConfirmEmailRequest.Email
- uid: Api.Requests.ConfirmEmailRequest.Email*
  name: Email
  href: api/Api.Requests.ConfirmEmailRequest.html#Api_Requests_ConfirmEmailRequest_Email_
  commentId: Overload:Api.Requests.ConfirmEmailRequest.Email
  isSpec: "True"
  fullName: Api.Requests.ConfirmEmailRequest.Email
  nameWithType: ConfirmEmailRequest.Email
- uid: Api.Requests.ConfirmEmailRequest.Token
  name: Token
  href: api/Api.Requests.ConfirmEmailRequest.html#Api_Requests_ConfirmEmailRequest_Token
  commentId: P:Api.Requests.ConfirmEmailRequest.Token
  fullName: Api.Requests.ConfirmEmailRequest.Token
  nameWithType: ConfirmEmailRequest.Token
- uid: Api.Requests.ConfirmEmailRequest.Token*
  name: Token
  href: api/Api.Requests.ConfirmEmailRequest.html#Api_Requests_ConfirmEmailRequest_Token_
  commentId: Overload:Api.Requests.ConfirmEmailRequest.Token
  isSpec: "True"
  fullName: Api.Requests.ConfirmEmailRequest.Token
  nameWithType: ConfirmEmailRequest.Token
- uid: Api.Requests.CreateApplicationRequest
  name: CreateApplicationRequest
  href: api/Api.Requests.CreateApplicationRequest.html
  commentId: T:Api.Requests.CreateApplicationRequest
  fullName: Api.Requests.CreateApplicationRequest
  nameWithType: CreateApplicationRequest
- uid: Api.Requests.CreateApplicationRequest.CallbackUri
  name: CallbackUri
  href: api/Api.Requests.CreateApplicationRequest.html#Api_Requests_CreateApplicationRequest_CallbackUri
  commentId: P:Api.Requests.CreateApplicationRequest.CallbackUri
  fullName: Api.Requests.CreateApplicationRequest.CallbackUri
  nameWithType: CreateApplicationRequest.CallbackUri
- uid: Api.Requests.CreateApplicationRequest.CallbackUri*
  name: CallbackUri
  href: api/Api.Requests.CreateApplicationRequest.html#Api_Requests_CreateApplicationRequest_CallbackUri_
  commentId: Overload:Api.Requests.CreateApplicationRequest.CallbackUri
  isSpec: "True"
  fullName: Api.Requests.CreateApplicationRequest.CallbackUri
  nameWithType: CreateApplicationRequest.CallbackUri
- uid: Api.Requests.CreateApplicationRequest.Name
  name: Name
  href: api/Api.Requests.CreateApplicationRequest.html#Api_Requests_CreateApplicationRequest_Name
  commentId: P:Api.Requests.CreateApplicationRequest.Name
  fullName: Api.Requests.CreateApplicationRequest.Name
  nameWithType: CreateApplicationRequest.Name
- uid: Api.Requests.CreateApplicationRequest.Name*
  name: Name
  href: api/Api.Requests.CreateApplicationRequest.html#Api_Requests_CreateApplicationRequest_Name_
  commentId: Overload:Api.Requests.CreateApplicationRequest.Name
  isSpec: "True"
  fullName: Api.Requests.CreateApplicationRequest.Name
  nameWithType: CreateApplicationRequest.Name
- uid: Api.Requests.CreateApplicationSecretRequest
  name: CreateApplicationSecretRequest
  href: api/Api.Requests.CreateApplicationSecretRequest.html
  commentId: T:Api.Requests.CreateApplicationSecretRequest
  fullName: Api.Requests.CreateApplicationSecretRequest
  nameWithType: CreateApplicationSecretRequest
- uid: Api.Requests.CreateApplicationSecretRequest.Name
  name: Name
  href: api/Api.Requests.CreateApplicationSecretRequest.html#Api_Requests_CreateApplicationSecretRequest_Name
  commentId: P:Api.Requests.CreateApplicationSecretRequest.Name
  fullName: Api.Requests.CreateApplicationSecretRequest.Name
  nameWithType: CreateApplicationSecretRequest.Name
- uid: Api.Requests.CreateApplicationSecretRequest.Name*
  name: Name
  href: api/Api.Requests.CreateApplicationSecretRequest.html#Api_Requests_CreateApplicationSecretRequest_Name_
  commentId: Overload:Api.Requests.CreateApplicationSecretRequest.Name
  isSpec: "True"
  fullName: Api.Requests.CreateApplicationSecretRequest.Name
  nameWithType: CreateApplicationSecretRequest.Name
- uid: Api.Requests.CreateRoleRequest
  name: CreateRoleRequest
  href: api/Api.Requests.CreateRoleRequest.html
  commentId: T:Api.Requests.CreateRoleRequest
  fullName: Api.Requests.CreateRoleRequest
  nameWithType: CreateRoleRequest
- uid: Api.Requests.CreateRoleRequest.Name
  name: Name
  href: api/Api.Requests.CreateRoleRequest.html#Api_Requests_CreateRoleRequest_Name
  commentId: P:Api.Requests.CreateRoleRequest.Name
  fullName: Api.Requests.CreateRoleRequest.Name
  nameWithType: CreateRoleRequest.Name
- uid: Api.Requests.CreateRoleRequest.Name*
  name: Name
  href: api/Api.Requests.CreateRoleRequest.html#Api_Requests_CreateRoleRequest_Name_
  commentId: Overload:Api.Requests.CreateRoleRequest.Name
  isSpec: "True"
  fullName: Api.Requests.CreateRoleRequest.Name
  nameWithType: CreateRoleRequest.Name
- uid: Api.Requests.DeleteApplicationByNameRequest
  name: DeleteApplicationByNameRequest
  href: api/Api.Requests.DeleteApplicationByNameRequest.html
  commentId: T:Api.Requests.DeleteApplicationByNameRequest
  fullName: Api.Requests.DeleteApplicationByNameRequest
  nameWithType: DeleteApplicationByNameRequest
- uid: Api.Requests.DeleteApplicationByNameRequest.Name
  name: Name
  href: api/Api.Requests.DeleteApplicationByNameRequest.html#Api_Requests_DeleteApplicationByNameRequest_Name
  commentId: P:Api.Requests.DeleteApplicationByNameRequest.Name
  fullName: Api.Requests.DeleteApplicationByNameRequest.Name
  nameWithType: DeleteApplicationByNameRequest.Name
- uid: Api.Requests.DeleteApplicationByNameRequest.Name*
  name: Name
  href: api/Api.Requests.DeleteApplicationByNameRequest.html#Api_Requests_DeleteApplicationByNameRequest_Name_
  commentId: Overload:Api.Requests.DeleteApplicationByNameRequest.Name
  isSpec: "True"
  fullName: Api.Requests.DeleteApplicationByNameRequest.Name
  nameWithType: DeleteApplicationByNameRequest.Name
- uid: Api.Requests.DeleteRoleRequest
  name: DeleteRoleRequest
  href: api/Api.Requests.DeleteRoleRequest.html
  commentId: T:Api.Requests.DeleteRoleRequest
  fullName: Api.Requests.DeleteRoleRequest
  nameWithType: DeleteRoleRequest
- uid: Api.Requests.DeleteRoleRequest.Name
  name: Name
  href: api/Api.Requests.DeleteRoleRequest.html#Api_Requests_DeleteRoleRequest_Name
  commentId: P:Api.Requests.DeleteRoleRequest.Name
  fullName: Api.Requests.DeleteRoleRequest.Name
  nameWithType: DeleteRoleRequest.Name
- uid: Api.Requests.DeleteRoleRequest.Name*
  name: Name
  href: api/Api.Requests.DeleteRoleRequest.html#Api_Requests_DeleteRoleRequest_Name_
  commentId: Overload:Api.Requests.DeleteRoleRequest.Name
  isSpec: "True"
  fullName: Api.Requests.DeleteRoleRequest.Name
  nameWithType: DeleteRoleRequest.Name
- uid: Api.Requests.DeleteSessionRequest
  name: DeleteSessionRequest
  href: api/Api.Requests.DeleteSessionRequest.html
  commentId: T:Api.Requests.DeleteSessionRequest
  fullName: Api.Requests.DeleteSessionRequest
  nameWithType: DeleteSessionRequest
- uid: Api.Requests.DeleteSessionRequest.SessionId
  name: SessionId
  href: api/Api.Requests.DeleteSessionRequest.html#Api_Requests_DeleteSessionRequest_SessionId
  commentId: P:Api.Requests.DeleteSessionRequest.SessionId
  fullName: Api.Requests.DeleteSessionRequest.SessionId
  nameWithType: DeleteSessionRequest.SessionId
- uid: Api.Requests.DeleteSessionRequest.SessionId*
  name: SessionId
  href: api/Api.Requests.DeleteSessionRequest.html#Api_Requests_DeleteSessionRequest_SessionId_
  commentId: Overload:Api.Requests.DeleteSessionRequest.SessionId
  isSpec: "True"
  fullName: Api.Requests.DeleteSessionRequest.SessionId
  nameWithType: DeleteSessionRequest.SessionId
- uid: Api.Requests.DisableMultiFactorRequest
  name: DisableMultiFactorRequest
  href: api/Api.Requests.DisableMultiFactorRequest.html
  commentId: T:Api.Requests.DisableMultiFactorRequest
  fullName: Api.Requests.DisableMultiFactorRequest
  nameWithType: DisableMultiFactorRequest
- uid: Api.Requests.DisableMultiFactorRequest.Email
  name: Email
  href: api/Api.Requests.DisableMultiFactorRequest.html#Api_Requests_DisableMultiFactorRequest_Email
  commentId: P:Api.Requests.DisableMultiFactorRequest.Email
  fullName: Api.Requests.DisableMultiFactorRequest.Email
  nameWithType: DisableMultiFactorRequest.Email
- uid: Api.Requests.DisableMultiFactorRequest.Email*
  name: Email
  href: api/Api.Requests.DisableMultiFactorRequest.html#Api_Requests_DisableMultiFactorRequest_Email_
  commentId: Overload:Api.Requests.DisableMultiFactorRequest.Email
  isSpec: "True"
  fullName: Api.Requests.DisableMultiFactorRequest.Email
  nameWithType: DisableMultiFactorRequest.Email
- uid: Api.Requests.LoginRequest
  name: LoginRequest
  href: api/Api.Requests.LoginRequest.html
  commentId: T:Api.Requests.LoginRequest
  fullName: Api.Requests.LoginRequest
  nameWithType: LoginRequest
- uid: Api.Requests.LoginRequest.Email
  name: Email
  href: api/Api.Requests.LoginRequest.html#Api_Requests_LoginRequest_Email
  commentId: P:Api.Requests.LoginRequest.Email
  fullName: Api.Requests.LoginRequest.Email
  nameWithType: LoginRequest.Email
- uid: Api.Requests.LoginRequest.Email*
  name: Email
  href: api/Api.Requests.LoginRequest.html#Api_Requests_LoginRequest_Email_
  commentId: Overload:Api.Requests.LoginRequest.Email
  isSpec: "True"
  fullName: Api.Requests.LoginRequest.Email
  nameWithType: LoginRequest.Email
- uid: Api.Requests.LoginRequest.Password
  name: Password
  href: api/Api.Requests.LoginRequest.html#Api_Requests_LoginRequest_Password
  commentId: P:Api.Requests.LoginRequest.Password
  fullName: Api.Requests.LoginRequest.Password
  nameWithType: LoginRequest.Password
- uid: Api.Requests.LoginRequest.Password*
  name: Password
  href: api/Api.Requests.LoginRequest.html#Api_Requests_LoginRequest_Password_
  commentId: Overload:Api.Requests.LoginRequest.Password
  isSpec: "True"
  fullName: Api.Requests.LoginRequest.Password
  nameWithType: LoginRequest.Password
- uid: Api.Requests.LoginRequest.RememberMe
  name: RememberMe
  href: api/Api.Requests.LoginRequest.html#Api_Requests_LoginRequest_RememberMe
  commentId: P:Api.Requests.LoginRequest.RememberMe
  fullName: Api.Requests.LoginRequest.RememberMe
  nameWithType: LoginRequest.RememberMe
- uid: Api.Requests.LoginRequest.RememberMe*
  name: RememberMe
  href: api/Api.Requests.LoginRequest.html#Api_Requests_LoginRequest_RememberMe_
  commentId: Overload:Api.Requests.LoginRequest.RememberMe
  isSpec: "True"
  fullName: Api.Requests.LoginRequest.RememberMe
  nameWithType: LoginRequest.RememberMe
- uid: Api.Requests.MultiFactorLoginRequest
  name: MultiFactorLoginRequest
  href: api/Api.Requests.MultiFactorLoginRequest.html
  commentId: T:Api.Requests.MultiFactorLoginRequest
  fullName: Api.Requests.MultiFactorLoginRequest
  nameWithType: MultiFactorLoginRequest
- uid: Api.Requests.MultiFactorLoginRequest.Token
  name: Token
  href: api/Api.Requests.MultiFactorLoginRequest.html#Api_Requests_MultiFactorLoginRequest_Token
  commentId: P:Api.Requests.MultiFactorLoginRequest.Token
  fullName: Api.Requests.MultiFactorLoginRequest.Token
  nameWithType: MultiFactorLoginRequest.Token
- uid: Api.Requests.MultiFactorLoginRequest.Token*
  name: Token
  href: api/Api.Requests.MultiFactorLoginRequest.html#Api_Requests_MultiFactorLoginRequest_Token_
  commentId: Overload:Api.Requests.MultiFactorLoginRequest.Token
  isSpec: "True"
  fullName: Api.Requests.MultiFactorLoginRequest.Token
  nameWithType: MultiFactorLoginRequest.Token
- uid: Api.Requests.MultiFactorLoginRequest.UseAuthenticator
  name: UseAuthenticator
  href: api/Api.Requests.MultiFactorLoginRequest.html#Api_Requests_MultiFactorLoginRequest_UseAuthenticator
  commentId: P:Api.Requests.MultiFactorLoginRequest.UseAuthenticator
  fullName: Api.Requests.MultiFactorLoginRequest.UseAuthenticator
  nameWithType: MultiFactorLoginRequest.UseAuthenticator
- uid: Api.Requests.MultiFactorLoginRequest.UseAuthenticator*
  name: UseAuthenticator
  href: api/Api.Requests.MultiFactorLoginRequest.html#Api_Requests_MultiFactorLoginRequest_UseAuthenticator_
  commentId: Overload:Api.Requests.MultiFactorLoginRequest.UseAuthenticator
  isSpec: "True"
  fullName: Api.Requests.MultiFactorLoginRequest.UseAuthenticator
  nameWithType: MultiFactorLoginRequest.UseAuthenticator
- uid: Api.Requests.MultiFactorManageAuthenticatorRequest
  name: MultiFactorManageAuthenticatorRequest
  href: api/Api.Requests.MultiFactorManageAuthenticatorRequest.html
  commentId: T:Api.Requests.MultiFactorManageAuthenticatorRequest
  fullName: Api.Requests.MultiFactorManageAuthenticatorRequest
  nameWithType: MultiFactorManageAuthenticatorRequest
- uid: Api.Requests.MultiFactorManageAuthenticatorRequest.IsEnabled
  name: IsEnabled
  href: api/Api.Requests.MultiFactorManageAuthenticatorRequest.html#Api_Requests_MultiFactorManageAuthenticatorRequest_IsEnabled
  commentId: P:Api.Requests.MultiFactorManageAuthenticatorRequest.IsEnabled
  fullName: Api.Requests.MultiFactorManageAuthenticatorRequest.IsEnabled
  nameWithType: MultiFactorManageAuthenticatorRequest.IsEnabled
- uid: Api.Requests.MultiFactorManageAuthenticatorRequest.IsEnabled*
  name: IsEnabled
  href: api/Api.Requests.MultiFactorManageAuthenticatorRequest.html#Api_Requests_MultiFactorManageAuthenticatorRequest_IsEnabled_
  commentId: Overload:Api.Requests.MultiFactorManageAuthenticatorRequest.IsEnabled
  isSpec: "True"
  fullName: Api.Requests.MultiFactorManageAuthenticatorRequest.IsEnabled
  nameWithType: MultiFactorManageAuthenticatorRequest.IsEnabled
- uid: Api.Requests.MultiFactorManageRequest
  name: MultiFactorManageRequest
  href: api/Api.Requests.MultiFactorManageRequest.html
  commentId: T:Api.Requests.MultiFactorManageRequest
  fullName: Api.Requests.MultiFactorManageRequest
  nameWithType: MultiFactorManageRequest
- uid: Api.Requests.MultiFactorManageRequest.IsEnabled
  name: IsEnabled
  href: api/Api.Requests.MultiFactorManageRequest.html#Api_Requests_MultiFactorManageRequest_IsEnabled
  commentId: P:Api.Requests.MultiFactorManageRequest.IsEnabled
  fullName: Api.Requests.MultiFactorManageRequest.IsEnabled
  nameWithType: MultiFactorManageRequest.IsEnabled
- uid: Api.Requests.MultiFactorManageRequest.IsEnabled*
  name: IsEnabled
  href: api/Api.Requests.MultiFactorManageRequest.html#Api_Requests_MultiFactorManageRequest_IsEnabled_
  commentId: Overload:Api.Requests.MultiFactorManageRequest.IsEnabled
  isSpec: "True"
  fullName: Api.Requests.MultiFactorManageRequest.IsEnabled
  nameWithType: MultiFactorManageRequest.IsEnabled
- uid: Api.Requests.MultiFactorRecoveryCodeRedeemRequest
  name: MultiFactorRecoveryCodeRedeemRequest
  href: api/Api.Requests.MultiFactorRecoveryCodeRedeemRequest.html
  commentId: T:Api.Requests.MultiFactorRecoveryCodeRedeemRequest
  fullName: Api.Requests.MultiFactorRecoveryCodeRedeemRequest
  nameWithType: MultiFactorRecoveryCodeRedeemRequest
- uid: Api.Requests.MultiFactorRecoveryCodeRedeemRequest.Code
  name: Code
  href: api/Api.Requests.MultiFactorRecoveryCodeRedeemRequest.html#Api_Requests_MultiFactorRecoveryCodeRedeemRequest_Code
  commentId: P:Api.Requests.MultiFactorRecoveryCodeRedeemRequest.Code
  fullName: Api.Requests.MultiFactorRecoveryCodeRedeemRequest.Code
  nameWithType: MultiFactorRecoveryCodeRedeemRequest.Code
- uid: Api.Requests.MultiFactorRecoveryCodeRedeemRequest.Code*
  name: Code
  href: api/Api.Requests.MultiFactorRecoveryCodeRedeemRequest.html#Api_Requests_MultiFactorRecoveryCodeRedeemRequest_Code_
  commentId: Overload:Api.Requests.MultiFactorRecoveryCodeRedeemRequest.Code
  isSpec: "True"
  fullName: Api.Requests.MultiFactorRecoveryCodeRedeemRequest.Code
  nameWithType: MultiFactorRecoveryCodeRedeemRequest.Code
- uid: Api.Requests.MultiFactorRecoveryCodeRedeemRequest.Email
  name: Email
  href: api/Api.Requests.MultiFactorRecoveryCodeRedeemRequest.html#Api_Requests_MultiFactorRecoveryCodeRedeemRequest_Email
  commentId: P:Api.Requests.MultiFactorRecoveryCodeRedeemRequest.Email
  fullName: Api.Requests.MultiFactorRecoveryCodeRedeemRequest.Email
  nameWithType: MultiFactorRecoveryCodeRedeemRequest.Email
- uid: Api.Requests.MultiFactorRecoveryCodeRedeemRequest.Email*
  name: Email
  href: api/Api.Requests.MultiFactorRecoveryCodeRedeemRequest.html#Api_Requests_MultiFactorRecoveryCodeRedeemRequest_Email_
  commentId: Overload:Api.Requests.MultiFactorRecoveryCodeRedeemRequest.Email
  isSpec: "True"
  fullName: Api.Requests.MultiFactorRecoveryCodeRedeemRequest.Email
  nameWithType: MultiFactorRecoveryCodeRedeemRequest.Email
- uid: Api.Requests.PasswordResetRequest
  name: PasswordResetRequest
  href: api/Api.Requests.PasswordResetRequest.html
  commentId: T:Api.Requests.PasswordResetRequest
  fullName: Api.Requests.PasswordResetRequest
  nameWithType: PasswordResetRequest
- uid: Api.Requests.PasswordResetRequest.Email
  name: Email
  href: api/Api.Requests.PasswordResetRequest.html#Api_Requests_PasswordResetRequest_Email
  commentId: P:Api.Requests.PasswordResetRequest.Email
  fullName: Api.Requests.PasswordResetRequest.Email
  nameWithType: PasswordResetRequest.Email
- uid: Api.Requests.PasswordResetRequest.Email*
  name: Email
  href: api/Api.Requests.PasswordResetRequest.html#Api_Requests_PasswordResetRequest_Email_
  commentId: Overload:Api.Requests.PasswordResetRequest.Email
  isSpec: "True"
  fullName: Api.Requests.PasswordResetRequest.Email
  nameWithType: PasswordResetRequest.Email
- uid: Api.Requests.PasswordResetRequest.Password
  name: Password
  href: api/Api.Requests.PasswordResetRequest.html#Api_Requests_PasswordResetRequest_Password
  commentId: P:Api.Requests.PasswordResetRequest.Password
  fullName: Api.Requests.PasswordResetRequest.Password
  nameWithType: PasswordResetRequest.Password
- uid: Api.Requests.PasswordResetRequest.Password*
  name: Password
  href: api/Api.Requests.PasswordResetRequest.html#Api_Requests_PasswordResetRequest_Password_
  commentId: Overload:Api.Requests.PasswordResetRequest.Password
  isSpec: "True"
  fullName: Api.Requests.PasswordResetRequest.Password
  nameWithType: PasswordResetRequest.Password
- uid: Api.Requests.PasswordResetRequest.Token
  name: Token
  href: api/Api.Requests.PasswordResetRequest.html#Api_Requests_PasswordResetRequest_Token
  commentId: P:Api.Requests.PasswordResetRequest.Token
  fullName: Api.Requests.PasswordResetRequest.Token
  nameWithType: PasswordResetRequest.Token
- uid: Api.Requests.PasswordResetRequest.Token*
  name: Token
  href: api/Api.Requests.PasswordResetRequest.html#Api_Requests_PasswordResetRequest_Token_
  commentId: Overload:Api.Requests.PasswordResetRequest.Token
  isSpec: "True"
  fullName: Api.Requests.PasswordResetRequest.Token
  nameWithType: PasswordResetRequest.Token
- uid: Api.Requests.ReadApplicationByNameRequest
  name: ReadApplicationByNameRequest
  href: api/Api.Requests.ReadApplicationByNameRequest.html
  commentId: T:Api.Requests.ReadApplicationByNameRequest
  fullName: Api.Requests.ReadApplicationByNameRequest
  nameWithType: ReadApplicationByNameRequest
- uid: Api.Requests.ReadApplicationByNameRequest.Name
  name: Name
  href: api/Api.Requests.ReadApplicationByNameRequest.html#Api_Requests_ReadApplicationByNameRequest_Name
  commentId: P:Api.Requests.ReadApplicationByNameRequest.Name
  fullName: Api.Requests.ReadApplicationByNameRequest.Name
  nameWithType: ReadApplicationByNameRequest.Name
- uid: Api.Requests.ReadApplicationByNameRequest.Name*
  name: Name
  href: api/Api.Requests.ReadApplicationByNameRequest.html#Api_Requests_ReadApplicationByNameRequest_Name_
  commentId: Overload:Api.Requests.ReadApplicationByNameRequest.Name
  isSpec: "True"
  fullName: Api.Requests.ReadApplicationByNameRequest.Name
  nameWithType: ReadApplicationByNameRequest.Name
- uid: Api.Requests.RegisterRequest
  name: RegisterRequest
  href: api/Api.Requests.RegisterRequest.html
  commentId: T:Api.Requests.RegisterRequest
  fullName: Api.Requests.RegisterRequest
  nameWithType: RegisterRequest
- uid: Api.Requests.RegisterRequest.Address
  name: Address
  href: api/Api.Requests.RegisterRequest.html#Api_Requests_RegisterRequest_Address
  commentId: P:Api.Requests.RegisterRequest.Address
  fullName: Api.Requests.RegisterRequest.Address
  nameWithType: RegisterRequest.Address
- uid: Api.Requests.RegisterRequest.Address*
  name: Address
  href: api/Api.Requests.RegisterRequest.html#Api_Requests_RegisterRequest_Address_
  commentId: Overload:Api.Requests.RegisterRequest.Address
  isSpec: "True"
  fullName: Api.Requests.RegisterRequest.Address
  nameWithType: RegisterRequest.Address
- uid: Api.Requests.RegisterRequest.Email
  name: Email
  href: api/Api.Requests.RegisterRequest.html#Api_Requests_RegisterRequest_Email
  commentId: P:Api.Requests.RegisterRequest.Email
  fullName: Api.Requests.RegisterRequest.Email
  nameWithType: RegisterRequest.Email
- uid: Api.Requests.RegisterRequest.Email*
  name: Email
  href: api/Api.Requests.RegisterRequest.html#Api_Requests_RegisterRequest_Email_
  commentId: Overload:Api.Requests.RegisterRequest.Email
  isSpec: "True"
  fullName: Api.Requests.RegisterRequest.Email
  nameWithType: RegisterRequest.Email
- uid: Api.Requests.RegisterRequest.Password
  name: Password
  href: api/Api.Requests.RegisterRequest.html#Api_Requests_RegisterRequest_Password
  commentId: P:Api.Requests.RegisterRequest.Password
  fullName: Api.Requests.RegisterRequest.Password
  nameWithType: RegisterRequest.Password
- uid: Api.Requests.RegisterRequest.Password*
  name: Password
  href: api/Api.Requests.RegisterRequest.html#Api_Requests_RegisterRequest_Password_
  commentId: Overload:Api.Requests.RegisterRequest.Password
  isSpec: "True"
  fullName: Api.Requests.RegisterRequest.Password
  nameWithType: RegisterRequest.Password
- uid: Api.Requests.RegisterRequest.PhoneNumber
  name: PhoneNumber
  href: api/Api.Requests.RegisterRequest.html#Api_Requests_RegisterRequest_PhoneNumber
  commentId: P:Api.Requests.RegisterRequest.PhoneNumber
  fullName: Api.Requests.RegisterRequest.PhoneNumber
  nameWithType: RegisterRequest.PhoneNumber
- uid: Api.Requests.RegisterRequest.PhoneNumber*
  name: PhoneNumber
  href: api/Api.Requests.RegisterRequest.html#Api_Requests_RegisterRequest_PhoneNumber_
  commentId: Overload:Api.Requests.RegisterRequest.PhoneNumber
  isSpec: "True"
  fullName: Api.Requests.RegisterRequest.PhoneNumber
  nameWithType: RegisterRequest.PhoneNumber
- uid: Api.Requests.SendTokenRequest
  name: SendTokenRequest
  href: api/Api.Requests.SendTokenRequest.html
  commentId: T:Api.Requests.SendTokenRequest
  fullName: Api.Requests.SendTokenRequest
  nameWithType: SendTokenRequest
- uid: Api.Requests.SendTokenRequest.Email
  name: Email
  href: api/Api.Requests.SendTokenRequest.html#Api_Requests_SendTokenRequest_Email
  commentId: P:Api.Requests.SendTokenRequest.Email
  fullName: Api.Requests.SendTokenRequest.Email
  nameWithType: SendTokenRequest.Email
- uid: Api.Requests.SendTokenRequest.Email*
  name: Email
  href: api/Api.Requests.SendTokenRequest.html#Api_Requests_SendTokenRequest_Email_
  commentId: Overload:Api.Requests.SendTokenRequest.Email
  isSpec: "True"
  fullName: Api.Requests.SendTokenRequest.Email
  nameWithType: SendTokenRequest.Email
- uid: Api.Requests.SendTokenRequest.TokenType
  name: TokenType
  href: api/Api.Requests.SendTokenRequest.html#Api_Requests_SendTokenRequest_TokenType
  commentId: P:Api.Requests.SendTokenRequest.TokenType
  fullName: Api.Requests.SendTokenRequest.TokenType
  nameWithType: SendTokenRequest.TokenType
- uid: Api.Requests.SendTokenRequest.TokenType*
  name: TokenType
  href: api/Api.Requests.SendTokenRequest.html#Api_Requests_SendTokenRequest_TokenType_
  commentId: Overload:Api.Requests.SendTokenRequest.TokenType
  isSpec: "True"
  fullName: Api.Requests.SendTokenRequest.TokenType
  nameWithType: SendTokenRequest.TokenType
- uid: Api.Requests.TokenRequest
  name: TokenRequest
  href: api/Api.Requests.TokenRequest.html
  commentId: T:Api.Requests.TokenRequest
  fullName: Api.Requests.TokenRequest
  nameWithType: TokenRequest
- uid: Api.Requests.TokenRequest.ClientId
  name: ClientId
  href: api/Api.Requests.TokenRequest.html#Api_Requests_TokenRequest_ClientId
  commentId: P:Api.Requests.TokenRequest.ClientId
  fullName: Api.Requests.TokenRequest.ClientId
  nameWithType: TokenRequest.ClientId
- uid: Api.Requests.TokenRequest.ClientId*
  name: ClientId
  href: api/Api.Requests.TokenRequest.html#Api_Requests_TokenRequest_ClientId_
  commentId: Overload:Api.Requests.TokenRequest.ClientId
  isSpec: "True"
  fullName: Api.Requests.TokenRequest.ClientId
  nameWithType: TokenRequest.ClientId
- uid: Api.Requests.TokenRequest.ClientSecret
  name: ClientSecret
  href: api/Api.Requests.TokenRequest.html#Api_Requests_TokenRequest_ClientSecret
  commentId: P:Api.Requests.TokenRequest.ClientSecret
  fullName: Api.Requests.TokenRequest.ClientSecret
  nameWithType: TokenRequest.ClientSecret
- uid: Api.Requests.TokenRequest.ClientSecret*
  name: ClientSecret
  href: api/Api.Requests.TokenRequest.html#Api_Requests_TokenRequest_ClientSecret_
  commentId: Overload:Api.Requests.TokenRequest.ClientSecret
  isSpec: "True"
  fullName: Api.Requests.TokenRequest.ClientSecret
  nameWithType: TokenRequest.ClientSecret
- uid: Api.Requests.TokenRequest.Code
  name: Code
  href: api/Api.Requests.TokenRequest.html#Api_Requests_TokenRequest_Code
  commentId: P:Api.Requests.TokenRequest.Code
  fullName: Api.Requests.TokenRequest.Code
  nameWithType: TokenRequest.Code
- uid: Api.Requests.TokenRequest.Code*
  name: Code
  href: api/Api.Requests.TokenRequest.html#Api_Requests_TokenRequest_Code_
  commentId: Overload:Api.Requests.TokenRequest.Code
  isSpec: "True"
  fullName: Api.Requests.TokenRequest.Code
  nameWithType: TokenRequest.Code
- uid: Api.Requests.TokenRequest.CodeVerifier
  name: CodeVerifier
  href: api/Api.Requests.TokenRequest.html#Api_Requests_TokenRequest_CodeVerifier
  commentId: P:Api.Requests.TokenRequest.CodeVerifier
  fullName: Api.Requests.TokenRequest.CodeVerifier
  nameWithType: TokenRequest.CodeVerifier
- uid: Api.Requests.TokenRequest.CodeVerifier*
  name: CodeVerifier
  href: api/Api.Requests.TokenRequest.html#Api_Requests_TokenRequest_CodeVerifier_
  commentId: Overload:Api.Requests.TokenRequest.CodeVerifier
  isSpec: "True"
  fullName: Api.Requests.TokenRequest.CodeVerifier
  nameWithType: TokenRequest.CodeVerifier
- uid: Api.Requests.TokenRequest.DeviceCode
  name: DeviceCode
  href: api/Api.Requests.TokenRequest.html#Api_Requests_TokenRequest_DeviceCode
  commentId: P:Api.Requests.TokenRequest.DeviceCode
  fullName: Api.Requests.TokenRequest.DeviceCode
  nameWithType: TokenRequest.DeviceCode
- uid: Api.Requests.TokenRequest.DeviceCode*
  name: DeviceCode
  href: api/Api.Requests.TokenRequest.html#Api_Requests_TokenRequest_DeviceCode_
  commentId: Overload:Api.Requests.TokenRequest.DeviceCode
  isSpec: "True"
  fullName: Api.Requests.TokenRequest.DeviceCode
  nameWithType: TokenRequest.DeviceCode
- uid: Api.Requests.TokenRequest.GrantType
  name: GrantType
  href: api/Api.Requests.TokenRequest.html#Api_Requests_TokenRequest_GrantType
  commentId: P:Api.Requests.TokenRequest.GrantType
  fullName: Api.Requests.TokenRequest.GrantType
  nameWithType: TokenRequest.GrantType
- uid: Api.Requests.TokenRequest.GrantType*
  name: GrantType
  href: api/Api.Requests.TokenRequest.html#Api_Requests_TokenRequest_GrantType_
  commentId: Overload:Api.Requests.TokenRequest.GrantType
  isSpec: "True"
  fullName: Api.Requests.TokenRequest.GrantType
  nameWithType: TokenRequest.GrantType
- uid: Api.Requests.TokenRequest.RefreshToken
  name: RefreshToken
  href: api/Api.Requests.TokenRequest.html#Api_Requests_TokenRequest_RefreshToken
  commentId: P:Api.Requests.TokenRequest.RefreshToken
  fullName: Api.Requests.TokenRequest.RefreshToken
  nameWithType: TokenRequest.RefreshToken
- uid: Api.Requests.TokenRequest.RefreshToken*
  name: RefreshToken
  href: api/Api.Requests.TokenRequest.html#Api_Requests_TokenRequest_RefreshToken_
  commentId: Overload:Api.Requests.TokenRequest.RefreshToken
  isSpec: "True"
  fullName: Api.Requests.TokenRequest.RefreshToken
  nameWithType: TokenRequest.RefreshToken
- uid: Api.Requests.TokenRequest.Scopes
  name: Scopes
  href: api/Api.Requests.TokenRequest.html#Api_Requests_TokenRequest_Scopes
  commentId: P:Api.Requests.TokenRequest.Scopes
  fullName: Api.Requests.TokenRequest.Scopes
  nameWithType: TokenRequest.Scopes
- uid: Api.Requests.TokenRequest.Scopes*
  name: Scopes
  href: api/Api.Requests.TokenRequest.html#Api_Requests_TokenRequest_Scopes_
  commentId: Overload:Api.Requests.TokenRequest.Scopes
  isSpec: "True"
  fullName: Api.Requests.TokenRequest.Scopes
  nameWithType: TokenRequest.Scopes
- uid: Api.Requests.TokenRequest.State
  name: State
  href: api/Api.Requests.TokenRequest.html#Api_Requests_TokenRequest_State
  commentId: P:Api.Requests.TokenRequest.State
  fullName: Api.Requests.TokenRequest.State
  nameWithType: TokenRequest.State
- uid: Api.Requests.TokenRequest.State*
  name: State
  href: api/Api.Requests.TokenRequest.html#Api_Requests_TokenRequest_State_
  commentId: Overload:Api.Requests.TokenRequest.State
  isSpec: "True"
  fullName: Api.Requests.TokenRequest.State
  nameWithType: TokenRequest.State
- uid: Api.Requests.UpdateAddressRequest
  name: UpdateAddressRequest
  href: api/Api.Requests.UpdateAddressRequest.html
  commentId: T:Api.Requests.UpdateAddressRequest
  fullName: Api.Requests.UpdateAddressRequest
  nameWithType: UpdateAddressRequest
- uid: Api.Requests.UpdateAddressRequest.Address
  name: Address
  href: api/Api.Requests.UpdateAddressRequest.html#Api_Requests_UpdateAddressRequest_Address
  commentId: P:Api.Requests.UpdateAddressRequest.Address
  fullName: Api.Requests.UpdateAddressRequest.Address
  nameWithType: UpdateAddressRequest.Address
- uid: Api.Requests.UpdateAddressRequest.Address*
  name: Address
  href: api/Api.Requests.UpdateAddressRequest.html#Api_Requests_UpdateAddressRequest_Address_
  commentId: Overload:Api.Requests.UpdateAddressRequest.Address
  isSpec: "True"
  fullName: Api.Requests.UpdateAddressRequest.Address
  nameWithType: UpdateAddressRequest.Address
- uid: Api.Requests.UpdateApplicationByNameRequest
  name: UpdateApplicationByNameRequest
  href: api/Api.Requests.UpdateApplicationByNameRequest.html
  commentId: T:Api.Requests.UpdateApplicationByNameRequest
  fullName: Api.Requests.UpdateApplicationByNameRequest
  nameWithType: UpdateApplicationByNameRequest
- uid: Api.Requests.UpdateApplicationByNameRequest.CurrentName
  name: CurrentName
  href: api/Api.Requests.UpdateApplicationByNameRequest.html#Api_Requests_UpdateApplicationByNameRequest_CurrentName
  commentId: P:Api.Requests.UpdateApplicationByNameRequest.CurrentName
  fullName: Api.Requests.UpdateApplicationByNameRequest.CurrentName
  nameWithType: UpdateApplicationByNameRequest.CurrentName
- uid: Api.Requests.UpdateApplicationByNameRequest.CurrentName*
  name: CurrentName
  href: api/Api.Requests.UpdateApplicationByNameRequest.html#Api_Requests_UpdateApplicationByNameRequest_CurrentName_
  commentId: Overload:Api.Requests.UpdateApplicationByNameRequest.CurrentName
  isSpec: "True"
  fullName: Api.Requests.UpdateApplicationByNameRequest.CurrentName
  nameWithType: UpdateApplicationByNameRequest.CurrentName
- uid: Api.Requests.UpdateApplicationByNameRequest.NewCallbackUri
  name: NewCallbackUri
  href: api/Api.Requests.UpdateApplicationByNameRequest.html#Api_Requests_UpdateApplicationByNameRequest_NewCallbackUri
  commentId: P:Api.Requests.UpdateApplicationByNameRequest.NewCallbackUri
  fullName: Api.Requests.UpdateApplicationByNameRequest.NewCallbackUri
  nameWithType: UpdateApplicationByNameRequest.NewCallbackUri
- uid: Api.Requests.UpdateApplicationByNameRequest.NewCallbackUri*
  name: NewCallbackUri
  href: api/Api.Requests.UpdateApplicationByNameRequest.html#Api_Requests_UpdateApplicationByNameRequest_NewCallbackUri_
  commentId: Overload:Api.Requests.UpdateApplicationByNameRequest.NewCallbackUri
  isSpec: "True"
  fullName: Api.Requests.UpdateApplicationByNameRequest.NewCallbackUri
  nameWithType: UpdateApplicationByNameRequest.NewCallbackUri
- uid: Api.Requests.UpdateApplicationByNameRequest.NewName
  name: NewName
  href: api/Api.Requests.UpdateApplicationByNameRequest.html#Api_Requests_UpdateApplicationByNameRequest_NewName
  commentId: P:Api.Requests.UpdateApplicationByNameRequest.NewName
  fullName: Api.Requests.UpdateApplicationByNameRequest.NewName
  nameWithType: UpdateApplicationByNameRequest.NewName
- uid: Api.Requests.UpdateApplicationByNameRequest.NewName*
  name: NewName
  href: api/Api.Requests.UpdateApplicationByNameRequest.html#Api_Requests_UpdateApplicationByNameRequest_NewName_
  commentId: Overload:Api.Requests.UpdateApplicationByNameRequest.NewName
  isSpec: "True"
  fullName: Api.Requests.UpdateApplicationByNameRequest.NewName
  nameWithType: UpdateApplicationByNameRequest.NewName
- uid: Api.Requests.UpdateEmailRequest
  name: UpdateEmailRequest
  href: api/Api.Requests.UpdateEmailRequest.html
  commentId: T:Api.Requests.UpdateEmailRequest
  fullName: Api.Requests.UpdateEmailRequest
  nameWithType: UpdateEmailRequest
- uid: Api.Requests.UpdateEmailRequest.Email
  name: Email
  href: api/Api.Requests.UpdateEmailRequest.html#Api_Requests_UpdateEmailRequest_Email
  commentId: P:Api.Requests.UpdateEmailRequest.Email
  fullName: Api.Requests.UpdateEmailRequest.Email
  nameWithType: UpdateEmailRequest.Email
- uid: Api.Requests.UpdateEmailRequest.Email*
  name: Email
  href: api/Api.Requests.UpdateEmailRequest.html#Api_Requests_UpdateEmailRequest_Email_
  commentId: Overload:Api.Requests.UpdateEmailRequest.Email
  isSpec: "True"
  fullName: Api.Requests.UpdateEmailRequest.Email
  nameWithType: UpdateEmailRequest.Email
- uid: Api.Requests.UpdateEmailRequest.Token
  name: Token
  href: api/Api.Requests.UpdateEmailRequest.html#Api_Requests_UpdateEmailRequest_Token
  commentId: P:Api.Requests.UpdateEmailRequest.Token
  fullName: Api.Requests.UpdateEmailRequest.Token
  nameWithType: UpdateEmailRequest.Token
- uid: Api.Requests.UpdateEmailRequest.Token*
  name: Token
  href: api/Api.Requests.UpdateEmailRequest.html#Api_Requests_UpdateEmailRequest_Token_
  commentId: Overload:Api.Requests.UpdateEmailRequest.Token
  isSpec: "True"
  fullName: Api.Requests.UpdateEmailRequest.Token
  nameWithType: UpdateEmailRequest.Token
- uid: Api.Requests.UpdatePhoneNumberRequest
  name: UpdatePhoneNumberRequest
  href: api/Api.Requests.UpdatePhoneNumberRequest.html
  commentId: T:Api.Requests.UpdatePhoneNumberRequest
  fullName: Api.Requests.UpdatePhoneNumberRequest
  nameWithType: UpdatePhoneNumberRequest
- uid: Api.Requests.UpdatePhoneNumberRequest.PhoneNumber
  name: PhoneNumber
  href: api/Api.Requests.UpdatePhoneNumberRequest.html#Api_Requests_UpdatePhoneNumberRequest_PhoneNumber
  commentId: P:Api.Requests.UpdatePhoneNumberRequest.PhoneNumber
  fullName: Api.Requests.UpdatePhoneNumberRequest.PhoneNumber
  nameWithType: UpdatePhoneNumberRequest.PhoneNumber
- uid: Api.Requests.UpdatePhoneNumberRequest.PhoneNumber*
  name: PhoneNumber
  href: api/Api.Requests.UpdatePhoneNumberRequest.html#Api_Requests_UpdatePhoneNumberRequest_PhoneNumber_
  commentId: Overload:Api.Requests.UpdatePhoneNumberRequest.PhoneNumber
  isSpec: "True"
  fullName: Api.Requests.UpdatePhoneNumberRequest.PhoneNumber
  nameWithType: UpdatePhoneNumberRequest.PhoneNumber
- uid: Api.Requests.UpdatePhoneNumberRequest.Token
  name: Token
  href: api/Api.Requests.UpdatePhoneNumberRequest.html#Api_Requests_UpdatePhoneNumberRequest_Token
  commentId: P:Api.Requests.UpdatePhoneNumberRequest.Token
  fullName: Api.Requests.UpdatePhoneNumberRequest.Token
  nameWithType: UpdatePhoneNumberRequest.Token
- uid: Api.Requests.UpdatePhoneNumberRequest.Token*
  name: Token
  href: api/Api.Requests.UpdatePhoneNumberRequest.html#Api_Requests_UpdatePhoneNumberRequest_Token_
  commentId: Overload:Api.Requests.UpdatePhoneNumberRequest.Token
  isSpec: "True"
  fullName: Api.Requests.UpdatePhoneNumberRequest.Token
  nameWithType: UpdatePhoneNumberRequest.Token
- uid: Api.Requests.UpdateRoleRequest
  name: UpdateRoleRequest
  href: api/Api.Requests.UpdateRoleRequest.html
  commentId: T:Api.Requests.UpdateRoleRequest
  fullName: Api.Requests.UpdateRoleRequest
  nameWithType: UpdateRoleRequest
- uid: Api.Requests.UpdateRoleRequest.CurrentName
  name: CurrentName
  href: api/Api.Requests.UpdateRoleRequest.html#Api_Requests_UpdateRoleRequest_CurrentName
  commentId: P:Api.Requests.UpdateRoleRequest.CurrentName
  fullName: Api.Requests.UpdateRoleRequest.CurrentName
  nameWithType: UpdateRoleRequest.CurrentName
- uid: Api.Requests.UpdateRoleRequest.CurrentName*
  name: CurrentName
  href: api/Api.Requests.UpdateRoleRequest.html#Api_Requests_UpdateRoleRequest_CurrentName_
  commentId: Overload:Api.Requests.UpdateRoleRequest.CurrentName
  isSpec: "True"
  fullName: Api.Requests.UpdateRoleRequest.CurrentName
  nameWithType: UpdateRoleRequest.CurrentName
- uid: Api.Requests.UpdateRoleRequest.NewName
  name: NewName
  href: api/Api.Requests.UpdateRoleRequest.html#Api_Requests_UpdateRoleRequest_NewName
  commentId: P:Api.Requests.UpdateRoleRequest.NewName
  fullName: Api.Requests.UpdateRoleRequest.NewName
  nameWithType: UpdateRoleRequest.NewName
- uid: Api.Requests.UpdateRoleRequest.NewName*
  name: NewName
  href: api/Api.Requests.UpdateRoleRequest.html#Api_Requests_UpdateRoleRequest_NewName_
  commentId: Overload:Api.Requests.UpdateRoleRequest.NewName
  isSpec: "True"
  fullName: Api.Requests.UpdateRoleRequest.NewName
  nameWithType: UpdateRoleRequest.NewName
- uid: Api.Responses
  name: Api.Responses
  href: api/Api.Responses.html
  commentId: N:Api.Responses
  fullName: Api.Responses
  nameWithType: Api.Responses
- uid: Api.Responses.ActivityResponse
  name: ActivityResponse
  href: api/Api.Responses.ActivityResponse.html
  commentId: T:Api.Responses.ActivityResponse
  fullName: Api.Responses.ActivityResponse
  nameWithType: ActivityResponse
- uid: Api.Responses.ActivityResponse.ActivityType
  name: ActivityType
  href: api/Api.Responses.ActivityResponse.html#Api_Responses_ActivityResponse_ActivityType
  commentId: P:Api.Responses.ActivityResponse.ActivityType
  fullName: Api.Responses.ActivityResponse.ActivityType
  nameWithType: ActivityResponse.ActivityType
- uid: Api.Responses.ActivityResponse.ActivityType*
  name: ActivityType
  href: api/Api.Responses.ActivityResponse.html#Api_Responses_ActivityResponse_ActivityType_
  commentId: Overload:Api.Responses.ActivityResponse.ActivityType
  isSpec: "True"
  fullName: Api.Responses.ActivityResponse.ActivityType
  nameWithType: ActivityResponse.ActivityType
- uid: Api.Responses.ActivityResponse.CreatedOn
  name: CreatedOn
  href: api/Api.Responses.ActivityResponse.html#Api_Responses_ActivityResponse_CreatedOn
  commentId: P:Api.Responses.ActivityResponse.CreatedOn
  fullName: Api.Responses.ActivityResponse.CreatedOn
  nameWithType: ActivityResponse.CreatedOn
- uid: Api.Responses.ActivityResponse.CreatedOn*
  name: CreatedOn
  href: api/Api.Responses.ActivityResponse.html#Api_Responses_ActivityResponse_CreatedOn_
  commentId: Overload:Api.Responses.ActivityResponse.CreatedOn
  isSpec: "True"
  fullName: Api.Responses.ActivityResponse.CreatedOn
  nameWithType: ActivityResponse.CreatedOn
- uid: Api.Responses.ActivityResponse.Data
  name: Data
  href: api/Api.Responses.ActivityResponse.html#Api_Responses_ActivityResponse_Data
  commentId: P:Api.Responses.ActivityResponse.Data
  fullName: Api.Responses.ActivityResponse.Data
  nameWithType: ActivityResponse.Data
- uid: Api.Responses.ActivityResponse.Data*
  name: Data
  href: api/Api.Responses.ActivityResponse.html#Api_Responses_ActivityResponse_Data_
  commentId: Overload:Api.Responses.ActivityResponse.Data
  isSpec: "True"
  fullName: Api.Responses.ActivityResponse.Data
  nameWithType: ActivityResponse.Data
- uid: Api.Responses.ActivityResponse.SequenceId
  name: SequenceId
  href: api/Api.Responses.ActivityResponse.html#Api_Responses_ActivityResponse_SequenceId
  commentId: P:Api.Responses.ActivityResponse.SequenceId
  fullName: Api.Responses.ActivityResponse.SequenceId
  nameWithType: ActivityResponse.SequenceId
- uid: Api.Responses.ActivityResponse.SequenceId*
  name: SequenceId
  href: api/Api.Responses.ActivityResponse.html#Api_Responses_ActivityResponse_SequenceId_
  commentId: Overload:Api.Responses.ActivityResponse.SequenceId
  isSpec: "True"
  fullName: Api.Responses.ActivityResponse.SequenceId
  nameWithType: ActivityResponse.SequenceId
- uid: Api.Responses.GetUserResponse
  name: GetUserResponse
  href: api/Api.Responses.GetUserResponse.html
  commentId: T:Api.Responses.GetUserResponse
  fullName: Api.Responses.GetUserResponse
  nameWithType: GetUserResponse
- uid: Api.Responses.GetUserResponse.AccessFailedCount
  name: AccessFailedCount
  href: api/Api.Responses.GetUserResponse.html#Api_Responses_GetUserResponse_AccessFailedCount
  commentId: P:Api.Responses.GetUserResponse.AccessFailedCount
  fullName: Api.Responses.GetUserResponse.AccessFailedCount
  nameWithType: GetUserResponse.AccessFailedCount
- uid: Api.Responses.GetUserResponse.AccessFailedCount*
  name: AccessFailedCount
  href: api/Api.Responses.GetUserResponse.html#Api_Responses_GetUserResponse_AccessFailedCount_
  commentId: Overload:Api.Responses.GetUserResponse.AccessFailedCount
  isSpec: "True"
  fullName: Api.Responses.GetUserResponse.AccessFailedCount
  nameWithType: GetUserResponse.AccessFailedCount
- uid: Api.Responses.GetUserResponse.Address
  name: Address
  href: api/Api.Responses.GetUserResponse.html#Api_Responses_GetUserResponse_Address
  commentId: P:Api.Responses.GetUserResponse.Address
  fullName: Api.Responses.GetUserResponse.Address
  nameWithType: GetUserResponse.Address
- uid: Api.Responses.GetUserResponse.Address*
  name: Address
  href: api/Api.Responses.GetUserResponse.html#Api_Responses_GetUserResponse_Address_
  commentId: Overload:Api.Responses.GetUserResponse.Address
  isSpec: "True"
  fullName: Api.Responses.GetUserResponse.Address
  nameWithType: GetUserResponse.Address
- uid: Api.Responses.GetUserResponse.CreatedBy
  name: CreatedBy
  href: api/Api.Responses.GetUserResponse.html#Api_Responses_GetUserResponse_CreatedBy
  commentId: P:Api.Responses.GetUserResponse.CreatedBy
  fullName: Api.Responses.GetUserResponse.CreatedBy
  nameWithType: GetUserResponse.CreatedBy
- uid: Api.Responses.GetUserResponse.CreatedBy*
  name: CreatedBy
  href: api/Api.Responses.GetUserResponse.html#Api_Responses_GetUserResponse_CreatedBy_
  commentId: Overload:Api.Responses.GetUserResponse.CreatedBy
  isSpec: "True"
  fullName: Api.Responses.GetUserResponse.CreatedBy
  nameWithType: GetUserResponse.CreatedBy
- uid: Api.Responses.GetUserResponse.CreatedOnUtc
  name: CreatedOnUtc
  href: api/Api.Responses.GetUserResponse.html#Api_Responses_GetUserResponse_CreatedOnUtc
  commentId: P:Api.Responses.GetUserResponse.CreatedOnUtc
  fullName: Api.Responses.GetUserResponse.CreatedOnUtc
  nameWithType: GetUserResponse.CreatedOnUtc
- uid: Api.Responses.GetUserResponse.CreatedOnUtc*
  name: CreatedOnUtc
  href: api/Api.Responses.GetUserResponse.html#Api_Responses_GetUserResponse_CreatedOnUtc_
  commentId: Overload:Api.Responses.GetUserResponse.CreatedOnUtc
  isSpec: "True"
  fullName: Api.Responses.GetUserResponse.CreatedOnUtc
  nameWithType: GetUserResponse.CreatedOnUtc
- uid: Api.Responses.GetUserResponse.DeletedBy
  name: DeletedBy
  href: api/Api.Responses.GetUserResponse.html#Api_Responses_GetUserResponse_DeletedBy
  commentId: P:Api.Responses.GetUserResponse.DeletedBy
  fullName: Api.Responses.GetUserResponse.DeletedBy
  nameWithType: GetUserResponse.DeletedBy
- uid: Api.Responses.GetUserResponse.DeletedBy*
  name: DeletedBy
  href: api/Api.Responses.GetUserResponse.html#Api_Responses_GetUserResponse_DeletedBy_
  commentId: Overload:Api.Responses.GetUserResponse.DeletedBy
  isSpec: "True"
  fullName: Api.Responses.GetUserResponse.DeletedBy
  nameWithType: GetUserResponse.DeletedBy
- uid: Api.Responses.GetUserResponse.DeletedOnUtc
  name: DeletedOnUtc
  href: api/Api.Responses.GetUserResponse.html#Api_Responses_GetUserResponse_DeletedOnUtc
  commentId: P:Api.Responses.GetUserResponse.DeletedOnUtc
  fullName: Api.Responses.GetUserResponse.DeletedOnUtc
  nameWithType: GetUserResponse.DeletedOnUtc
- uid: Api.Responses.GetUserResponse.DeletedOnUtc*
  name: DeletedOnUtc
  href: api/Api.Responses.GetUserResponse.html#Api_Responses_GetUserResponse_DeletedOnUtc_
  commentId: Overload:Api.Responses.GetUserResponse.DeletedOnUtc
  isSpec: "True"
  fullName: Api.Responses.GetUserResponse.DeletedOnUtc
  nameWithType: GetUserResponse.DeletedOnUtc
- uid: Api.Responses.GetUserResponse.Email
  name: Email
  href: api/Api.Responses.GetUserResponse.html#Api_Responses_GetUserResponse_Email
  commentId: P:Api.Responses.GetUserResponse.Email
  fullName: Api.Responses.GetUserResponse.Email
  nameWithType: GetUserResponse.Email
- uid: Api.Responses.GetUserResponse.Email*
  name: Email
  href: api/Api.Responses.GetUserResponse.html#Api_Responses_GetUserResponse_Email_
  commentId: Overload:Api.Responses.GetUserResponse.Email
  isSpec: "True"
  fullName: Api.Responses.GetUserResponse.Email
  nameWithType: GetUserResponse.Email
- uid: Api.Responses.GetUserResponse.EmailConfirmed
  name: EmailConfirmed
  href: api/Api.Responses.GetUserResponse.html#Api_Responses_GetUserResponse_EmailConfirmed
  commentId: P:Api.Responses.GetUserResponse.EmailConfirmed
  fullName: Api.Responses.GetUserResponse.EmailConfirmed
  nameWithType: GetUserResponse.EmailConfirmed
- uid: Api.Responses.GetUserResponse.EmailConfirmed*
  name: EmailConfirmed
  href: api/Api.Responses.GetUserResponse.html#Api_Responses_GetUserResponse_EmailConfirmed_
  commentId: Overload:Api.Responses.GetUserResponse.EmailConfirmed
  isSpec: "True"
  fullName: Api.Responses.GetUserResponse.EmailConfirmed
  nameWithType: GetUserResponse.EmailConfirmed
- uid: Api.Responses.GetUserResponse.Id
  name: Id
  href: api/Api.Responses.GetUserResponse.html#Api_Responses_GetUserResponse_Id
  commentId: P:Api.Responses.GetUserResponse.Id
  fullName: Api.Responses.GetUserResponse.Id
  nameWithType: GetUserResponse.Id
- uid: Api.Responses.GetUserResponse.Id*
  name: Id
  href: api/Api.Responses.GetUserResponse.html#Api_Responses_GetUserResponse_Id_
  commentId: Overload:Api.Responses.GetUserResponse.Id
  isSpec: "True"
  fullName: Api.Responses.GetUserResponse.Id
  nameWithType: GetUserResponse.Id
- uid: Api.Responses.GetUserResponse.IsDeleted
  name: IsDeleted
  href: api/Api.Responses.GetUserResponse.html#Api_Responses_GetUserResponse_IsDeleted
  commentId: P:Api.Responses.GetUserResponse.IsDeleted
  fullName: Api.Responses.GetUserResponse.IsDeleted
  nameWithType: GetUserResponse.IsDeleted
- uid: Api.Responses.GetUserResponse.IsDeleted*
  name: IsDeleted
  href: api/Api.Responses.GetUserResponse.html#Api_Responses_GetUserResponse_IsDeleted_
  commentId: Overload:Api.Responses.GetUserResponse.IsDeleted
  isSpec: "True"
  fullName: Api.Responses.GetUserResponse.IsDeleted
  nameWithType: GetUserResponse.IsDeleted
- uid: Api.Responses.GetUserResponse.LastLoginDateTime
  name: LastLoginDateTime
  href: api/Api.Responses.GetUserResponse.html#Api_Responses_GetUserResponse_LastLoginDateTime
  commentId: P:Api.Responses.GetUserResponse.LastLoginDateTime
  fullName: Api.Responses.GetUserResponse.LastLoginDateTime
  nameWithType: GetUserResponse.LastLoginDateTime
- uid: Api.Responses.GetUserResponse.LastLoginDateTime*
  name: LastLoginDateTime
  href: api/Api.Responses.GetUserResponse.html#Api_Responses_GetUserResponse_LastLoginDateTime_
  commentId: Overload:Api.Responses.GetUserResponse.LastLoginDateTime
  isSpec: "True"
  fullName: Api.Responses.GetUserResponse.LastLoginDateTime
  nameWithType: GetUserResponse.LastLoginDateTime
- uid: Api.Responses.GetUserResponse.LastLoginIPAddress
  name: LastLoginIPAddress
  href: api/Api.Responses.GetUserResponse.html#Api_Responses_GetUserResponse_LastLoginIPAddress
  commentId: P:Api.Responses.GetUserResponse.LastLoginIPAddress
  fullName: Api.Responses.GetUserResponse.LastLoginIPAddress
  nameWithType: GetUserResponse.LastLoginIPAddress
- uid: Api.Responses.GetUserResponse.LastLoginIPAddress*
  name: LastLoginIPAddress
  href: api/Api.Responses.GetUserResponse.html#Api_Responses_GetUserResponse_LastLoginIPAddress_
  commentId: Overload:Api.Responses.GetUserResponse.LastLoginIPAddress
  isSpec: "True"
  fullName: Api.Responses.GetUserResponse.LastLoginIPAddress
  nameWithType: GetUserResponse.LastLoginIPAddress
- uid: Api.Responses.GetUserResponse.LockoutEnabled
  name: LockoutEnabled
  href: api/Api.Responses.GetUserResponse.html#Api_Responses_GetUserResponse_LockoutEnabled
  commentId: P:Api.Responses.GetUserResponse.LockoutEnabled
  fullName: Api.Responses.GetUserResponse.LockoutEnabled
  nameWithType: GetUserResponse.LockoutEnabled
- uid: Api.Responses.GetUserResponse.LockoutEnabled*
  name: LockoutEnabled
  href: api/Api.Responses.GetUserResponse.html#Api_Responses_GetUserResponse_LockoutEnabled_
  commentId: Overload:Api.Responses.GetUserResponse.LockoutEnabled
  isSpec: "True"
  fullName: Api.Responses.GetUserResponse.LockoutEnabled
  nameWithType: GetUserResponse.LockoutEnabled
- uid: Api.Responses.GetUserResponse.LockoutEnd
  name: LockoutEnd
  href: api/Api.Responses.GetUserResponse.html#Api_Responses_GetUserResponse_LockoutEnd
  commentId: P:Api.Responses.GetUserResponse.LockoutEnd
  fullName: Api.Responses.GetUserResponse.LockoutEnd
  nameWithType: GetUserResponse.LockoutEnd
- uid: Api.Responses.GetUserResponse.LockoutEnd*
  name: LockoutEnd
  href: api/Api.Responses.GetUserResponse.html#Api_Responses_GetUserResponse_LockoutEnd_
  commentId: Overload:Api.Responses.GetUserResponse.LockoutEnd
  isSpec: "True"
  fullName: Api.Responses.GetUserResponse.LockoutEnd
  nameWithType: GetUserResponse.LockoutEnd
- uid: Api.Responses.GetUserResponse.ModifiedBy
  name: ModifiedBy
  href: api/Api.Responses.GetUserResponse.html#Api_Responses_GetUserResponse_ModifiedBy
  commentId: P:Api.Responses.GetUserResponse.ModifiedBy
  fullName: Api.Responses.GetUserResponse.ModifiedBy
  nameWithType: GetUserResponse.ModifiedBy
- uid: Api.Responses.GetUserResponse.ModifiedBy*
  name: ModifiedBy
  href: api/Api.Responses.GetUserResponse.html#Api_Responses_GetUserResponse_ModifiedBy_
  commentId: Overload:Api.Responses.GetUserResponse.ModifiedBy
  isSpec: "True"
  fullName: Api.Responses.GetUserResponse.ModifiedBy
  nameWithType: GetUserResponse.ModifiedBy
- uid: Api.Responses.GetUserResponse.ModifiedOnUtc
  name: ModifiedOnUtc
  href: api/Api.Responses.GetUserResponse.html#Api_Responses_GetUserResponse_ModifiedOnUtc
  commentId: P:Api.Responses.GetUserResponse.ModifiedOnUtc
  fullName: Api.Responses.GetUserResponse.ModifiedOnUtc
  nameWithType: GetUserResponse.ModifiedOnUtc
- uid: Api.Responses.GetUserResponse.ModifiedOnUtc*
  name: ModifiedOnUtc
  href: api/Api.Responses.GetUserResponse.html#Api_Responses_GetUserResponse_ModifiedOnUtc_
  commentId: Overload:Api.Responses.GetUserResponse.ModifiedOnUtc
  isSpec: "True"
  fullName: Api.Responses.GetUserResponse.ModifiedOnUtc
  nameWithType: GetUserResponse.ModifiedOnUtc
- uid: Api.Responses.GetUserResponse.PhoneNumber
  name: PhoneNumber
  href: api/Api.Responses.GetUserResponse.html#Api_Responses_GetUserResponse_PhoneNumber
  commentId: P:Api.Responses.GetUserResponse.PhoneNumber
  fullName: Api.Responses.GetUserResponse.PhoneNumber
  nameWithType: GetUserResponse.PhoneNumber
- uid: Api.Responses.GetUserResponse.PhoneNumber*
  name: PhoneNumber
  href: api/Api.Responses.GetUserResponse.html#Api_Responses_GetUserResponse_PhoneNumber_
  commentId: Overload:Api.Responses.GetUserResponse.PhoneNumber
  isSpec: "True"
  fullName: Api.Responses.GetUserResponse.PhoneNumber
  nameWithType: GetUserResponse.PhoneNumber
- uid: Api.Responses.GetUserResponse.PhoneNumberConfirmed
  name: PhoneNumberConfirmed
  href: api/Api.Responses.GetUserResponse.html#Api_Responses_GetUserResponse_PhoneNumberConfirmed
  commentId: P:Api.Responses.GetUserResponse.PhoneNumberConfirmed
  fullName: Api.Responses.GetUserResponse.PhoneNumberConfirmed
  nameWithType: GetUserResponse.PhoneNumberConfirmed
- uid: Api.Responses.GetUserResponse.PhoneNumberConfirmed*
  name: PhoneNumberConfirmed
  href: api/Api.Responses.GetUserResponse.html#Api_Responses_GetUserResponse_PhoneNumberConfirmed_
  commentId: Overload:Api.Responses.GetUserResponse.PhoneNumberConfirmed
  isSpec: "True"
  fullName: Api.Responses.GetUserResponse.PhoneNumberConfirmed
  nameWithType: GetUserResponse.PhoneNumberConfirmed
- uid: Api.Responses.GetUserResponse.TwoFactorEnabled
  name: TwoFactorEnabled
  href: api/Api.Responses.GetUserResponse.html#Api_Responses_GetUserResponse_TwoFactorEnabled
  commentId: P:Api.Responses.GetUserResponse.TwoFactorEnabled
  fullName: Api.Responses.GetUserResponse.TwoFactorEnabled
  nameWithType: GetUserResponse.TwoFactorEnabled
- uid: Api.Responses.GetUserResponse.TwoFactorEnabled*
  name: TwoFactorEnabled
  href: api/Api.Responses.GetUserResponse.html#Api_Responses_GetUserResponse_TwoFactorEnabled_
  commentId: Overload:Api.Responses.GetUserResponse.TwoFactorEnabled
  isSpec: "True"
  fullName: Api.Responses.GetUserResponse.TwoFactorEnabled
  nameWithType: GetUserResponse.TwoFactorEnabled
- uid: Api.Responses.GetUserResponse.UserName
  name: UserName
  href: api/Api.Responses.GetUserResponse.html#Api_Responses_GetUserResponse_UserName
  commentId: P:Api.Responses.GetUserResponse.UserName
  fullName: Api.Responses.GetUserResponse.UserName
  nameWithType: GetUserResponse.UserName
- uid: Api.Responses.GetUserResponse.UserName*
  name: UserName
  href: api/Api.Responses.GetUserResponse.html#Api_Responses_GetUserResponse_UserName_
  commentId: Overload:Api.Responses.GetUserResponse.UserName
  isSpec: "True"
  fullName: Api.Responses.GetUserResponse.UserName
  nameWithType: GetUserResponse.UserName
- uid: Api.Responses.MultiFactorManageAuthenticatorResponse
  name: MultiFactorManageAuthenticatorResponse
  href: api/Api.Responses.MultiFactorManageAuthenticatorResponse.html
  commentId: T:Api.Responses.MultiFactorManageAuthenticatorResponse
  fullName: Api.Responses.MultiFactorManageAuthenticatorResponse
  nameWithType: MultiFactorManageAuthenticatorResponse
- uid: Api.Responses.MultiFactorManageAuthenticatorResponse.AuthenticatorKey
  name: AuthenticatorKey
  href: api/Api.Responses.MultiFactorManageAuthenticatorResponse.html#Api_Responses_MultiFactorManageAuthenticatorResponse_AuthenticatorKey
  commentId: P:Api.Responses.MultiFactorManageAuthenticatorResponse.AuthenticatorKey
  fullName: Api.Responses.MultiFactorManageAuthenticatorResponse.AuthenticatorKey
  nameWithType: MultiFactorManageAuthenticatorResponse.AuthenticatorKey
- uid: Api.Responses.MultiFactorManageAuthenticatorResponse.AuthenticatorKey*
  name: AuthenticatorKey
  href: api/Api.Responses.MultiFactorManageAuthenticatorResponse.html#Api_Responses_MultiFactorManageAuthenticatorResponse_AuthenticatorKey_
  commentId: Overload:Api.Responses.MultiFactorManageAuthenticatorResponse.AuthenticatorKey
  isSpec: "True"
  fullName: Api.Responses.MultiFactorManageAuthenticatorResponse.AuthenticatorKey
  nameWithType: MultiFactorManageAuthenticatorResponse.AuthenticatorKey
- uid: Api.Responses.MultiFactorManageAuthenticatorResponse.QrCodeUri
  name: QrCodeUri
  href: api/Api.Responses.MultiFactorManageAuthenticatorResponse.html#Api_Responses_MultiFactorManageAuthenticatorResponse_QrCodeUri
  commentId: P:Api.Responses.MultiFactorManageAuthenticatorResponse.QrCodeUri
  fullName: Api.Responses.MultiFactorManageAuthenticatorResponse.QrCodeUri
  nameWithType: MultiFactorManageAuthenticatorResponse.QrCodeUri
- uid: Api.Responses.MultiFactorManageAuthenticatorResponse.QrCodeUri*
  name: QrCodeUri
  href: api/Api.Responses.MultiFactorManageAuthenticatorResponse.html#Api_Responses_MultiFactorManageAuthenticatorResponse_QrCodeUri_
  commentId: Overload:Api.Responses.MultiFactorManageAuthenticatorResponse.QrCodeUri
  isSpec: "True"
  fullName: Api.Responses.MultiFactorManageAuthenticatorResponse.QrCodeUri
  nameWithType: MultiFactorManageAuthenticatorResponse.QrCodeUri
- uid: Api.Responses.ReadApplicationResponse
  name: ReadApplicationResponse
  href: api/Api.Responses.ReadApplicationResponse.html
  commentId: T:Api.Responses.ReadApplicationResponse
  fullName: Api.Responses.ReadApplicationResponse
  nameWithType: ReadApplicationResponse
- uid: Api.Responses.ReadApplicationResponse.CallbackUri
  name: CallbackUri
  href: api/Api.Responses.ReadApplicationResponse.html#Api_Responses_ReadApplicationResponse_CallbackUri
  commentId: P:Api.Responses.ReadApplicationResponse.CallbackUri
  fullName: Api.Responses.ReadApplicationResponse.CallbackUri
  nameWithType: ReadApplicationResponse.CallbackUri
- uid: Api.Responses.ReadApplicationResponse.CallbackUri*
  name: CallbackUri
  href: api/Api.Responses.ReadApplicationResponse.html#Api_Responses_ReadApplicationResponse_CallbackUri_
  commentId: Overload:Api.Responses.ReadApplicationResponse.CallbackUri
  isSpec: "True"
  fullName: Api.Responses.ReadApplicationResponse.CallbackUri
  nameWithType: ReadApplicationResponse.CallbackUri
- uid: Api.Responses.ReadApplicationResponse.ClientId
  name: ClientId
  href: api/Api.Responses.ReadApplicationResponse.html#Api_Responses_ReadApplicationResponse_ClientId
  commentId: P:Api.Responses.ReadApplicationResponse.ClientId
  fullName: Api.Responses.ReadApplicationResponse.ClientId
  nameWithType: ReadApplicationResponse.ClientId
- uid: Api.Responses.ReadApplicationResponse.ClientId*
  name: ClientId
  href: api/Api.Responses.ReadApplicationResponse.html#Api_Responses_ReadApplicationResponse_ClientId_
  commentId: Overload:Api.Responses.ReadApplicationResponse.ClientId
  isSpec: "True"
  fullName: Api.Responses.ReadApplicationResponse.ClientId
  nameWithType: ReadApplicationResponse.ClientId
- uid: Api.Responses.ReadApplicationResponse.CreatedBy
  name: CreatedBy
  href: api/Api.Responses.ReadApplicationResponse.html#Api_Responses_ReadApplicationResponse_CreatedBy
  commentId: P:Api.Responses.ReadApplicationResponse.CreatedBy
  fullName: Api.Responses.ReadApplicationResponse.CreatedBy
  nameWithType: ReadApplicationResponse.CreatedBy
- uid: Api.Responses.ReadApplicationResponse.CreatedBy*
  name: CreatedBy
  href: api/Api.Responses.ReadApplicationResponse.html#Api_Responses_ReadApplicationResponse_CreatedBy_
  commentId: Overload:Api.Responses.ReadApplicationResponse.CreatedBy
  isSpec: "True"
  fullName: Api.Responses.ReadApplicationResponse.CreatedBy
  nameWithType: ReadApplicationResponse.CreatedBy
- uid: Api.Responses.ReadApplicationResponse.CreatedOnUtc
  name: CreatedOnUtc
  href: api/Api.Responses.ReadApplicationResponse.html#Api_Responses_ReadApplicationResponse_CreatedOnUtc
  commentId: P:Api.Responses.ReadApplicationResponse.CreatedOnUtc
  fullName: Api.Responses.ReadApplicationResponse.CreatedOnUtc
  nameWithType: ReadApplicationResponse.CreatedOnUtc
- uid: Api.Responses.ReadApplicationResponse.CreatedOnUtc*
  name: CreatedOnUtc
  href: api/Api.Responses.ReadApplicationResponse.html#Api_Responses_ReadApplicationResponse_CreatedOnUtc_
  commentId: Overload:Api.Responses.ReadApplicationResponse.CreatedOnUtc
  isSpec: "True"
  fullName: Api.Responses.ReadApplicationResponse.CreatedOnUtc
  nameWithType: ReadApplicationResponse.CreatedOnUtc
- uid: Api.Responses.ReadApplicationResponse.DeletedBy
  name: DeletedBy
  href: api/Api.Responses.ReadApplicationResponse.html#Api_Responses_ReadApplicationResponse_DeletedBy
  commentId: P:Api.Responses.ReadApplicationResponse.DeletedBy
  fullName: Api.Responses.ReadApplicationResponse.DeletedBy
  nameWithType: ReadApplicationResponse.DeletedBy
- uid: Api.Responses.ReadApplicationResponse.DeletedBy*
  name: DeletedBy
  href: api/Api.Responses.ReadApplicationResponse.html#Api_Responses_ReadApplicationResponse_DeletedBy_
  commentId: Overload:Api.Responses.ReadApplicationResponse.DeletedBy
  isSpec: "True"
  fullName: Api.Responses.ReadApplicationResponse.DeletedBy
  nameWithType: ReadApplicationResponse.DeletedBy
- uid: Api.Responses.ReadApplicationResponse.DeletedOnUtc
  name: DeletedOnUtc
  href: api/Api.Responses.ReadApplicationResponse.html#Api_Responses_ReadApplicationResponse_DeletedOnUtc
  commentId: P:Api.Responses.ReadApplicationResponse.DeletedOnUtc
  fullName: Api.Responses.ReadApplicationResponse.DeletedOnUtc
  nameWithType: ReadApplicationResponse.DeletedOnUtc
- uid: Api.Responses.ReadApplicationResponse.DeletedOnUtc*
  name: DeletedOnUtc
  href: api/Api.Responses.ReadApplicationResponse.html#Api_Responses_ReadApplicationResponse_DeletedOnUtc_
  commentId: Overload:Api.Responses.ReadApplicationResponse.DeletedOnUtc
  isSpec: "True"
  fullName: Api.Responses.ReadApplicationResponse.DeletedOnUtc
  nameWithType: ReadApplicationResponse.DeletedOnUtc
- uid: Api.Responses.ReadApplicationResponse.IsDeleted
  name: IsDeleted
  href: api/Api.Responses.ReadApplicationResponse.html#Api_Responses_ReadApplicationResponse_IsDeleted
  commentId: P:Api.Responses.ReadApplicationResponse.IsDeleted
  fullName: Api.Responses.ReadApplicationResponse.IsDeleted
  nameWithType: ReadApplicationResponse.IsDeleted
- uid: Api.Responses.ReadApplicationResponse.IsDeleted*
  name: IsDeleted
  href: api/Api.Responses.ReadApplicationResponse.html#Api_Responses_ReadApplicationResponse_IsDeleted_
  commentId: Overload:Api.Responses.ReadApplicationResponse.IsDeleted
  isSpec: "True"
  fullName: Api.Responses.ReadApplicationResponse.IsDeleted
  nameWithType: ReadApplicationResponse.IsDeleted
- uid: Api.Responses.ReadApplicationResponse.ModifiedBy
  name: ModifiedBy
  href: api/Api.Responses.ReadApplicationResponse.html#Api_Responses_ReadApplicationResponse_ModifiedBy
  commentId: P:Api.Responses.ReadApplicationResponse.ModifiedBy
  fullName: Api.Responses.ReadApplicationResponse.ModifiedBy
  nameWithType: ReadApplicationResponse.ModifiedBy
- uid: Api.Responses.ReadApplicationResponse.ModifiedBy*
  name: ModifiedBy
  href: api/Api.Responses.ReadApplicationResponse.html#Api_Responses_ReadApplicationResponse_ModifiedBy_
  commentId: Overload:Api.Responses.ReadApplicationResponse.ModifiedBy
  isSpec: "True"
  fullName: Api.Responses.ReadApplicationResponse.ModifiedBy
  nameWithType: ReadApplicationResponse.ModifiedBy
- uid: Api.Responses.ReadApplicationResponse.ModifiedOnUtc
  name: ModifiedOnUtc
  href: api/Api.Responses.ReadApplicationResponse.html#Api_Responses_ReadApplicationResponse_ModifiedOnUtc
  commentId: P:Api.Responses.ReadApplicationResponse.ModifiedOnUtc
  fullName: Api.Responses.ReadApplicationResponse.ModifiedOnUtc
  nameWithType: ReadApplicationResponse.ModifiedOnUtc
- uid: Api.Responses.ReadApplicationResponse.ModifiedOnUtc*
  name: ModifiedOnUtc
  href: api/Api.Responses.ReadApplicationResponse.html#Api_Responses_ReadApplicationResponse_ModifiedOnUtc_
  commentId: Overload:Api.Responses.ReadApplicationResponse.ModifiedOnUtc
  isSpec: "True"
  fullName: Api.Responses.ReadApplicationResponse.ModifiedOnUtc
  nameWithType: ReadApplicationResponse.ModifiedOnUtc
- uid: Api.Responses.ReadApplicationResponse.Name
  name: Name
  href: api/Api.Responses.ReadApplicationResponse.html#Api_Responses_ReadApplicationResponse_Name
  commentId: P:Api.Responses.ReadApplicationResponse.Name
  fullName: Api.Responses.ReadApplicationResponse.Name
  nameWithType: ReadApplicationResponse.Name
- uid: Api.Responses.ReadApplicationResponse.Name*
  name: Name
  href: api/Api.Responses.ReadApplicationResponse.html#Api_Responses_ReadApplicationResponse_Name_
  commentId: Overload:Api.Responses.ReadApplicationResponse.Name
  isSpec: "True"
  fullName: Api.Responses.ReadApplicationResponse.Name
  nameWithType: ReadApplicationResponse.Name
- uid: Api.Responses.TokenResponse
  name: TokenResponse
  href: api/Api.Responses.TokenResponse.html
  commentId: T:Api.Responses.TokenResponse
  fullName: Api.Responses.TokenResponse
  nameWithType: TokenResponse
- uid: Api.Responses.TokenResponse.AccessToken
  name: AccessToken
  href: api/Api.Responses.TokenResponse.html#Api_Responses_TokenResponse_AccessToken
  commentId: P:Api.Responses.TokenResponse.AccessToken
  fullName: Api.Responses.TokenResponse.AccessToken
  nameWithType: TokenResponse.AccessToken
- uid: Api.Responses.TokenResponse.AccessToken*
  name: AccessToken
  href: api/Api.Responses.TokenResponse.html#Api_Responses_TokenResponse_AccessToken_
  commentId: Overload:Api.Responses.TokenResponse.AccessToken
  isSpec: "True"
  fullName: Api.Responses.TokenResponse.AccessToken
  nameWithType: TokenResponse.AccessToken
- uid: Api.Responses.TokenResponse.Expires
  name: Expires
  href: api/Api.Responses.TokenResponse.html#Api_Responses_TokenResponse_Expires
  commentId: P:Api.Responses.TokenResponse.Expires
  fullName: Api.Responses.TokenResponse.Expires
  nameWithType: TokenResponse.Expires
- uid: Api.Responses.TokenResponse.Expires*
  name: Expires
  href: api/Api.Responses.TokenResponse.html#Api_Responses_TokenResponse_Expires_
  commentId: Overload:Api.Responses.TokenResponse.Expires
  isSpec: "True"
  fullName: Api.Responses.TokenResponse.Expires
  nameWithType: TokenResponse.Expires
- uid: Api.Responses.TokenResponse.RefreshToken
  name: RefreshToken
  href: api/Api.Responses.TokenResponse.html#Api_Responses_TokenResponse_RefreshToken
  commentId: P:Api.Responses.TokenResponse.RefreshToken
  fullName: Api.Responses.TokenResponse.RefreshToken
  nameWithType: TokenResponse.RefreshToken
- uid: Api.Responses.TokenResponse.RefreshToken*
  name: RefreshToken
  href: api/Api.Responses.TokenResponse.html#Api_Responses_TokenResponse_RefreshToken_
  commentId: Overload:Api.Responses.TokenResponse.RefreshToken
  isSpec: "True"
  fullName: Api.Responses.TokenResponse.RefreshToken
  nameWithType: TokenResponse.RefreshToken
- uid: Api.Responses.TokenResponse.TokenType
  name: TokenType
  href: api/Api.Responses.TokenResponse.html#Api_Responses_TokenResponse_TokenType
  commentId: P:Api.Responses.TokenResponse.TokenType
  fullName: Api.Responses.TokenResponse.TokenType
  nameWithType: TokenResponse.TokenType
- uid: Api.Responses.TokenResponse.TokenType*
  name: TokenType
  href: api/Api.Responses.TokenResponse.html#Api_Responses_TokenResponse_TokenType_
  commentId: Overload:Api.Responses.TokenResponse.TokenType
  isSpec: "True"
  fullName: Api.Responses.TokenResponse.TokenType
  nameWithType: TokenResponse.TokenType
- uid: Application.Activities
  name: Application.Activities
  href: api/Application.Activities.html
  commentId: N:Application.Activities
  fullName: Application.Activities
  nameWithType: Application.Activities
- uid: Application.Activities.ActivityBase`1
  name: ActivityBase<T>
  href: api/Application.Activities.ActivityBase-1.html
  commentId: T:Application.Activities.ActivityBase`1
  name.vb: ActivityBase(Of T)
  fullName: Application.Activities.ActivityBase<T>
  fullName.vb: Application.Activities.ActivityBase(Of T)
  nameWithType: ActivityBase<T>
  nameWithType.vb: ActivityBase(Of T)
- uid: Application.Activities.ActivityBase`1.Payload
  name: Payload
  href: api/Application.Activities.ActivityBase-1.html#Application_Activities_ActivityBase_1_Payload
  commentId: P:Application.Activities.ActivityBase`1.Payload
  fullName: Application.Activities.ActivityBase<T>.Payload
  fullName.vb: Application.Activities.ActivityBase(Of T).Payload
  nameWithType: ActivityBase<T>.Payload
  nameWithType.vb: ActivityBase(Of T).Payload
- uid: Application.Activities.ActivityBase`1.Payload*
  name: Payload
  href: api/Application.Activities.ActivityBase-1.html#Application_Activities_ActivityBase_1_Payload_
  commentId: Overload:Application.Activities.ActivityBase`1.Payload
  isSpec: "True"
  fullName: Application.Activities.ActivityBase<T>.Payload
  fullName.vb: Application.Activities.ActivityBase(Of T).Payload
  nameWithType: ActivityBase<T>.Payload
  nameWithType.vb: ActivityBase(Of T).Payload
- uid: Application.Activities.ActivityBase`2
  name: ActivityBase<TRequest, TResponse>
  href: api/Application.Activities.ActivityBase-2.html
  commentId: T:Application.Activities.ActivityBase`2
  name.vb: ActivityBase(Of TRequest, TResponse)
  fullName: Application.Activities.ActivityBase<TRequest, TResponse>
  fullName.vb: Application.Activities.ActivityBase(Of TRequest, TResponse)
  nameWithType: ActivityBase<TRequest, TResponse>
  nameWithType.vb: ActivityBase(Of TRequest, TResponse)
- uid: Application.Activities.ActivityBase`2.Request
  name: Request
  href: api/Application.Activities.ActivityBase-2.html#Application_Activities_ActivityBase_2_Request
  commentId: P:Application.Activities.ActivityBase`2.Request
  fullName: Application.Activities.ActivityBase<TRequest, TResponse>.Request
  fullName.vb: Application.Activities.ActivityBase(Of TRequest, TResponse).Request
  nameWithType: ActivityBase<TRequest, TResponse>.Request
  nameWithType.vb: ActivityBase(Of TRequest, TResponse).Request
- uid: Application.Activities.ActivityBase`2.Request*
  name: Request
  href: api/Application.Activities.ActivityBase-2.html#Application_Activities_ActivityBase_2_Request_
  commentId: Overload:Application.Activities.ActivityBase`2.Request
  isSpec: "True"
  fullName: Application.Activities.ActivityBase<TRequest, TResponse>.Request
  fullName.vb: Application.Activities.ActivityBase(Of TRequest, TResponse).Request
  nameWithType: ActivityBase<TRequest, TResponse>.Request
  nameWithType.vb: ActivityBase(Of TRequest, TResponse).Request
- uid: Application.Activities.ActivityBase`2.Response
  name: Response
  href: api/Application.Activities.ActivityBase-2.html#Application_Activities_ActivityBase_2_Response
  commentId: P:Application.Activities.ActivityBase`2.Response
  fullName: Application.Activities.ActivityBase<TRequest, TResponse>.Response
  fullName.vb: Application.Activities.ActivityBase(Of TRequest, TResponse).Response
  nameWithType: ActivityBase<TRequest, TResponse>.Response
  nameWithType.vb: ActivityBase(Of TRequest, TResponse).Response
- uid: Application.Activities.ActivityBase`2.Response*
  name: Response
  href: api/Application.Activities.ActivityBase-2.html#Application_Activities_ActivityBase_2_Response_
  commentId: Overload:Application.Activities.ActivityBase`2.Response
  isSpec: "True"
  fullName: Application.Activities.ActivityBase<TRequest, TResponse>.Response
  fullName.vb: Application.Activities.ActivityBase(Of TRequest, TResponse).Response
  nameWithType: ActivityBase<TRequest, TResponse>.Response
  nameWithType.vb: ActivityBase(Of TRequest, TResponse).Response
- uid: Application.Activities.AddToRoleActivity
  name: AddToRoleActivity
  href: api/Application.Activities.AddToRoleActivity.html
  commentId: T:Application.Activities.AddToRoleActivity
  fullName: Application.Activities.AddToRoleActivity
  nameWithType: AddToRoleActivity
- uid: Application.Activities.AddToRoleActivity.Payload
  name: Payload
  href: api/Application.Activities.AddToRoleActivity.html#Application_Activities_AddToRoleActivity_Payload
  commentId: P:Application.Activities.AddToRoleActivity.Payload
  fullName: Application.Activities.AddToRoleActivity.Payload
  nameWithType: AddToRoleActivity.Payload
- uid: Application.Activities.AddToRoleActivity.Payload*
  name: Payload
  href: api/Application.Activities.AddToRoleActivity.html#Application_Activities_AddToRoleActivity_Payload_
  commentId: Overload:Application.Activities.AddToRoleActivity.Payload
  isSpec: "True"
  fullName: Application.Activities.AddToRoleActivity.Payload
  nameWithType: AddToRoleActivity.Payload
- uid: Application.Activities.AuthorizeActivity
  name: AuthorizeActivity
  href: api/Application.Activities.AuthorizeActivity.html
  commentId: T:Application.Activities.AuthorizeActivity
  fullName: Application.Activities.AuthorizeActivity
  nameWithType: AuthorizeActivity
- uid: Application.Activities.AuthorizeActivity.Payload
  name: Payload
  href: api/Application.Activities.AuthorizeActivity.html#Application_Activities_AuthorizeActivity_Payload
  commentId: P:Application.Activities.AuthorizeActivity.Payload
  fullName: Application.Activities.AuthorizeActivity.Payload
  nameWithType: AuthorizeActivity.Payload
- uid: Application.Activities.AuthorizeActivity.Payload*
  name: Payload
  href: api/Application.Activities.AuthorizeActivity.html#Application_Activities_AuthorizeActivity_Payload_
  commentId: Overload:Application.Activities.AuthorizeActivity.Payload
  isSpec: "True"
  fullName: Application.Activities.AuthorizeActivity.Payload
  nameWithType: AuthorizeActivity.Payload
- uid: Application.Activities.ConfirmEmailActivity
  name: ConfirmEmailActivity
  href: api/Application.Activities.ConfirmEmailActivity.html
  commentId: T:Application.Activities.ConfirmEmailActivity
  fullName: Application.Activities.ConfirmEmailActivity
  nameWithType: ConfirmEmailActivity
- uid: Application.Activities.ConfirmEmailActivity.Payload
  name: Payload
  href: api/Application.Activities.ConfirmEmailActivity.html#Application_Activities_ConfirmEmailActivity_Payload
  commentId: P:Application.Activities.ConfirmEmailActivity.Payload
  fullName: Application.Activities.ConfirmEmailActivity.Payload
  nameWithType: ConfirmEmailActivity.Payload
- uid: Application.Activities.ConfirmEmailActivity.Payload*
  name: Payload
  href: api/Application.Activities.ConfirmEmailActivity.html#Application_Activities_ConfirmEmailActivity_Payload_
  commentId: Overload:Application.Activities.ConfirmEmailActivity.Payload
  isSpec: "True"
  fullName: Application.Activities.ConfirmEmailActivity.Payload
  nameWithType: ConfirmEmailActivity.Payload
- uid: Application.Activities.CreateDeviceCodeActivity
  name: CreateDeviceCodeActivity
  href: api/Application.Activities.CreateDeviceCodeActivity.html
  commentId: T:Application.Activities.CreateDeviceCodeActivity
  fullName: Application.Activities.CreateDeviceCodeActivity
  nameWithType: CreateDeviceCodeActivity
- uid: Application.Activities.CreateDeviceCodeActivity.Payload
  name: Payload
  href: api/Application.Activities.CreateDeviceCodeActivity.html#Application_Activities_CreateDeviceCodeActivity_Payload
  commentId: P:Application.Activities.CreateDeviceCodeActivity.Payload
  fullName: Application.Activities.CreateDeviceCodeActivity.Payload
  nameWithType: CreateDeviceCodeActivity.Payload
- uid: Application.Activities.CreateDeviceCodeActivity.Payload*
  name: Payload
  href: api/Application.Activities.CreateDeviceCodeActivity.html#Application_Activities_CreateDeviceCodeActivity_Payload_
  commentId: Overload:Application.Activities.CreateDeviceCodeActivity.Payload
  isSpec: "True"
  fullName: Application.Activities.CreateDeviceCodeActivity.Payload
  nameWithType: CreateDeviceCodeActivity.Payload
- uid: Application.Activities.CreateRoleActivity
  name: CreateRoleActivity
  href: api/Application.Activities.CreateRoleActivity.html
  commentId: T:Application.Activities.CreateRoleActivity
  fullName: Application.Activities.CreateRoleActivity
  nameWithType: CreateRoleActivity
- uid: Application.Activities.CreateRoleActivity.Payload
  name: Payload
  href: api/Application.Activities.CreateRoleActivity.html#Application_Activities_CreateRoleActivity_Payload
  commentId: P:Application.Activities.CreateRoleActivity.Payload
  fullName: Application.Activities.CreateRoleActivity.Payload
  nameWithType: CreateRoleActivity.Payload
- uid: Application.Activities.CreateRoleActivity.Payload*
  name: Payload
  href: api/Application.Activities.CreateRoleActivity.html#Application_Activities_CreateRoleActivity_Payload_
  commentId: Overload:Application.Activities.CreateRoleActivity.Payload
  isSpec: "True"
  fullName: Application.Activities.CreateRoleActivity.Payload
  nameWithType: CreateRoleActivity.Payload
- uid: Application.Activities.CreatedApplicationActivity
  name: CreatedApplicationActivity
  href: api/Application.Activities.CreatedApplicationActivity.html
  commentId: T:Application.Activities.CreatedApplicationActivity
  fullName: Application.Activities.CreatedApplicationActivity
  nameWithType: CreatedApplicationActivity
- uid: Application.Activities.CreatedApplicationActivity.Payload
  name: Payload
  href: api/Application.Activities.CreatedApplicationActivity.html#Application_Activities_CreatedApplicationActivity_Payload
  commentId: P:Application.Activities.CreatedApplicationActivity.Payload
  fullName: Application.Activities.CreatedApplicationActivity.Payload
  nameWithType: CreatedApplicationActivity.Payload
- uid: Application.Activities.CreatedApplicationActivity.Payload*
  name: Payload
  href: api/Application.Activities.CreatedApplicationActivity.html#Application_Activities_CreatedApplicationActivity_Payload_
  commentId: Overload:Application.Activities.CreatedApplicationActivity.Payload
  isSpec: "True"
  fullName: Application.Activities.CreatedApplicationActivity.Payload
  nameWithType: CreatedApplicationActivity.Payload
- uid: Application.Activities.CreatedApplicationSecretActivity
  name: CreatedApplicationSecretActivity
  href: api/Application.Activities.CreatedApplicationSecretActivity.html
  commentId: T:Application.Activities.CreatedApplicationSecretActivity
  fullName: Application.Activities.CreatedApplicationSecretActivity
  nameWithType: CreatedApplicationSecretActivity
- uid: Application.Activities.CreatedApplicationSecretActivity.Payload
  name: Payload
  href: api/Application.Activities.CreatedApplicationSecretActivity.html#Application_Activities_CreatedApplicationSecretActivity_Payload
  commentId: P:Application.Activities.CreatedApplicationSecretActivity.Payload
  fullName: Application.Activities.CreatedApplicationSecretActivity.Payload
  nameWithType: CreatedApplicationSecretActivity.Payload
- uid: Application.Activities.CreatedApplicationSecretActivity.Payload*
  name: Payload
  href: api/Application.Activities.CreatedApplicationSecretActivity.html#Application_Activities_CreatedApplicationSecretActivity_Payload_
  commentId: Overload:Application.Activities.CreatedApplicationSecretActivity.Payload
  isSpec: "True"
  fullName: Application.Activities.CreatedApplicationSecretActivity.Payload
  nameWithType: CreatedApplicationSecretActivity.Payload
- uid: Application.Activities.DeleteAccountActivity
  name: DeleteAccountActivity
  href: api/Application.Activities.DeleteAccountActivity.html
  commentId: T:Application.Activities.DeleteAccountActivity
  fullName: Application.Activities.DeleteAccountActivity
  nameWithType: DeleteAccountActivity
- uid: Application.Activities.DeleteAccountActivity.Email
  name: Email
  href: api/Application.Activities.DeleteAccountActivity.html#Application_Activities_DeleteAccountActivity_Email
  commentId: P:Application.Activities.DeleteAccountActivity.Email
  fullName: Application.Activities.DeleteAccountActivity.Email
  nameWithType: DeleteAccountActivity.Email
- uid: Application.Activities.DeleteAccountActivity.Email*
  name: Email
  href: api/Application.Activities.DeleteAccountActivity.html#Application_Activities_DeleteAccountActivity_Email_
  commentId: Overload:Application.Activities.DeleteAccountActivity.Email
  isSpec: "True"
  fullName: Application.Activities.DeleteAccountActivity.Email
  nameWithType: DeleteAccountActivity.Email
- uid: Application.Activities.DeleteApplicationActivity
  name: DeleteApplicationActivity
  href: api/Application.Activities.DeleteApplicationActivity.html
  commentId: T:Application.Activities.DeleteApplicationActivity
  fullName: Application.Activities.DeleteApplicationActivity
  nameWithType: DeleteApplicationActivity
- uid: Application.Activities.DeleteApplicationActivity.Payload
  name: Payload
  href: api/Application.Activities.DeleteApplicationActivity.html#Application_Activities_DeleteApplicationActivity_Payload
  commentId: P:Application.Activities.DeleteApplicationActivity.Payload
  fullName: Application.Activities.DeleteApplicationActivity.Payload
  nameWithType: DeleteApplicationActivity.Payload
- uid: Application.Activities.DeleteApplicationActivity.Payload*
  name: Payload
  href: api/Application.Activities.DeleteApplicationActivity.html#Application_Activities_DeleteApplicationActivity_Payload_
  commentId: Overload:Application.Activities.DeleteApplicationActivity.Payload
  isSpec: "True"
  fullName: Application.Activities.DeleteApplicationActivity.Payload
  nameWithType: DeleteApplicationActivity.Payload
- uid: Application.Activities.DeleteRoleActivity
  name: DeleteRoleActivity
  href: api/Application.Activities.DeleteRoleActivity.html
  commentId: T:Application.Activities.DeleteRoleActivity
  fullName: Application.Activities.DeleteRoleActivity
  nameWithType: DeleteRoleActivity
- uid: Application.Activities.DeleteRoleActivity.Payload
  name: Payload
  href: api/Application.Activities.DeleteRoleActivity.html#Application_Activities_DeleteRoleActivity_Payload
  commentId: P:Application.Activities.DeleteRoleActivity.Payload
  fullName: Application.Activities.DeleteRoleActivity.Payload
  nameWithType: DeleteRoleActivity.Payload
- uid: Application.Activities.DeleteRoleActivity.Payload*
  name: Payload
  href: api/Application.Activities.DeleteRoleActivity.html#Application_Activities_DeleteRoleActivity_Payload_
  commentId: Overload:Application.Activities.DeleteRoleActivity.Payload
  isSpec: "True"
  fullName: Application.Activities.DeleteRoleActivity.Payload
  nameWithType: DeleteRoleActivity.Payload
- uid: Application.Activities.DisableMultiFactorActivity
  name: DisableMultiFactorActivity
  href: api/Application.Activities.DisableMultiFactorActivity.html
  commentId: T:Application.Activities.DisableMultiFactorActivity
  fullName: Application.Activities.DisableMultiFactorActivity
  nameWithType: DisableMultiFactorActivity
- uid: Application.Activities.DisableMultiFactorActivity.Payload
  name: Payload
  href: api/Application.Activities.DisableMultiFactorActivity.html#Application_Activities_DisableMultiFactorActivity_Payload
  commentId: P:Application.Activities.DisableMultiFactorActivity.Payload
  fullName: Application.Activities.DisableMultiFactorActivity.Payload
  nameWithType: DisableMultiFactorActivity.Payload
- uid: Application.Activities.DisableMultiFactorActivity.Payload*
  name: Payload
  href: api/Application.Activities.DisableMultiFactorActivity.html#Application_Activities_DisableMultiFactorActivity_Payload_
  commentId: Overload:Application.Activities.DisableMultiFactorActivity.Payload
  isSpec: "True"
  fullName: Application.Activities.DisableMultiFactorActivity.Payload
  nameWithType: DisableMultiFactorActivity.Payload
- uid: Application.Activities.LoginActivity
  name: LoginActivity
  href: api/Application.Activities.LoginActivity.html
  commentId: T:Application.Activities.LoginActivity
  fullName: Application.Activities.LoginActivity
  nameWithType: LoginActivity
- uid: Application.Activities.LoginActivity.Payload
  name: Payload
  href: api/Application.Activities.LoginActivity.html#Application_Activities_LoginActivity_Payload
  commentId: P:Application.Activities.LoginActivity.Payload
  fullName: Application.Activities.LoginActivity.Payload
  nameWithType: LoginActivity.Payload
- uid: Application.Activities.LoginActivity.Payload*
  name: Payload
  href: api/Application.Activities.LoginActivity.html#Application_Activities_LoginActivity_Payload_
  commentId: Overload:Application.Activities.LoginActivity.Payload
  isSpec: "True"
  fullName: Application.Activities.LoginActivity.Payload
  nameWithType: LoginActivity.Payload
- uid: Application.Activities.LogoutActivity
  name: LogoutActivity
  href: api/Application.Activities.LogoutActivity.html
  commentId: T:Application.Activities.LogoutActivity
  fullName: Application.Activities.LogoutActivity
  nameWithType: LogoutActivity
- uid: Application.Activities.LogoutActivity.Email
  name: Email
  href: api/Application.Activities.LogoutActivity.html#Application_Activities_LogoutActivity_Email
  commentId: P:Application.Activities.LogoutActivity.Email
  fullName: Application.Activities.LogoutActivity.Email
  nameWithType: LogoutActivity.Email
- uid: Application.Activities.LogoutActivity.Email*
  name: Email
  href: api/Application.Activities.LogoutActivity.html#Application_Activities_LogoutActivity_Email_
  commentId: Overload:Application.Activities.LogoutActivity.Email
  isSpec: "True"
  fullName: Application.Activities.LogoutActivity.Email
  nameWithType: LogoutActivity.Email
- uid: Application.Activities.MultiFactorLoginActivity
  name: MultiFactorLoginActivity
  href: api/Application.Activities.MultiFactorLoginActivity.html
  commentId: T:Application.Activities.MultiFactorLoginActivity
  fullName: Application.Activities.MultiFactorLoginActivity
  nameWithType: MultiFactorLoginActivity
- uid: Application.Activities.MultiFactorLoginActivity.Payload
  name: Payload
  href: api/Application.Activities.MultiFactorLoginActivity.html#Application_Activities_MultiFactorLoginActivity_Payload
  commentId: P:Application.Activities.MultiFactorLoginActivity.Payload
  fullName: Application.Activities.MultiFactorLoginActivity.Payload
  nameWithType: MultiFactorLoginActivity.Payload
- uid: Application.Activities.MultiFactorLoginActivity.Payload*
  name: Payload
  href: api/Application.Activities.MultiFactorLoginActivity.html#Application_Activities_MultiFactorLoginActivity_Payload_
  commentId: Overload:Application.Activities.MultiFactorLoginActivity.Payload
  isSpec: "True"
  fullName: Application.Activities.MultiFactorLoginActivity.Payload
  nameWithType: MultiFactorLoginActivity.Payload
- uid: Application.Activities.MultiFactorManageActivity
  name: MultiFactorManageActivity
  href: api/Application.Activities.MultiFactorManageActivity.html
  commentId: T:Application.Activities.MultiFactorManageActivity
  fullName: Application.Activities.MultiFactorManageActivity
  nameWithType: MultiFactorManageActivity
- uid: Application.Activities.MultiFactorManageActivity.Email
  name: Email
  href: api/Application.Activities.MultiFactorManageActivity.html#Application_Activities_MultiFactorManageActivity_Email
  commentId: P:Application.Activities.MultiFactorManageActivity.Email
  fullName: Application.Activities.MultiFactorManageActivity.Email
  nameWithType: MultiFactorManageActivity.Email
- uid: Application.Activities.MultiFactorManageActivity.Email*
  name: Email
  href: api/Application.Activities.MultiFactorManageActivity.html#Application_Activities_MultiFactorManageActivity_Email_
  commentId: Overload:Application.Activities.MultiFactorManageActivity.Email
  isSpec: "True"
  fullName: Application.Activities.MultiFactorManageActivity.Email
  nameWithType: MultiFactorManageActivity.Email
- uid: Application.Activities.MultiFactorManageActivity.Payload
  name: Payload
  href: api/Application.Activities.MultiFactorManageActivity.html#Application_Activities_MultiFactorManageActivity_Payload
  commentId: P:Application.Activities.MultiFactorManageActivity.Payload
  fullName: Application.Activities.MultiFactorManageActivity.Payload
  nameWithType: MultiFactorManageActivity.Payload
- uid: Application.Activities.MultiFactorManageActivity.Payload*
  name: Payload
  href: api/Application.Activities.MultiFactorManageActivity.html#Application_Activities_MultiFactorManageActivity_Payload_
  commentId: Overload:Application.Activities.MultiFactorManageActivity.Payload
  isSpec: "True"
  fullName: Application.Activities.MultiFactorManageActivity.Payload
  nameWithType: MultiFactorManageActivity.Payload
- uid: Application.Activities.MultiFactorRecoveryCodesActivity
  name: MultiFactorRecoveryCodesActivity
  href: api/Application.Activities.MultiFactorRecoveryCodesActivity.html
  commentId: T:Application.Activities.MultiFactorRecoveryCodesActivity
  fullName: Application.Activities.MultiFactorRecoveryCodesActivity
  nameWithType: MultiFactorRecoveryCodesActivity
- uid: Application.Activities.MultiFactorRecoveryCodesActivity.Email
  name: Email
  href: api/Application.Activities.MultiFactorRecoveryCodesActivity.html#Application_Activities_MultiFactorRecoveryCodesActivity_Email
  commentId: P:Application.Activities.MultiFactorRecoveryCodesActivity.Email
  fullName: Application.Activities.MultiFactorRecoveryCodesActivity.Email
  nameWithType: MultiFactorRecoveryCodesActivity.Email
- uid: Application.Activities.MultiFactorRecoveryCodesActivity.Email*
  name: Email
  href: api/Application.Activities.MultiFactorRecoveryCodesActivity.html#Application_Activities_MultiFactorRecoveryCodesActivity_Email_
  commentId: Overload:Application.Activities.MultiFactorRecoveryCodesActivity.Email
  isSpec: "True"
  fullName: Application.Activities.MultiFactorRecoveryCodesActivity.Email
  nameWithType: MultiFactorRecoveryCodesActivity.Email
- uid: Application.Activities.MultiFactorRecoveryCodesRedeemActivity
  name: MultiFactorRecoveryCodesRedeemActivity
  href: api/Application.Activities.MultiFactorRecoveryCodesRedeemActivity.html
  commentId: T:Application.Activities.MultiFactorRecoveryCodesRedeemActivity
  fullName: Application.Activities.MultiFactorRecoveryCodesRedeemActivity
  nameWithType: MultiFactorRecoveryCodesRedeemActivity
- uid: Application.Activities.MultiFactorRecoveryCodesRedeemActivity.Payload
  name: Payload
  href: api/Application.Activities.MultiFactorRecoveryCodesRedeemActivity.html#Application_Activities_MultiFactorRecoveryCodesRedeemActivity_Payload
  commentId: P:Application.Activities.MultiFactorRecoveryCodesRedeemActivity.Payload
  fullName: Application.Activities.MultiFactorRecoveryCodesRedeemActivity.Payload
  nameWithType: MultiFactorRecoveryCodesRedeemActivity.Payload
- uid: Application.Activities.MultiFactorRecoveryCodesRedeemActivity.Payload*
  name: Payload
  href: api/Application.Activities.MultiFactorRecoveryCodesRedeemActivity.html#Application_Activities_MultiFactorRecoveryCodesRedeemActivity_Payload_
  commentId: Overload:Application.Activities.MultiFactorRecoveryCodesRedeemActivity.Payload
  isSpec: "True"
  fullName: Application.Activities.MultiFactorRecoveryCodesRedeemActivity.Payload
  nameWithType: MultiFactorRecoveryCodesRedeemActivity.Payload
- uid: Application.Activities.PasswordResetActivity
  name: PasswordResetActivity
  href: api/Application.Activities.PasswordResetActivity.html
  commentId: T:Application.Activities.PasswordResetActivity
  fullName: Application.Activities.PasswordResetActivity
  nameWithType: PasswordResetActivity
- uid: Application.Activities.PasswordResetActivity.Payload
  name: Payload
  href: api/Application.Activities.PasswordResetActivity.html#Application_Activities_PasswordResetActivity_Payload
  commentId: P:Application.Activities.PasswordResetActivity.Payload
  fullName: Application.Activities.PasswordResetActivity.Payload
  nameWithType: PasswordResetActivity.Payload
- uid: Application.Activities.PasswordResetActivity.Payload*
  name: Payload
  href: api/Application.Activities.PasswordResetActivity.html#Application_Activities_PasswordResetActivity_Payload_
  commentId: Overload:Application.Activities.PasswordResetActivity.Payload
  isSpec: "True"
  fullName: Application.Activities.PasswordResetActivity.Payload
  nameWithType: PasswordResetActivity.Payload
- uid: Application.Activities.ReadAllActivitiesActivity
  name: ReadAllActivitiesActivity
  href: api/Application.Activities.ReadAllActivitiesActivity.html
  commentId: T:Application.Activities.ReadAllActivitiesActivity
  fullName: Application.Activities.ReadAllActivitiesActivity
  nameWithType: ReadAllActivitiesActivity
- uid: Application.Activities.ReadAllActivitiesActivity.Email
  name: Email
  href: api/Application.Activities.ReadAllActivitiesActivity.html#Application_Activities_ReadAllActivitiesActivity_Email
  commentId: P:Application.Activities.ReadAllActivitiesActivity.Email
  fullName: Application.Activities.ReadAllActivitiesActivity.Email
  nameWithType: ReadAllActivitiesActivity.Email
- uid: Application.Activities.ReadAllActivitiesActivity.Email*
  name: Email
  href: api/Application.Activities.ReadAllActivitiesActivity.html#Application_Activities_ReadAllActivitiesActivity_Email_
  commentId: Overload:Application.Activities.ReadAllActivitiesActivity.Email
  isSpec: "True"
  fullName: Application.Activities.ReadAllActivitiesActivity.Email
  nameWithType: ReadAllActivitiesActivity.Email
- uid: Application.Activities.ReadAllApplicationsActivity
  name: ReadAllApplicationsActivity
  href: api/Application.Activities.ReadAllApplicationsActivity.html
  commentId: T:Application.Activities.ReadAllApplicationsActivity
  fullName: Application.Activities.ReadAllApplicationsActivity
  nameWithType: ReadAllApplicationsActivity
- uid: Application.Activities.ReadAllApplicationsActivity.Payload
  name: Payload
  href: api/Application.Activities.ReadAllApplicationsActivity.html#Application_Activities_ReadAllApplicationsActivity_Payload
  commentId: P:Application.Activities.ReadAllApplicationsActivity.Payload
  fullName: Application.Activities.ReadAllApplicationsActivity.Payload
  nameWithType: ReadAllApplicationsActivity.Payload
- uid: Application.Activities.ReadAllApplicationsActivity.Payload*
  name: Payload
  href: api/Application.Activities.ReadAllApplicationsActivity.html#Application_Activities_ReadAllApplicationsActivity_Payload_
  commentId: Overload:Application.Activities.ReadAllApplicationsActivity.Payload
  isSpec: "True"
  fullName: Application.Activities.ReadAllApplicationsActivity.Payload
  nameWithType: ReadAllApplicationsActivity.Payload
- uid: Application.Activities.ReadAllUsersActivity
  name: ReadAllUsersActivity
  href: api/Application.Activities.ReadAllUsersActivity.html
  commentId: T:Application.Activities.ReadAllUsersActivity
  fullName: Application.Activities.ReadAllUsersActivity
  nameWithType: ReadAllUsersActivity
- uid: Application.Activities.ReadAllUsersActivity.Email
  name: Email
  href: api/Application.Activities.ReadAllUsersActivity.html#Application_Activities_ReadAllUsersActivity_Email
  commentId: P:Application.Activities.ReadAllUsersActivity.Email
  fullName: Application.Activities.ReadAllUsersActivity.Email
  nameWithType: ReadAllUsersActivity.Email
- uid: Application.Activities.ReadAllUsersActivity.Email*
  name: Email
  href: api/Application.Activities.ReadAllUsersActivity.html#Application_Activities_ReadAllUsersActivity_Email_
  commentId: Overload:Application.Activities.ReadAllUsersActivity.Email
  isSpec: "True"
  fullName: Application.Activities.ReadAllUsersActivity.Email
  nameWithType: ReadAllUsersActivity.Email
- uid: Application.Activities.ReadApplicationByNameActivity
  name: ReadApplicationByNameActivity
  href: api/Application.Activities.ReadApplicationByNameActivity.html
  commentId: T:Application.Activities.ReadApplicationByNameActivity
  fullName: Application.Activities.ReadApplicationByNameActivity
  nameWithType: ReadApplicationByNameActivity
- uid: Application.Activities.ReadApplicationByNameActivity.Request
  name: Request
  href: api/Application.Activities.ReadApplicationByNameActivity.html#Application_Activities_ReadApplicationByNameActivity_Request
  commentId: P:Application.Activities.ReadApplicationByNameActivity.Request
  fullName: Application.Activities.ReadApplicationByNameActivity.Request
  nameWithType: ReadApplicationByNameActivity.Request
- uid: Application.Activities.ReadApplicationByNameActivity.Request*
  name: Request
  href: api/Application.Activities.ReadApplicationByNameActivity.html#Application_Activities_ReadApplicationByNameActivity_Request_
  commentId: Overload:Application.Activities.ReadApplicationByNameActivity.Request
  isSpec: "True"
  fullName: Application.Activities.ReadApplicationByNameActivity.Request
  nameWithType: ReadApplicationByNameActivity.Request
- uid: Application.Activities.ReadApplicationByNameActivity.Response
  name: Response
  href: api/Application.Activities.ReadApplicationByNameActivity.html#Application_Activities_ReadApplicationByNameActivity_Response
  commentId: P:Application.Activities.ReadApplicationByNameActivity.Response
  fullName: Application.Activities.ReadApplicationByNameActivity.Response
  nameWithType: ReadApplicationByNameActivity.Response
- uid: Application.Activities.ReadApplicationByNameActivity.Response*
  name: Response
  href: api/Application.Activities.ReadApplicationByNameActivity.html#Application_Activities_ReadApplicationByNameActivity_Response_
  commentId: Overload:Application.Activities.ReadApplicationByNameActivity.Response
  isSpec: "True"
  fullName: Application.Activities.ReadApplicationByNameActivity.Response
  nameWithType: ReadApplicationByNameActivity.Response
- uid: Application.Activities.ReadApplicationsActivity
  name: ReadApplicationsActivity
  href: api/Application.Activities.ReadApplicationsActivity.html
  commentId: T:Application.Activities.ReadApplicationsActivity
  fullName: Application.Activities.ReadApplicationsActivity
  nameWithType: ReadApplicationsActivity
- uid: Application.Activities.ReadApplicationsActivity.Payload
  name: Payload
  href: api/Application.Activities.ReadApplicationsActivity.html#Application_Activities_ReadApplicationsActivity_Payload
  commentId: P:Application.Activities.ReadApplicationsActivity.Payload
  fullName: Application.Activities.ReadApplicationsActivity.Payload
  nameWithType: ReadApplicationsActivity.Payload
- uid: Application.Activities.ReadApplicationsActivity.Payload*
  name: Payload
  href: api/Application.Activities.ReadApplicationsActivity.html#Application_Activities_ReadApplicationsActivity_Payload_
  commentId: Overload:Application.Activities.ReadApplicationsActivity.Payload
  isSpec: "True"
  fullName: Application.Activities.ReadApplicationsActivity.Payload
  nameWithType: ReadApplicationsActivity.Payload
- uid: Application.Activities.ReadRolesActivity
  name: ReadRolesActivity
  href: api/Application.Activities.ReadRolesActivity.html
  commentId: T:Application.Activities.ReadRolesActivity
  fullName: Application.Activities.ReadRolesActivity
  nameWithType: ReadRolesActivity
- uid: Application.Activities.ReadRolesActivity.Email
  name: Email
  href: api/Application.Activities.ReadRolesActivity.html#Application_Activities_ReadRolesActivity_Email
  commentId: P:Application.Activities.ReadRolesActivity.Email
  fullName: Application.Activities.ReadRolesActivity.Email
  nameWithType: ReadRolesActivity.Email
- uid: Application.Activities.ReadRolesActivity.Email*
  name: Email
  href: api/Application.Activities.ReadRolesActivity.html#Application_Activities_ReadRolesActivity_Email_
  commentId: Overload:Application.Activities.ReadRolesActivity.Email
  isSpec: "True"
  fullName: Application.Activities.ReadRolesActivity.Email
  nameWithType: ReadRolesActivity.Email
- uid: Application.Activities.RegisterActivity
  name: RegisterActivity
  href: api/Application.Activities.RegisterActivity.html
  commentId: T:Application.Activities.RegisterActivity
  fullName: Application.Activities.RegisterActivity
  nameWithType: RegisterActivity
- uid: Application.Activities.RegisterActivity.Payload
  name: Payload
  href: api/Application.Activities.RegisterActivity.html#Application_Activities_RegisterActivity_Payload
  commentId: P:Application.Activities.RegisterActivity.Payload
  fullName: Application.Activities.RegisterActivity.Payload
  nameWithType: RegisterActivity.Payload
- uid: Application.Activities.RegisterActivity.Payload*
  name: Payload
  href: api/Application.Activities.RegisterActivity.html#Application_Activities_RegisterActivity_Payload_
  commentId: Overload:Application.Activities.RegisterActivity.Payload
  isSpec: "True"
  fullName: Application.Activities.RegisterActivity.Payload
  nameWithType: RegisterActivity.Payload
- uid: Application.Activities.RegisterAdminActivity
  name: RegisterAdminActivity
  href: api/Application.Activities.RegisterAdminActivity.html
  commentId: T:Application.Activities.RegisterAdminActivity
  fullName: Application.Activities.RegisterAdminActivity
  nameWithType: RegisterAdminActivity
- uid: Application.Activities.RegisterAdminActivity.Payload
  name: Payload
  href: api/Application.Activities.RegisterAdminActivity.html#Application_Activities_RegisterAdminActivity_Payload
  commentId: P:Application.Activities.RegisterAdminActivity.Payload
  fullName: Application.Activities.RegisterAdminActivity.Payload
  nameWithType: RegisterAdminActivity.Payload
- uid: Application.Activities.RegisterAdminActivity.Payload*
  name: Payload
  href: api/Application.Activities.RegisterAdminActivity.html#Application_Activities_RegisterAdminActivity_Payload_
  commentId: Overload:Application.Activities.RegisterAdminActivity.Payload
  isSpec: "True"
  fullName: Application.Activities.RegisterAdminActivity.Payload
  nameWithType: RegisterAdminActivity.Payload
- uid: Application.Activities.ResetPasswordAdminActivity
  name: ResetPasswordAdminActivity
  href: api/Application.Activities.ResetPasswordAdminActivity.html
  commentId: T:Application.Activities.ResetPasswordAdminActivity
  fullName: Application.Activities.ResetPasswordAdminActivity
  nameWithType: ResetPasswordAdminActivity
- uid: Application.Activities.ResetPasswordAdminActivity.Payload
  name: Payload
  href: api/Application.Activities.ResetPasswordAdminActivity.html#Application_Activities_ResetPasswordAdminActivity_Payload
  commentId: P:Application.Activities.ResetPasswordAdminActivity.Payload
  fullName: Application.Activities.ResetPasswordAdminActivity.Payload
  nameWithType: ResetPasswordAdminActivity.Payload
- uid: Application.Activities.ResetPasswordAdminActivity.Payload*
  name: Payload
  href: api/Application.Activities.ResetPasswordAdminActivity.html#Application_Activities_ResetPasswordAdminActivity_Payload_
  commentId: Overload:Application.Activities.ResetPasswordAdminActivity.Payload
  isSpec: "True"
  fullName: Application.Activities.ResetPasswordAdminActivity.Payload
  nameWithType: ResetPasswordAdminActivity.Payload
- uid: Application.Activities.SendTokenActivity
  name: SendTokenActivity
  href: api/Application.Activities.SendTokenActivity.html
  commentId: T:Application.Activities.SendTokenActivity
  fullName: Application.Activities.SendTokenActivity
  nameWithType: SendTokenActivity
- uid: Application.Activities.SendTokenActivity.Payload
  name: Payload
  href: api/Application.Activities.SendTokenActivity.html#Application_Activities_SendTokenActivity_Payload
  commentId: P:Application.Activities.SendTokenActivity.Payload
  fullName: Application.Activities.SendTokenActivity.Payload
  nameWithType: SendTokenActivity.Payload
- uid: Application.Activities.SendTokenActivity.Payload*
  name: Payload
  href: api/Application.Activities.SendTokenActivity.html#Application_Activities_SendTokenActivity_Payload_
  commentId: Overload:Application.Activities.SendTokenActivity.Payload
  isSpec: "True"
  fullName: Application.Activities.SendTokenActivity.Payload
  nameWithType: SendTokenActivity.Payload
- uid: Application.Activities.TokenActivity
  name: TokenActivity
  href: api/Application.Activities.TokenActivity.html
  commentId: T:Application.Activities.TokenActivity
  fullName: Application.Activities.TokenActivity
  nameWithType: TokenActivity
- uid: Application.Activities.TokenActivity.Request
  name: Request
  href: api/Application.Activities.TokenActivity.html#Application_Activities_TokenActivity_Request
  commentId: P:Application.Activities.TokenActivity.Request
  fullName: Application.Activities.TokenActivity.Request
  nameWithType: TokenActivity.Request
- uid: Application.Activities.TokenActivity.Request*
  name: Request
  href: api/Application.Activities.TokenActivity.html#Application_Activities_TokenActivity_Request_
  commentId: Overload:Application.Activities.TokenActivity.Request
  isSpec: "True"
  fullName: Application.Activities.TokenActivity.Request
  nameWithType: TokenActivity.Request
- uid: Application.Activities.TokenActivity.Response
  name: Response
  href: api/Application.Activities.TokenActivity.html#Application_Activities_TokenActivity_Response
  commentId: P:Application.Activities.TokenActivity.Response
  fullName: Application.Activities.TokenActivity.Response
  nameWithType: TokenActivity.Response
- uid: Application.Activities.TokenActivity.Response*
  name: Response
  href: api/Application.Activities.TokenActivity.html#Application_Activities_TokenActivity_Response_
  commentId: Overload:Application.Activities.TokenActivity.Response
  isSpec: "True"
  fullName: Application.Activities.TokenActivity.Response
  nameWithType: TokenActivity.Response
- uid: Application.Activities.UpdateAddressActivity
  name: UpdateAddressActivity
  href: api/Application.Activities.UpdateAddressActivity.html
  commentId: T:Application.Activities.UpdateAddressActivity
  fullName: Application.Activities.UpdateAddressActivity
  nameWithType: UpdateAddressActivity
- uid: Application.Activities.UpdateAddressActivity.Payload
  name: Payload
  href: api/Application.Activities.UpdateAddressActivity.html#Application_Activities_UpdateAddressActivity_Payload
  commentId: P:Application.Activities.UpdateAddressActivity.Payload
  fullName: Application.Activities.UpdateAddressActivity.Payload
  nameWithType: UpdateAddressActivity.Payload
- uid: Application.Activities.UpdateAddressActivity.Payload*
  name: Payload
  href: api/Application.Activities.UpdateAddressActivity.html#Application_Activities_UpdateAddressActivity_Payload_
  commentId: Overload:Application.Activities.UpdateAddressActivity.Payload
  isSpec: "True"
  fullName: Application.Activities.UpdateAddressActivity.Payload
  nameWithType: UpdateAddressActivity.Payload
- uid: Application.Activities.UpdateApplicationByNameActivity
  name: UpdateApplicationByNameActivity
  href: api/Application.Activities.UpdateApplicationByNameActivity.html
  commentId: T:Application.Activities.UpdateApplicationByNameActivity
  fullName: Application.Activities.UpdateApplicationByNameActivity
  nameWithType: UpdateApplicationByNameActivity
- uid: Application.Activities.UpdateApplicationByNameActivity.Payload
  name: Payload
  href: api/Application.Activities.UpdateApplicationByNameActivity.html#Application_Activities_UpdateApplicationByNameActivity_Payload
  commentId: P:Application.Activities.UpdateApplicationByNameActivity.Payload
  fullName: Application.Activities.UpdateApplicationByNameActivity.Payload
  nameWithType: UpdateApplicationByNameActivity.Payload
- uid: Application.Activities.UpdateApplicationByNameActivity.Payload*
  name: Payload
  href: api/Application.Activities.UpdateApplicationByNameActivity.html#Application_Activities_UpdateApplicationByNameActivity_Payload_
  commentId: Overload:Application.Activities.UpdateApplicationByNameActivity.Payload
  isSpec: "True"
  fullName: Application.Activities.UpdateApplicationByNameActivity.Payload
  nameWithType: UpdateApplicationByNameActivity.Payload
- uid: Application.Activities.UpdateEmailActivity
  name: UpdateEmailActivity
  href: api/Application.Activities.UpdateEmailActivity.html
  commentId: T:Application.Activities.UpdateEmailActivity
  fullName: Application.Activities.UpdateEmailActivity
  nameWithType: UpdateEmailActivity
- uid: Application.Activities.UpdateEmailActivity.Payload
  name: Payload
  href: api/Application.Activities.UpdateEmailActivity.html#Application_Activities_UpdateEmailActivity_Payload
  commentId: P:Application.Activities.UpdateEmailActivity.Payload
  fullName: Application.Activities.UpdateEmailActivity.Payload
  nameWithType: UpdateEmailActivity.Payload
- uid: Application.Activities.UpdateEmailActivity.Payload*
  name: Payload
  href: api/Application.Activities.UpdateEmailActivity.html#Application_Activities_UpdateEmailActivity_Payload_
  commentId: Overload:Application.Activities.UpdateEmailActivity.Payload
  isSpec: "True"
  fullName: Application.Activities.UpdateEmailActivity.Payload
  nameWithType: UpdateEmailActivity.Payload
- uid: Application.Activities.UpdatePhoneNumberActivity
  name: UpdatePhoneNumberActivity
  href: api/Application.Activities.UpdatePhoneNumberActivity.html
  commentId: T:Application.Activities.UpdatePhoneNumberActivity
  fullName: Application.Activities.UpdatePhoneNumberActivity
  nameWithType: UpdatePhoneNumberActivity
- uid: Application.Activities.UpdatePhoneNumberActivity.Payload
  name: Payload
  href: api/Application.Activities.UpdatePhoneNumberActivity.html#Application_Activities_UpdatePhoneNumberActivity_Payload
  commentId: P:Application.Activities.UpdatePhoneNumberActivity.Payload
  fullName: Application.Activities.UpdatePhoneNumberActivity.Payload
  nameWithType: UpdatePhoneNumberActivity.Payload
- uid: Application.Activities.UpdatePhoneNumberActivity.Payload*
  name: Payload
  href: api/Application.Activities.UpdatePhoneNumberActivity.html#Application_Activities_UpdatePhoneNumberActivity_Payload_
  commentId: Overload:Application.Activities.UpdatePhoneNumberActivity.Payload
  isSpec: "True"
  fullName: Application.Activities.UpdatePhoneNumberActivity.Payload
  nameWithType: UpdatePhoneNumberActivity.Payload
- uid: Application.Activities.UpdateRoleActivity
  name: UpdateRoleActivity
  href: api/Application.Activities.UpdateRoleActivity.html
  commentId: T:Application.Activities.UpdateRoleActivity
  fullName: Application.Activities.UpdateRoleActivity
  nameWithType: UpdateRoleActivity
- uid: Application.Activities.UpdateRoleActivity.Payload
  name: Payload
  href: api/Application.Activities.UpdateRoleActivity.html#Application_Activities_UpdateRoleActivity_Payload
  commentId: P:Application.Activities.UpdateRoleActivity.Payload
  fullName: Application.Activities.UpdateRoleActivity.Payload
  nameWithType: UpdateRoleActivity.Payload
- uid: Application.Activities.UpdateRoleActivity.Payload*
  name: Payload
  href: api/Application.Activities.UpdateRoleActivity.html#Application_Activities_UpdateRoleActivity_Payload_
  commentId: Overload:Application.Activities.UpdateRoleActivity.Payload
  isSpec: "True"
  fullName: Application.Activities.UpdateRoleActivity.Payload
  nameWithType: UpdateRoleActivity.Payload
- uid: Application.Activities.Users
  name: Application.Activities.Users
  href: api/Application.Activities.Users.html
  commentId: N:Application.Activities.Users
  fullName: Application.Activities.Users
  nameWithType: Application.Activities.Users
- uid: Application.Activities.Users.MultiFactorManageAuthenticatorActivity
  name: MultiFactorManageAuthenticatorActivity
  href: api/Application.Activities.Users.MultiFactorManageAuthenticatorActivity.html
  commentId: T:Application.Activities.Users.MultiFactorManageAuthenticatorActivity
  fullName: Application.Activities.Users.MultiFactorManageAuthenticatorActivity
  nameWithType: MultiFactorManageAuthenticatorActivity
- uid: Application.Activities.Users.MultiFactorManageAuthenticatorActivity.Request
  name: Request
  href: api/Application.Activities.Users.MultiFactorManageAuthenticatorActivity.html#Application_Activities_Users_MultiFactorManageAuthenticatorActivity_Request
  commentId: P:Application.Activities.Users.MultiFactorManageAuthenticatorActivity.Request
  fullName: Application.Activities.Users.MultiFactorManageAuthenticatorActivity.Request
  nameWithType: MultiFactorManageAuthenticatorActivity.Request
- uid: Application.Activities.Users.MultiFactorManageAuthenticatorActivity.Request*
  name: Request
  href: api/Application.Activities.Users.MultiFactorManageAuthenticatorActivity.html#Application_Activities_Users_MultiFactorManageAuthenticatorActivity_Request_
  commentId: Overload:Application.Activities.Users.MultiFactorManageAuthenticatorActivity.Request
  isSpec: "True"
  fullName: Application.Activities.Users.MultiFactorManageAuthenticatorActivity.Request
  nameWithType: MultiFactorManageAuthenticatorActivity.Request
- uid: Application.Activities.Users.MultiFactorManageAuthenticatorActivity.Response
  name: Response
  href: api/Application.Activities.Users.MultiFactorManageAuthenticatorActivity.html#Application_Activities_Users_MultiFactorManageAuthenticatorActivity_Response
  commentId: P:Application.Activities.Users.MultiFactorManageAuthenticatorActivity.Response
  fullName: Application.Activities.Users.MultiFactorManageAuthenticatorActivity.Response
  nameWithType: MultiFactorManageAuthenticatorActivity.Response
- uid: Application.Activities.Users.MultiFactorManageAuthenticatorActivity.Response*
  name: Response
  href: api/Application.Activities.Users.MultiFactorManageAuthenticatorActivity.html#Application_Activities_Users_MultiFactorManageAuthenticatorActivity_Response_
  commentId: Overload:Application.Activities.Users.MultiFactorManageAuthenticatorActivity.Response
  isSpec: "True"
  fullName: Application.Activities.Users.MultiFactorManageAuthenticatorActivity.Response
  nameWithType: MultiFactorManageAuthenticatorActivity.Response
- uid: Application.Attributes
  name: Application.Attributes
  href: api/Application.Attributes.html
  commentId: N:Application.Attributes
  fullName: Application.Attributes
  nameWithType: Application.Attributes
- uid: Application.Attributes.SensitiveDataAttribute
  name: SensitiveDataAttribute
  href: api/Application.Attributes.SensitiveDataAttribute.html
  commentId: T:Application.Attributes.SensitiveDataAttribute
  fullName: Application.Attributes.SensitiveDataAttribute
  nameWithType: SensitiveDataAttribute
- uid: Application.BackgroundServices
  name: Application.BackgroundServices
  href: api/Application.BackgroundServices.html
  commentId: N:Application.BackgroundServices
  fullName: Application.BackgroundServices
  nameWithType: Application.BackgroundServices
- uid: Application.BackgroundServices.AccountPurge
  name: AccountPurge
  href: api/Application.BackgroundServices.AccountPurge.html
  commentId: T:Application.BackgroundServices.AccountPurge
  fullName: Application.BackgroundServices.AccountPurge
  nameWithType: AccountPurge
- uid: Application.BackgroundServices.AccountPurge.#ctor(Microsoft.Extensions.DependencyInjection.IServiceScopeFactory,Microsoft.Extensions.Logging.ILogger{Application.BackgroundServices.AccountPurge},Application.Contracts.ITimer)
  name: AccountPurge(IServiceScopeFactory, ILogger<AccountPurge>, ITimer)
  href: api/Application.BackgroundServices.AccountPurge.html#Application_BackgroundServices_AccountPurge__ctor_Microsoft_Extensions_DependencyInjection_IServiceScopeFactory_Microsoft_Extensions_Logging_ILogger_Application_BackgroundServices_AccountPurge__Application_Contracts_ITimer_
  commentId: M:Application.BackgroundServices.AccountPurge.#ctor(Microsoft.Extensions.DependencyInjection.IServiceScopeFactory,Microsoft.Extensions.Logging.ILogger{Application.BackgroundServices.AccountPurge},Application.Contracts.ITimer)
  name.vb: New(IServiceScopeFactory, ILogger(Of AccountPurge), ITimer)
  fullName: Application.BackgroundServices.AccountPurge.AccountPurge(Microsoft.Extensions.DependencyInjection.IServiceScopeFactory, Microsoft.Extensions.Logging.ILogger<Application.BackgroundServices.AccountPurge>, Application.Contracts.ITimer)
  fullName.vb: Application.BackgroundServices.AccountPurge.New(Microsoft.Extensions.DependencyInjection.IServiceScopeFactory, Microsoft.Extensions.Logging.ILogger(Of Application.BackgroundServices.AccountPurge), Application.Contracts.ITimer)
  nameWithType: AccountPurge.AccountPurge(IServiceScopeFactory, ILogger<AccountPurge>, ITimer)
  nameWithType.vb: AccountPurge.New(IServiceScopeFactory, ILogger(Of AccountPurge), ITimer)
- uid: Application.BackgroundServices.AccountPurge.#ctor*
  name: AccountPurge
  href: api/Application.BackgroundServices.AccountPurge.html#Application_BackgroundServices_AccountPurge__ctor_
  commentId: Overload:Application.BackgroundServices.AccountPurge.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Application.BackgroundServices.AccountPurge.AccountPurge
  fullName.vb: Application.BackgroundServices.AccountPurge.New
  nameWithType: AccountPurge.AccountPurge
  nameWithType.vb: AccountPurge.New
- uid: Application.BackgroundServices.AccountPurge.ExecuteAsync(System.Threading.CancellationToken)
  name: ExecuteAsync(CancellationToken)
  href: api/Application.BackgroundServices.AccountPurge.html#Application_BackgroundServices_AccountPurge_ExecuteAsync_System_Threading_CancellationToken_
  commentId: M:Application.BackgroundServices.AccountPurge.ExecuteAsync(System.Threading.CancellationToken)
  fullName: Application.BackgroundServices.AccountPurge.ExecuteAsync(System.Threading.CancellationToken)
  nameWithType: AccountPurge.ExecuteAsync(CancellationToken)
- uid: Application.BackgroundServices.AccountPurge.ExecuteAsync*
  name: ExecuteAsync
  href: api/Application.BackgroundServices.AccountPurge.html#Application_BackgroundServices_AccountPurge_ExecuteAsync_
  commentId: Overload:Application.BackgroundServices.AccountPurge.ExecuteAsync
  isSpec: "True"
  fullName: Application.BackgroundServices.AccountPurge.ExecuteAsync
  nameWithType: AccountPurge.ExecuteAsync
- uid: Application.BackgroundServices.AccountPurge.Logger
  name: Logger
  href: api/Application.BackgroundServices.AccountPurge.html#Application_BackgroundServices_AccountPurge_Logger
  commentId: P:Application.BackgroundServices.AccountPurge.Logger
  fullName: Application.BackgroundServices.AccountPurge.Logger
  nameWithType: AccountPurge.Logger
- uid: Application.BackgroundServices.AccountPurge.Logger*
  name: Logger
  href: api/Application.BackgroundServices.AccountPurge.html#Application_BackgroundServices_AccountPurge_Logger_
  commentId: Overload:Application.BackgroundServices.AccountPurge.Logger
  isSpec: "True"
  fullName: Application.BackgroundServices.AccountPurge.Logger
  nameWithType: AccountPurge.Logger
- uid: Application.BackgroundServices.AccountPurge.ServiceScopeFactory
  name: ServiceScopeFactory
  href: api/Application.BackgroundServices.AccountPurge.html#Application_BackgroundServices_AccountPurge_ServiceScopeFactory
  commentId: P:Application.BackgroundServices.AccountPurge.ServiceScopeFactory
  fullName: Application.BackgroundServices.AccountPurge.ServiceScopeFactory
  nameWithType: AccountPurge.ServiceScopeFactory
- uid: Application.BackgroundServices.AccountPurge.ServiceScopeFactory*
  name: ServiceScopeFactory
  href: api/Application.BackgroundServices.AccountPurge.html#Application_BackgroundServices_AccountPurge_ServiceScopeFactory_
  commentId: Overload:Application.BackgroundServices.AccountPurge.ServiceScopeFactory
  isSpec: "True"
  fullName: Application.BackgroundServices.AccountPurge.ServiceScopeFactory
  nameWithType: AccountPurge.ServiceScopeFactory
- uid: Application.BackgroundServices.AccountPurge._timer
  name: _timer
  href: api/Application.BackgroundServices.AccountPurge.html#Application_BackgroundServices_AccountPurge__timer
  commentId: F:Application.BackgroundServices.AccountPurge._timer
  fullName: Application.BackgroundServices.AccountPurge._timer
  nameWithType: AccountPurge._timer
- uid: Application.BackgroundServices.ApplicationPurge
  name: ApplicationPurge
  href: api/Application.BackgroundServices.ApplicationPurge.html
  commentId: T:Application.BackgroundServices.ApplicationPurge
  fullName: Application.BackgroundServices.ApplicationPurge
  nameWithType: ApplicationPurge
- uid: Application.BackgroundServices.ApplicationPurge.#ctor(Microsoft.Extensions.DependencyInjection.IServiceScopeFactory,Microsoft.Extensions.Logging.ILogger{Application.BackgroundServices.ApplicationPurge},Application.Contracts.ITimer)
  name: ApplicationPurge(IServiceScopeFactory, ILogger<ApplicationPurge>, ITimer)
  href: api/Application.BackgroundServices.ApplicationPurge.html#Application_BackgroundServices_ApplicationPurge__ctor_Microsoft_Extensions_DependencyInjection_IServiceScopeFactory_Microsoft_Extensions_Logging_ILogger_Application_BackgroundServices_ApplicationPurge__Application_Contracts_ITimer_
  commentId: M:Application.BackgroundServices.ApplicationPurge.#ctor(Microsoft.Extensions.DependencyInjection.IServiceScopeFactory,Microsoft.Extensions.Logging.ILogger{Application.BackgroundServices.ApplicationPurge},Application.Contracts.ITimer)
  name.vb: New(IServiceScopeFactory, ILogger(Of ApplicationPurge), ITimer)
  fullName: Application.BackgroundServices.ApplicationPurge.ApplicationPurge(Microsoft.Extensions.DependencyInjection.IServiceScopeFactory, Microsoft.Extensions.Logging.ILogger<Application.BackgroundServices.ApplicationPurge>, Application.Contracts.ITimer)
  fullName.vb: Application.BackgroundServices.ApplicationPurge.New(Microsoft.Extensions.DependencyInjection.IServiceScopeFactory, Microsoft.Extensions.Logging.ILogger(Of Application.BackgroundServices.ApplicationPurge), Application.Contracts.ITimer)
  nameWithType: ApplicationPurge.ApplicationPurge(IServiceScopeFactory, ILogger<ApplicationPurge>, ITimer)
  nameWithType.vb: ApplicationPurge.New(IServiceScopeFactory, ILogger(Of ApplicationPurge), ITimer)
- uid: Application.BackgroundServices.ApplicationPurge.#ctor*
  name: ApplicationPurge
  href: api/Application.BackgroundServices.ApplicationPurge.html#Application_BackgroundServices_ApplicationPurge__ctor_
  commentId: Overload:Application.BackgroundServices.ApplicationPurge.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Application.BackgroundServices.ApplicationPurge.ApplicationPurge
  fullName.vb: Application.BackgroundServices.ApplicationPurge.New
  nameWithType: ApplicationPurge.ApplicationPurge
  nameWithType.vb: ApplicationPurge.New
- uid: Application.BackgroundServices.ApplicationPurge.ExecuteAsync(System.Threading.CancellationToken)
  name: ExecuteAsync(CancellationToken)
  href: api/Application.BackgroundServices.ApplicationPurge.html#Application_BackgroundServices_ApplicationPurge_ExecuteAsync_System_Threading_CancellationToken_
  commentId: M:Application.BackgroundServices.ApplicationPurge.ExecuteAsync(System.Threading.CancellationToken)
  fullName: Application.BackgroundServices.ApplicationPurge.ExecuteAsync(System.Threading.CancellationToken)
  nameWithType: ApplicationPurge.ExecuteAsync(CancellationToken)
- uid: Application.BackgroundServices.ApplicationPurge.ExecuteAsync*
  name: ExecuteAsync
  href: api/Application.BackgroundServices.ApplicationPurge.html#Application_BackgroundServices_ApplicationPurge_ExecuteAsync_
  commentId: Overload:Application.BackgroundServices.ApplicationPurge.ExecuteAsync
  isSpec: "True"
  fullName: Application.BackgroundServices.ApplicationPurge.ExecuteAsync
  nameWithType: ApplicationPurge.ExecuteAsync
- uid: Application.BackgroundServices.ApplicationPurge.Logger
  name: Logger
  href: api/Application.BackgroundServices.ApplicationPurge.html#Application_BackgroundServices_ApplicationPurge_Logger
  commentId: P:Application.BackgroundServices.ApplicationPurge.Logger
  fullName: Application.BackgroundServices.ApplicationPurge.Logger
  nameWithType: ApplicationPurge.Logger
- uid: Application.BackgroundServices.ApplicationPurge.Logger*
  name: Logger
  href: api/Application.BackgroundServices.ApplicationPurge.html#Application_BackgroundServices_ApplicationPurge_Logger_
  commentId: Overload:Application.BackgroundServices.ApplicationPurge.Logger
  isSpec: "True"
  fullName: Application.BackgroundServices.ApplicationPurge.Logger
  nameWithType: ApplicationPurge.Logger
- uid: Application.BackgroundServices.ApplicationPurge.ServiceScopeFactory
  name: ServiceScopeFactory
  href: api/Application.BackgroundServices.ApplicationPurge.html#Application_BackgroundServices_ApplicationPurge_ServiceScopeFactory
  commentId: P:Application.BackgroundServices.ApplicationPurge.ServiceScopeFactory
  fullName: Application.BackgroundServices.ApplicationPurge.ServiceScopeFactory
  nameWithType: ApplicationPurge.ServiceScopeFactory
- uid: Application.BackgroundServices.ApplicationPurge.ServiceScopeFactory*
  name: ServiceScopeFactory
  href: api/Application.BackgroundServices.ApplicationPurge.html#Application_BackgroundServices_ApplicationPurge_ServiceScopeFactory_
  commentId: Overload:Application.BackgroundServices.ApplicationPurge.ServiceScopeFactory
  isSpec: "True"
  fullName: Application.BackgroundServices.ApplicationPurge.ServiceScopeFactory
  nameWithType: ApplicationPurge.ServiceScopeFactory
- uid: Application.BackgroundServices.ApplicationPurge._timer
  name: _timer
  href: api/Application.BackgroundServices.ApplicationPurge.html#Application_BackgroundServices_ApplicationPurge__timer
  commentId: F:Application.BackgroundServices.ApplicationPurge._timer
  fullName: Application.BackgroundServices.ApplicationPurge._timer
  nameWithType: ApplicationPurge._timer
- uid: Application.Constants
  name: Application.Constants
  href: api/Application.Constants.html
  commentId: N:Application.Constants
  fullName: Application.Constants
  nameWithType: Application.Constants
- uid: Application.Constants.HasherDefaults
  name: HasherDefaults
  href: api/Application.Constants.HasherDefaults.html
  commentId: T:Application.Constants.HasherDefaults
  fullName: Application.Constants.HasherDefaults
  nameWithType: HasherDefaults
- uid: Application.Constants.HasherDefaults.DegreeOfParallelism
  name: DegreeOfParallelism
  href: api/Application.Constants.HasherDefaults.html#Application_Constants_HasherDefaults_DegreeOfParallelism
  commentId: F:Application.Constants.HasherDefaults.DegreeOfParallelism
  fullName: Application.Constants.HasherDefaults.DegreeOfParallelism
  nameWithType: HasherDefaults.DegreeOfParallelism
- uid: Application.Constants.HasherDefaults.HashSize
  name: HashSize
  href: api/Application.Constants.HasherDefaults.html#Application_Constants_HasherDefaults_HashSize
  commentId: F:Application.Constants.HasherDefaults.HashSize
  fullName: Application.Constants.HasherDefaults.HashSize
  nameWithType: HasherDefaults.HashSize
- uid: Application.Constants.HasherDefaults.Iterations
  name: Iterations
  href: api/Application.Constants.HasherDefaults.html#Application_Constants_HasherDefaults_Iterations
  commentId: F:Application.Constants.HasherDefaults.Iterations
  fullName: Application.Constants.HasherDefaults.Iterations
  nameWithType: HasherDefaults.Iterations
- uid: Application.Constants.HasherDefaults.MemorySize
  name: MemorySize
  href: api/Application.Constants.HasherDefaults.html#Application_Constants_HasherDefaults_MemorySize
  commentId: F:Application.Constants.HasherDefaults.MemorySize
  fullName: Application.Constants.HasherDefaults.MemorySize
  nameWithType: HasherDefaults.MemorySize
- uid: Application.Constants.HasherDefaults.SaltSize
  name: SaltSize
  href: api/Application.Constants.HasherDefaults.html#Application_Constants_HasherDefaults_SaltSize
  commentId: F:Application.Constants.HasherDefaults.SaltSize
  fullName: Application.Constants.HasherDefaults.SaltSize
  nameWithType: HasherDefaults.SaltSize
- uid: Application.Contracts
  name: Application.Contracts
  href: api/Application.Contracts.html
  commentId: N:Application.Contracts
  fullName: Application.Contracts
  nameWithType: Application.Contracts
- uid: Application.Contracts.IActivityReadStore
  name: IActivityReadStore
  href: api/Application.Contracts.IActivityReadStore.html
  commentId: T:Application.Contracts.IActivityReadStore
  fullName: Application.Contracts.IActivityReadStore
  nameWithType: IActivityReadStore
- uid: Application.Contracts.IActivityReadStore.GetActivities
  name: GetActivities()
  href: api/Application.Contracts.IActivityReadStore.html#Application_Contracts_IActivityReadStore_GetActivities
  commentId: M:Application.Contracts.IActivityReadStore.GetActivities
  fullName: Application.Contracts.IActivityReadStore.GetActivities()
  nameWithType: IActivityReadStore.GetActivities()
- uid: Application.Contracts.IActivityReadStore.GetActivities*
  name: GetActivities
  href: api/Application.Contracts.IActivityReadStore.html#Application_Contracts_IActivityReadStore_GetActivities_
  commentId: Overload:Application.Contracts.IActivityReadStore.GetActivities
  isSpec: "True"
  fullName: Application.Contracts.IActivityReadStore.GetActivities
  nameWithType: IActivityReadStore.GetActivities
- uid: Application.Contracts.IActivityReadStore.GetActivitiesByDateTimeStamp(System.DateTime)
  name: GetActivitiesByDateTimeStamp(DateTime)
  href: api/Application.Contracts.IActivityReadStore.html#Application_Contracts_IActivityReadStore_GetActivitiesByDateTimeStamp_System_DateTime_
  commentId: M:Application.Contracts.IActivityReadStore.GetActivitiesByDateTimeStamp(System.DateTime)
  name.vb: GetActivitiesByDateTimeStamp(Date)
  fullName: Application.Contracts.IActivityReadStore.GetActivitiesByDateTimeStamp(System.DateTime)
  fullName.vb: Application.Contracts.IActivityReadStore.GetActivitiesByDateTimeStamp(Date)
  nameWithType: IActivityReadStore.GetActivitiesByDateTimeStamp(DateTime)
  nameWithType.vb: IActivityReadStore.GetActivitiesByDateTimeStamp(Date)
- uid: Application.Contracts.IActivityReadStore.GetActivitiesByDateTimeStamp*
  name: GetActivitiesByDateTimeStamp
  href: api/Application.Contracts.IActivityReadStore.html#Application_Contracts_IActivityReadStore_GetActivitiesByDateTimeStamp_
  commentId: Overload:Application.Contracts.IActivityReadStore.GetActivitiesByDateTimeStamp
  isSpec: "True"
  fullName: Application.Contracts.IActivityReadStore.GetActivitiesByDateTimeStamp
  nameWithType: IActivityReadStore.GetActivitiesByDateTimeStamp
- uid: Application.Contracts.IActivityWriteStore
  name: IActivityWriteStore
  href: api/Application.Contracts.IActivityWriteStore.html
  commentId: T:Application.Contracts.IActivityWriteStore
  fullName: Application.Contracts.IActivityWriteStore
  nameWithType: IActivityWriteStore
- uid: Application.Contracts.IActivityWriteStore.SaveActivityAsync*
  name: SaveActivityAsync
  href: api/Application.Contracts.IActivityWriteStore.html#Application_Contracts_IActivityWriteStore_SaveActivityAsync_
  commentId: Overload:Application.Contracts.IActivityWriteStore.SaveActivityAsync
  isSpec: "True"
  fullName: Application.Contracts.IActivityWriteStore.SaveActivityAsync
  nameWithType: IActivityWriteStore.SaveActivityAsync
- uid: Application.Contracts.IActivityWriteStore.SaveActivityAsync``1(``0)
  name: SaveActivityAsync<T>(T)
  href: api/Application.Contracts.IActivityWriteStore.html#Application_Contracts_IActivityWriteStore_SaveActivityAsync__1___0_
  commentId: M:Application.Contracts.IActivityWriteStore.SaveActivityAsync``1(``0)
  name.vb: SaveActivityAsync(Of T)(T)
  fullName: Application.Contracts.IActivityWriteStore.SaveActivityAsync<T>(T)
  fullName.vb: Application.Contracts.IActivityWriteStore.SaveActivityAsync(Of T)(T)
  nameWithType: IActivityWriteStore.SaveActivityAsync<T>(T)
  nameWithType.vb: IActivityWriteStore.SaveActivityAsync(Of T)(T)
- uid: Application.Contracts.IApplicationReadStore
  name: IApplicationReadStore
  href: api/Application.Contracts.IApplicationReadStore.html
  commentId: T:Application.Contracts.IApplicationReadStore
  fullName: Application.Contracts.IApplicationReadStore
  nameWithType: IApplicationReadStore
- uid: Application.Contracts.IApplicationReadStore.CheckApplicationExistsAsync(System.String,System.Threading.CancellationToken)
  name: CheckApplicationExistsAsync(string, CancellationToken)
  href: api/Application.Contracts.IApplicationReadStore.html#Application_Contracts_IApplicationReadStore_CheckApplicationExistsAsync_System_String_System_Threading_CancellationToken_
  commentId: M:Application.Contracts.IApplicationReadStore.CheckApplicationExistsAsync(System.String,System.Threading.CancellationToken)
  name.vb: CheckApplicationExistsAsync(String, CancellationToken)
  fullName: Application.Contracts.IApplicationReadStore.CheckApplicationExistsAsync(string, System.Threading.CancellationToken)
  fullName.vb: Application.Contracts.IApplicationReadStore.CheckApplicationExistsAsync(String, System.Threading.CancellationToken)
  nameWithType: IApplicationReadStore.CheckApplicationExistsAsync(string, CancellationToken)
  nameWithType.vb: IApplicationReadStore.CheckApplicationExistsAsync(String, CancellationToken)
- uid: Application.Contracts.IApplicationReadStore.CheckApplicationExistsAsync*
  name: CheckApplicationExistsAsync
  href: api/Application.Contracts.IApplicationReadStore.html#Application_Contracts_IApplicationReadStore_CheckApplicationExistsAsync_
  commentId: Overload:Application.Contracts.IApplicationReadStore.CheckApplicationExistsAsync
  isSpec: "True"
  fullName: Application.Contracts.IApplicationReadStore.CheckApplicationExistsAsync
  nameWithType: IApplicationReadStore.CheckApplicationExistsAsync
- uid: Application.Contracts.IApplicationReadStore.GetAllClientApplicationsByUserIdAsync(System.String,System.Threading.CancellationToken)
  name: GetAllClientApplicationsByUserIdAsync(string, CancellationToken)
  href: api/Application.Contracts.IApplicationReadStore.html#Application_Contracts_IApplicationReadStore_GetAllClientApplicationsByUserIdAsync_System_String_System_Threading_CancellationToken_
  commentId: M:Application.Contracts.IApplicationReadStore.GetAllClientApplicationsByUserIdAsync(System.String,System.Threading.CancellationToken)
  name.vb: GetAllClientApplicationsByUserIdAsync(String, CancellationToken)
  fullName: Application.Contracts.IApplicationReadStore.GetAllClientApplicationsByUserIdAsync(string, System.Threading.CancellationToken)
  fullName.vb: Application.Contracts.IApplicationReadStore.GetAllClientApplicationsByUserIdAsync(String, System.Threading.CancellationToken)
  nameWithType: IApplicationReadStore.GetAllClientApplicationsByUserIdAsync(string, CancellationToken)
  nameWithType.vb: IApplicationReadStore.GetAllClientApplicationsByUserIdAsync(String, CancellationToken)
- uid: Application.Contracts.IApplicationReadStore.GetAllClientApplicationsByUserIdAsync*
  name: GetAllClientApplicationsByUserIdAsync
  href: api/Application.Contracts.IApplicationReadStore.html#Application_Contracts_IApplicationReadStore_GetAllClientApplicationsByUserIdAsync_
  commentId: Overload:Application.Contracts.IApplicationReadStore.GetAllClientApplicationsByUserIdAsync
  isSpec: "True"
  fullName: Application.Contracts.IApplicationReadStore.GetAllClientApplicationsByUserIdAsync
  nameWithType: IApplicationReadStore.GetAllClientApplicationsByUserIdAsync
- uid: Application.Contracts.IApplicationReadStore.GetClientApplicationByClientIdAndCallbackUri(Application.DTOs.ApplicationDto{Api.Requests.AuthorizeRequest},System.Threading.CancellationToken)
  name: GetClientApplicationByClientIdAndCallbackUri(ApplicationDto<AuthorizeRequest>, CancellationToken)
  href: api/Application.Contracts.IApplicationReadStore.html#Application_Contracts_IApplicationReadStore_GetClientApplicationByClientIdAndCallbackUri_Application_DTOs_ApplicationDto_Api_Requests_AuthorizeRequest__System_Threading_CancellationToken_
  commentId: M:Application.Contracts.IApplicationReadStore.GetClientApplicationByClientIdAndCallbackUri(Application.DTOs.ApplicationDto{Api.Requests.AuthorizeRequest},System.Threading.CancellationToken)
  name.vb: GetClientApplicationByClientIdAndCallbackUri(ApplicationDto(Of AuthorizeRequest), CancellationToken)
  fullName: Application.Contracts.IApplicationReadStore.GetClientApplicationByClientIdAndCallbackUri(Application.DTOs.ApplicationDto<Api.Requests.AuthorizeRequest>, System.Threading.CancellationToken)
  fullName.vb: Application.Contracts.IApplicationReadStore.GetClientApplicationByClientIdAndCallbackUri(Application.DTOs.ApplicationDto(Of Api.Requests.AuthorizeRequest), System.Threading.CancellationToken)
  nameWithType: IApplicationReadStore.GetClientApplicationByClientIdAndCallbackUri(ApplicationDto<AuthorizeRequest>, CancellationToken)
  nameWithType.vb: IApplicationReadStore.GetClientApplicationByClientIdAndCallbackUri(ApplicationDto(Of AuthorizeRequest), CancellationToken)
- uid: Application.Contracts.IApplicationReadStore.GetClientApplicationByClientIdAndCallbackUri*
  name: GetClientApplicationByClientIdAndCallbackUri
  href: api/Application.Contracts.IApplicationReadStore.html#Application_Contracts_IApplicationReadStore_GetClientApplicationByClientIdAndCallbackUri_
  commentId: Overload:Application.Contracts.IApplicationReadStore.GetClientApplicationByClientIdAndCallbackUri
  isSpec: "True"
  fullName: Application.Contracts.IApplicationReadStore.GetClientApplicationByClientIdAndCallbackUri
  nameWithType: IApplicationReadStore.GetClientApplicationByClientIdAndCallbackUri
- uid: Application.Contracts.IApplicationReadStore.GetClientApplicationByNameAndUserIdAsync(System.String,System.String,System.Threading.CancellationToken)
  name: GetClientApplicationByNameAndUserIdAsync(string, string, CancellationToken)
  href: api/Application.Contracts.IApplicationReadStore.html#Application_Contracts_IApplicationReadStore_GetClientApplicationByNameAndUserIdAsync_System_String_System_String_System_Threading_CancellationToken_
  commentId: M:Application.Contracts.IApplicationReadStore.GetClientApplicationByNameAndUserIdAsync(System.String,System.String,System.Threading.CancellationToken)
  name.vb: GetClientApplicationByNameAndUserIdAsync(String, String, CancellationToken)
  fullName: Application.Contracts.IApplicationReadStore.GetClientApplicationByNameAndUserIdAsync(string, string, System.Threading.CancellationToken)
  fullName.vb: Application.Contracts.IApplicationReadStore.GetClientApplicationByNameAndUserIdAsync(String, String, System.Threading.CancellationToken)
  nameWithType: IApplicationReadStore.GetClientApplicationByNameAndUserIdAsync(string, string, CancellationToken)
  nameWithType.vb: IApplicationReadStore.GetClientApplicationByNameAndUserIdAsync(String, String, CancellationToken)
- uid: Application.Contracts.IApplicationReadStore.GetClientApplicationByNameAndUserIdAsync*
  name: GetClientApplicationByNameAndUserIdAsync
  href: api/Application.Contracts.IApplicationReadStore.html#Application_Contracts_IApplicationReadStore_GetClientApplicationByNameAndUserIdAsync_
  commentId: Overload:Application.Contracts.IApplicationReadStore.GetClientApplicationByNameAndUserIdAsync
  isSpec: "True"
  fullName: Application.Contracts.IApplicationReadStore.GetClientApplicationByNameAndUserIdAsync
  nameWithType: IApplicationReadStore.GetClientApplicationByNameAndUserIdAsync
- uid: Application.Contracts.IApplicationWriteStore
  name: IApplicationWriteStore
  href: api/Application.Contracts.IApplicationWriteStore.html
  commentId: T:Application.Contracts.IApplicationWriteStore
  fullName: Application.Contracts.IApplicationWriteStore
  nameWithType: IApplicationWriteStore
- uid: Application.Contracts.IApplicationWriteStore.CreateClientApplicationAsync(Application.DTOs.ApplicationDto{Api.Requests.CreateApplicationRequest},System.Threading.CancellationToken)
  name: CreateClientApplicationAsync(ApplicationDto<CreateApplicationRequest>, CancellationToken)
  href: api/Application.Contracts.IApplicationWriteStore.html#Application_Contracts_IApplicationWriteStore_CreateClientApplicationAsync_Application_DTOs_ApplicationDto_Api_Requests_CreateApplicationRequest__System_Threading_CancellationToken_
  commentId: M:Application.Contracts.IApplicationWriteStore.CreateClientApplicationAsync(Application.DTOs.ApplicationDto{Api.Requests.CreateApplicationRequest},System.Threading.CancellationToken)
  name.vb: CreateClientApplicationAsync(ApplicationDto(Of CreateApplicationRequest), CancellationToken)
  fullName: Application.Contracts.IApplicationWriteStore.CreateClientApplicationAsync(Application.DTOs.ApplicationDto<Api.Requests.CreateApplicationRequest>, System.Threading.CancellationToken)
  fullName.vb: Application.Contracts.IApplicationWriteStore.CreateClientApplicationAsync(Application.DTOs.ApplicationDto(Of Api.Requests.CreateApplicationRequest), System.Threading.CancellationToken)
  nameWithType: IApplicationWriteStore.CreateClientApplicationAsync(ApplicationDto<CreateApplicationRequest>, CancellationToken)
  nameWithType.vb: IApplicationWriteStore.CreateClientApplicationAsync(ApplicationDto(Of CreateApplicationRequest), CancellationToken)
- uid: Application.Contracts.IApplicationWriteStore.CreateClientApplicationAsync*
  name: CreateClientApplicationAsync
  href: api/Application.Contracts.IApplicationWriteStore.html#Application_Contracts_IApplicationWriteStore_CreateClientApplicationAsync_
  commentId: Overload:Application.Contracts.IApplicationWriteStore.CreateClientApplicationAsync
  isSpec: "True"
  fullName: Application.Contracts.IApplicationWriteStore.CreateClientApplicationAsync
  nameWithType: IApplicationWriteStore.CreateClientApplicationAsync
- uid: Application.Contracts.IApplicationWriteStore.SoftDeleteApplicationAsync(Application.DTOs.ApplicationDto{Api.Requests.DeleteApplicationByNameRequest},System.Threading.CancellationToken)
  name: SoftDeleteApplicationAsync(ApplicationDto<DeleteApplicationByNameRequest>, CancellationToken)
  href: api/Application.Contracts.IApplicationWriteStore.html#Application_Contracts_IApplicationWriteStore_SoftDeleteApplicationAsync_Application_DTOs_ApplicationDto_Api_Requests_DeleteApplicationByNameRequest__System_Threading_CancellationToken_
  commentId: M:Application.Contracts.IApplicationWriteStore.SoftDeleteApplicationAsync(Application.DTOs.ApplicationDto{Api.Requests.DeleteApplicationByNameRequest},System.Threading.CancellationToken)
  name.vb: SoftDeleteApplicationAsync(ApplicationDto(Of DeleteApplicationByNameRequest), CancellationToken)
  fullName: Application.Contracts.IApplicationWriteStore.SoftDeleteApplicationAsync(Application.DTOs.ApplicationDto<Api.Requests.DeleteApplicationByNameRequest>, System.Threading.CancellationToken)
  fullName.vb: Application.Contracts.IApplicationWriteStore.SoftDeleteApplicationAsync(Application.DTOs.ApplicationDto(Of Api.Requests.DeleteApplicationByNameRequest), System.Threading.CancellationToken)
  nameWithType: IApplicationWriteStore.SoftDeleteApplicationAsync(ApplicationDto<DeleteApplicationByNameRequest>, CancellationToken)
  nameWithType.vb: IApplicationWriteStore.SoftDeleteApplicationAsync(ApplicationDto(Of DeleteApplicationByNameRequest), CancellationToken)
- uid: Application.Contracts.IApplicationWriteStore.SoftDeleteApplicationAsync*
  name: SoftDeleteApplicationAsync
  href: api/Application.Contracts.IApplicationWriteStore.html#Application_Contracts_IApplicationWriteStore_SoftDeleteApplicationAsync_
  commentId: Overload:Application.Contracts.IApplicationWriteStore.SoftDeleteApplicationAsync
  isSpec: "True"
  fullName: Application.Contracts.IApplicationWriteStore.SoftDeleteApplicationAsync
  nameWithType: IApplicationWriteStore.SoftDeleteApplicationAsync
- uid: Application.Contracts.IApplicationWriteStore.UpdateApplicationAsync(Application.DTOs.ApplicationDto{Api.Requests.UpdateApplicationByNameRequest},System.Threading.CancellationToken)
  name: UpdateApplicationAsync(ApplicationDto<UpdateApplicationByNameRequest>, CancellationToken)
  href: api/Application.Contracts.IApplicationWriteStore.html#Application_Contracts_IApplicationWriteStore_UpdateApplicationAsync_Application_DTOs_ApplicationDto_Api_Requests_UpdateApplicationByNameRequest__System_Threading_CancellationToken_
  commentId: M:Application.Contracts.IApplicationWriteStore.UpdateApplicationAsync(Application.DTOs.ApplicationDto{Api.Requests.UpdateApplicationByNameRequest},System.Threading.CancellationToken)
  name.vb: UpdateApplicationAsync(ApplicationDto(Of UpdateApplicationByNameRequest), CancellationToken)
  fullName: Application.Contracts.IApplicationWriteStore.UpdateApplicationAsync(Application.DTOs.ApplicationDto<Api.Requests.UpdateApplicationByNameRequest>, System.Threading.CancellationToken)
  fullName.vb: Application.Contracts.IApplicationWriteStore.UpdateApplicationAsync(Application.DTOs.ApplicationDto(Of Api.Requests.UpdateApplicationByNameRequest), System.Threading.CancellationToken)
  nameWithType: IApplicationWriteStore.UpdateApplicationAsync(ApplicationDto<UpdateApplicationByNameRequest>, CancellationToken)
  nameWithType.vb: IApplicationWriteStore.UpdateApplicationAsync(ApplicationDto(Of UpdateApplicationByNameRequest), CancellationToken)
- uid: Application.Contracts.IApplicationWriteStore.UpdateApplicationAsync*
  name: UpdateApplicationAsync
  href: api/Application.Contracts.IApplicationWriteStore.html#Application_Contracts_IApplicationWriteStore_UpdateApplicationAsync_
  commentId: Overload:Application.Contracts.IApplicationWriteStore.UpdateApplicationAsync
  isSpec: "True"
  fullName: Application.Contracts.IApplicationWriteStore.UpdateApplicationAsync
  nameWithType: IApplicationWriteStore.UpdateApplicationAsync
- uid: Application.Contracts.IApplicationWriteStore.UpdateClientSecretAsync(Application.DTOs.ApplicationDto{Api.Requests.CreateApplicationSecretRequest},System.Threading.CancellationToken)
  name: UpdateClientSecretAsync(ApplicationDto<CreateApplicationSecretRequest>, CancellationToken)
  href: api/Application.Contracts.IApplicationWriteStore.html#Application_Contracts_IApplicationWriteStore_UpdateClientSecretAsync_Application_DTOs_ApplicationDto_Api_Requests_CreateApplicationSecretRequest__System_Threading_CancellationToken_
  commentId: M:Application.Contracts.IApplicationWriteStore.UpdateClientSecretAsync(Application.DTOs.ApplicationDto{Api.Requests.CreateApplicationSecretRequest},System.Threading.CancellationToken)
  name.vb: UpdateClientSecretAsync(ApplicationDto(Of CreateApplicationSecretRequest), CancellationToken)
  fullName: Application.Contracts.IApplicationWriteStore.UpdateClientSecretAsync(Application.DTOs.ApplicationDto<Api.Requests.CreateApplicationSecretRequest>, System.Threading.CancellationToken)
  fullName.vb: Application.Contracts.IApplicationWriteStore.UpdateClientSecretAsync(Application.DTOs.ApplicationDto(Of Api.Requests.CreateApplicationSecretRequest), System.Threading.CancellationToken)
  nameWithType: IApplicationWriteStore.UpdateClientSecretAsync(ApplicationDto<CreateApplicationSecretRequest>, CancellationToken)
  nameWithType.vb: IApplicationWriteStore.UpdateClientSecretAsync(ApplicationDto(Of CreateApplicationSecretRequest), CancellationToken)
- uid: Application.Contracts.IApplicationWriteStore.UpdateClientSecretAsync*
  name: UpdateClientSecretAsync
  href: api/Application.Contracts.IApplicationWriteStore.html#Application_Contracts_IApplicationWriteStore_UpdateClientSecretAsync_
  commentId: Overload:Application.Contracts.IApplicationWriteStore.UpdateClientSecretAsync
  isSpec: "True"
  fullName: Application.Contracts.IApplicationWriteStore.UpdateClientSecretAsync
  nameWithType: IApplicationWriteStore.UpdateClientSecretAsync
- uid: Application.Contracts.IEmailPublisher
  name: IEmailPublisher
  href: api/Application.Contracts.IEmailPublisher.html
  commentId: T:Application.Contracts.IEmailPublisher
  fullName: Application.Contracts.IEmailPublisher
  nameWithType: IEmailPublisher
- uid: Application.Contracts.IEmailPublisher.Publish(Authentica.Common.EmailMessage,System.Threading.CancellationToken)
  name: Publish(EmailMessage, CancellationToken)
  href: api/Application.Contracts.IEmailPublisher.html#Application_Contracts_IEmailPublisher_Publish_Authentica_Common_EmailMessage_System_Threading_CancellationToken_
  commentId: M:Application.Contracts.IEmailPublisher.Publish(Authentica.Common.EmailMessage,System.Threading.CancellationToken)
  fullName: Application.Contracts.IEmailPublisher.Publish(Authentica.Common.EmailMessage, System.Threading.CancellationToken)
  nameWithType: IEmailPublisher.Publish(EmailMessage, CancellationToken)
- uid: Application.Contracts.IEmailPublisher.Publish*
  name: Publish
  href: api/Application.Contracts.IEmailPublisher.html#Application_Contracts_IEmailPublisher_Publish_
  commentId: Overload:Application.Contracts.IEmailPublisher.Publish
  isSpec: "True"
  fullName: Application.Contracts.IEmailPublisher.Publish
  nameWithType: IEmailPublisher.Publish
- uid: Application.Contracts.IJsonWebTokenProvider
  name: IJsonWebTokenProvider
  href: api/Application.Contracts.IJsonWebTokenProvider.html
  commentId: T:Application.Contracts.IJsonWebTokenProvider
  fullName: Application.Contracts.IJsonWebTokenProvider
  nameWithType: IJsonWebTokenProvider
- uid: Application.Contracts.IJsonWebTokenProvider.TryCreateRefreshTokenAsync(System.String,System.String,System.String,System.String,System.Int32,System.String,System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.String})
  name: TryCreateRefreshTokenAsync(string, string, string, string, int, string, IList<string>, IList<string>)
  href: api/Application.Contracts.IJsonWebTokenProvider.html#Application_Contracts_IJsonWebTokenProvider_TryCreateRefreshTokenAsync_System_String_System_String_System_String_System_String_System_Int32_System_String_System_Collections_Generic_IList_System_String__System_Collections_Generic_IList_System_String__
  commentId: M:Application.Contracts.IJsonWebTokenProvider.TryCreateRefreshTokenAsync(System.String,System.String,System.String,System.String,System.Int32,System.String,System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.String})
  name.vb: TryCreateRefreshTokenAsync(String, String, String, String, Integer, String, IList(Of String), IList(Of String))
  fullName: Application.Contracts.IJsonWebTokenProvider.TryCreateRefreshTokenAsync(string, string, string, string, int, string, System.Collections.Generic.IList<string>, System.Collections.Generic.IList<string>)
  fullName.vb: Application.Contracts.IJsonWebTokenProvider.TryCreateRefreshTokenAsync(String, String, String, String, Integer, String, System.Collections.Generic.IList(Of String), System.Collections.Generic.IList(Of String))
  nameWithType: IJsonWebTokenProvider.TryCreateRefreshTokenAsync(string, string, string, string, int, string, IList<string>, IList<string>)
  nameWithType.vb: IJsonWebTokenProvider.TryCreateRefreshTokenAsync(String, String, String, String, Integer, String, IList(Of String), IList(Of String))
- uid: Application.Contracts.IJsonWebTokenProvider.TryCreateRefreshTokenAsync*
  name: TryCreateRefreshTokenAsync
  href: api/Application.Contracts.IJsonWebTokenProvider.html#Application_Contracts_IJsonWebTokenProvider_TryCreateRefreshTokenAsync_
  commentId: Overload:Application.Contracts.IJsonWebTokenProvider.TryCreateRefreshTokenAsync
  isSpec: "True"
  fullName: Application.Contracts.IJsonWebTokenProvider.TryCreateRefreshTokenAsync
  nameWithType: IJsonWebTokenProvider.TryCreateRefreshTokenAsync
- uid: Application.Contracts.IJsonWebTokenProvider.TryCreateTokenAsync(System.String,System.String,System.String,System.String,System.Int32,System.String,System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.String})
  name: TryCreateTokenAsync(string, string, string, string, int, string, IList<string>, IList<string>)
  href: api/Application.Contracts.IJsonWebTokenProvider.html#Application_Contracts_IJsonWebTokenProvider_TryCreateTokenAsync_System_String_System_String_System_String_System_String_System_Int32_System_String_System_Collections_Generic_IList_System_String__System_Collections_Generic_IList_System_String__
  commentId: M:Application.Contracts.IJsonWebTokenProvider.TryCreateTokenAsync(System.String,System.String,System.String,System.String,System.Int32,System.String,System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.String})
  name.vb: TryCreateTokenAsync(String, String, String, String, Integer, String, IList(Of String), IList(Of String))
  fullName: Application.Contracts.IJsonWebTokenProvider.TryCreateTokenAsync(string, string, string, string, int, string, System.Collections.Generic.IList<string>, System.Collections.Generic.IList<string>)
  fullName.vb: Application.Contracts.IJsonWebTokenProvider.TryCreateTokenAsync(String, String, String, String, Integer, String, System.Collections.Generic.IList(Of String), System.Collections.Generic.IList(Of String))
  nameWithType: IJsonWebTokenProvider.TryCreateTokenAsync(string, string, string, string, int, string, IList<string>, IList<string>)
  nameWithType.vb: IJsonWebTokenProvider.TryCreateTokenAsync(String, String, String, String, Integer, String, IList(Of String), IList(Of String))
- uid: Application.Contracts.IJsonWebTokenProvider.TryCreateTokenAsync*
  name: TryCreateTokenAsync
  href: api/Application.Contracts.IJsonWebTokenProvider.html#Application_Contracts_IJsonWebTokenProvider_TryCreateTokenAsync_
  commentId: Overload:Application.Contracts.IJsonWebTokenProvider.TryCreateTokenAsync
  isSpec: "True"
  fullName: Application.Contracts.IJsonWebTokenProvider.TryCreateTokenAsync
  nameWithType: IJsonWebTokenProvider.TryCreateTokenAsync
- uid: Application.Contracts.IJsonWebTokenProvider.TryValidateTokenAsync(System.String,System.String,System.String,System.String)
  name: TryValidateTokenAsync(string, string, string, string)
  href: api/Application.Contracts.IJsonWebTokenProvider.html#Application_Contracts_IJsonWebTokenProvider_TryValidateTokenAsync_System_String_System_String_System_String_System_String_
  commentId: M:Application.Contracts.IJsonWebTokenProvider.TryValidateTokenAsync(System.String,System.String,System.String,System.String)
  name.vb: TryValidateTokenAsync(String, String, String, String)
  fullName: Application.Contracts.IJsonWebTokenProvider.TryValidateTokenAsync(string, string, string, string)
  fullName.vb: Application.Contracts.IJsonWebTokenProvider.TryValidateTokenAsync(String, String, String, String)
  nameWithType: IJsonWebTokenProvider.TryValidateTokenAsync(string, string, string, string)
  nameWithType.vb: IJsonWebTokenProvider.TryValidateTokenAsync(String, String, String, String)
- uid: Application.Contracts.IJsonWebTokenProvider.TryValidateTokenAsync*
  name: TryValidateTokenAsync
  href: api/Application.Contracts.IJsonWebTokenProvider.html#Application_Contracts_IJsonWebTokenProvider_TryValidateTokenAsync_
  commentId: Overload:Application.Contracts.IJsonWebTokenProvider.TryValidateTokenAsync
  isSpec: "True"
  fullName: Application.Contracts.IJsonWebTokenProvider.TryValidateTokenAsync
  nameWithType: IJsonWebTokenProvider.TryValidateTokenAsync
- uid: Application.Contracts.IMultiFactorTotpProvider
  name: IMultiFactorTotpProvider
  href: api/Application.Contracts.IMultiFactorTotpProvider.html
  commentId: T:Application.Contracts.IMultiFactorTotpProvider
  fullName: Application.Contracts.IMultiFactorTotpProvider
  nameWithType: IMultiFactorTotpProvider
- uid: Application.Contracts.IMultiFactorTotpProvider.FormatKey(System.String)
  name: FormatKey(string)
  href: api/Application.Contracts.IMultiFactorTotpProvider.html#Application_Contracts_IMultiFactorTotpProvider_FormatKey_System_String_
  commentId: M:Application.Contracts.IMultiFactorTotpProvider.FormatKey(System.String)
  name.vb: FormatKey(String)
  fullName: Application.Contracts.IMultiFactorTotpProvider.FormatKey(string)
  fullName.vb: Application.Contracts.IMultiFactorTotpProvider.FormatKey(String)
  nameWithType: IMultiFactorTotpProvider.FormatKey(string)
  nameWithType.vb: IMultiFactorTotpProvider.FormatKey(String)
- uid: Application.Contracts.IMultiFactorTotpProvider.FormatKey*
  name: FormatKey
  href: api/Application.Contracts.IMultiFactorTotpProvider.html#Application_Contracts_IMultiFactorTotpProvider_FormatKey_
  commentId: Overload:Application.Contracts.IMultiFactorTotpProvider.FormatKey
  isSpec: "True"
  fullName: Application.Contracts.IMultiFactorTotpProvider.FormatKey
  nameWithType: IMultiFactorTotpProvider.FormatKey
- uid: Application.Contracts.IMultiFactorTotpProvider.GenerateKeyAsync(Domain.Aggregates.Identity.User)
  name: GenerateKeyAsync(User)
  href: api/Application.Contracts.IMultiFactorTotpProvider.html#Application_Contracts_IMultiFactorTotpProvider_GenerateKeyAsync_Domain_Aggregates_Identity_User_
  commentId: M:Application.Contracts.IMultiFactorTotpProvider.GenerateKeyAsync(Domain.Aggregates.Identity.User)
  fullName: Application.Contracts.IMultiFactorTotpProvider.GenerateKeyAsync(Domain.Aggregates.Identity.User)
  nameWithType: IMultiFactorTotpProvider.GenerateKeyAsync(User)
- uid: Application.Contracts.IMultiFactorTotpProvider.GenerateKeyAsync*
  name: GenerateKeyAsync
  href: api/Application.Contracts.IMultiFactorTotpProvider.html#Application_Contracts_IMultiFactorTotpProvider_GenerateKeyAsync_
  commentId: Overload:Application.Contracts.IMultiFactorTotpProvider.GenerateKeyAsync
  isSpec: "True"
  fullName: Application.Contracts.IMultiFactorTotpProvider.GenerateKeyAsync
  nameWithType: IMultiFactorTotpProvider.GenerateKeyAsync
- uid: Application.Contracts.IMultiFactorTotpProvider.GenerateQrCodeUriAsync(Domain.Aggregates.Identity.User)
  name: GenerateQrCodeUriAsync(User)
  href: api/Application.Contracts.IMultiFactorTotpProvider.html#Application_Contracts_IMultiFactorTotpProvider_GenerateQrCodeUriAsync_Domain_Aggregates_Identity_User_
  commentId: M:Application.Contracts.IMultiFactorTotpProvider.GenerateQrCodeUriAsync(Domain.Aggregates.Identity.User)
  fullName: Application.Contracts.IMultiFactorTotpProvider.GenerateQrCodeUriAsync(Domain.Aggregates.Identity.User)
  nameWithType: IMultiFactorTotpProvider.GenerateQrCodeUriAsync(User)
- uid: Application.Contracts.IMultiFactorTotpProvider.GenerateQrCodeUriAsync*
  name: GenerateQrCodeUriAsync
  href: api/Application.Contracts.IMultiFactorTotpProvider.html#Application_Contracts_IMultiFactorTotpProvider_GenerateQrCodeUriAsync_
  commentId: Overload:Application.Contracts.IMultiFactorTotpProvider.GenerateQrCodeUriAsync
  isSpec: "True"
  fullName: Application.Contracts.IMultiFactorTotpProvider.GenerateQrCodeUriAsync
  nameWithType: IMultiFactorTotpProvider.GenerateQrCodeUriAsync
- uid: Application.Contracts.IMultiFactorTotpProvider.ValidateAsync(System.String,Domain.Aggregates.Identity.User)
  name: ValidateAsync(string, User)
  href: api/Application.Contracts.IMultiFactorTotpProvider.html#Application_Contracts_IMultiFactorTotpProvider_ValidateAsync_System_String_Domain_Aggregates_Identity_User_
  commentId: M:Application.Contracts.IMultiFactorTotpProvider.ValidateAsync(System.String,Domain.Aggregates.Identity.User)
  name.vb: ValidateAsync(String, User)
  fullName: Application.Contracts.IMultiFactorTotpProvider.ValidateAsync(string, Domain.Aggregates.Identity.User)
  fullName.vb: Application.Contracts.IMultiFactorTotpProvider.ValidateAsync(String, Domain.Aggregates.Identity.User)
  nameWithType: IMultiFactorTotpProvider.ValidateAsync(string, User)
  nameWithType.vb: IMultiFactorTotpProvider.ValidateAsync(String, User)
- uid: Application.Contracts.IMultiFactorTotpProvider.ValidateAsync*
  name: ValidateAsync
  href: api/Application.Contracts.IMultiFactorTotpProvider.html#Application_Contracts_IMultiFactorTotpProvider_ValidateAsync_
  commentId: Overload:Application.Contracts.IMultiFactorTotpProvider.ValidateAsync
  isSpec: "True"
  fullName: Application.Contracts.IMultiFactorTotpProvider.ValidateAsync
  nameWithType: IMultiFactorTotpProvider.ValidateAsync
- uid: Application.Contracts.IRandomStringProvider
  name: IRandomStringProvider
  href: api/Application.Contracts.IRandomStringProvider.html
  commentId: T:Application.Contracts.IRandomStringProvider
  fullName: Application.Contracts.IRandomStringProvider
  nameWithType: IRandomStringProvider
- uid: Application.Contracts.IRandomStringProvider.GenerateAlphanumeric(System.Int32)
  name: GenerateAlphanumeric(int)
  href: api/Application.Contracts.IRandomStringProvider.html#Application_Contracts_IRandomStringProvider_GenerateAlphanumeric_System_Int32_
  commentId: M:Application.Contracts.IRandomStringProvider.GenerateAlphanumeric(System.Int32)
  name.vb: GenerateAlphanumeric(Integer)
  fullName: Application.Contracts.IRandomStringProvider.GenerateAlphanumeric(int)
  fullName.vb: Application.Contracts.IRandomStringProvider.GenerateAlphanumeric(Integer)
  nameWithType: IRandomStringProvider.GenerateAlphanumeric(int)
  nameWithType.vb: IRandomStringProvider.GenerateAlphanumeric(Integer)
- uid: Application.Contracts.IRandomStringProvider.GenerateAlphanumeric*
  name: GenerateAlphanumeric
  href: api/Application.Contracts.IRandomStringProvider.html#Application_Contracts_IRandomStringProvider_GenerateAlphanumeric_
  commentId: Overload:Application.Contracts.IRandomStringProvider.GenerateAlphanumeric
  isSpec: "True"
  fullName: Application.Contracts.IRandomStringProvider.GenerateAlphanumeric
  nameWithType: IRandomStringProvider.GenerateAlphanumeric
- uid: Application.Contracts.IScopeProvider
  name: IScopeProvider
  href: api/Application.Contracts.IScopeProvider.html
  commentId: T:Application.Contracts.IScopeProvider
  fullName: Application.Contracts.IScopeProvider
  nameWithType: IScopeProvider
- uid: Application.Contracts.IScopeProvider.ParseScopes(System.String)
  name: ParseScopes(string)
  href: api/Application.Contracts.IScopeProvider.html#Application_Contracts_IScopeProvider_ParseScopes_System_String_
  commentId: M:Application.Contracts.IScopeProvider.ParseScopes(System.String)
  name.vb: ParseScopes(String)
  fullName: Application.Contracts.IScopeProvider.ParseScopes(string)
  fullName.vb: Application.Contracts.IScopeProvider.ParseScopes(String)
  nameWithType: IScopeProvider.ParseScopes(string)
  nameWithType.vb: IScopeProvider.ParseScopes(String)
- uid: Application.Contracts.IScopeProvider.ParseScopes*
  name: ParseScopes
  href: api/Application.Contracts.IScopeProvider.html#Application_Contracts_IScopeProvider_ParseScopes_
  commentId: Overload:Application.Contracts.IScopeProvider.ParseScopes
  isSpec: "True"
  fullName: Application.Contracts.IScopeProvider.ParseScopes
  nameWithType: IScopeProvider.ParseScopes
- uid: Application.Contracts.ISecretHasher
  name: ISecretHasher
  href: api/Application.Contracts.ISecretHasher.html
  commentId: T:Application.Contracts.ISecretHasher
  fullName: Application.Contracts.ISecretHasher
  nameWithType: ISecretHasher
- uid: Application.Contracts.ISecretHasher.Hash(System.String)
  name: Hash(string)
  href: api/Application.Contracts.ISecretHasher.html#Application_Contracts_ISecretHasher_Hash_System_String_
  commentId: M:Application.Contracts.ISecretHasher.Hash(System.String)
  name.vb: Hash(String)
  fullName: Application.Contracts.ISecretHasher.Hash(string)
  fullName.vb: Application.Contracts.ISecretHasher.Hash(String)
  nameWithType: ISecretHasher.Hash(string)
  nameWithType.vb: ISecretHasher.Hash(String)
- uid: Application.Contracts.ISecretHasher.Hash*
  name: Hash
  href: api/Application.Contracts.ISecretHasher.html#Application_Contracts_ISecretHasher_Hash_
  commentId: Overload:Application.Contracts.ISecretHasher.Hash
  isSpec: "True"
  fullName: Application.Contracts.ISecretHasher.Hash
  nameWithType: ISecretHasher.Hash
- uid: Application.Contracts.ISecretHasher.Verify(System.String,System.String)
  name: Verify(string, string)
  href: api/Application.Contracts.ISecretHasher.html#Application_Contracts_ISecretHasher_Verify_System_String_System_String_
  commentId: M:Application.Contracts.ISecretHasher.Verify(System.String,System.String)
  name.vb: Verify(String, String)
  fullName: Application.Contracts.ISecretHasher.Verify(string, string)
  fullName.vb: Application.Contracts.ISecretHasher.Verify(String, String)
  nameWithType: ISecretHasher.Verify(string, string)
  nameWithType.vb: ISecretHasher.Verify(String, String)
- uid: Application.Contracts.ISecretHasher.Verify*
  name: Verify
  href: api/Application.Contracts.ISecretHasher.html#Application_Contracts_ISecretHasher_Verify_
  commentId: Overload:Application.Contracts.ISecretHasher.Verify
  isSpec: "True"
  fullName: Application.Contracts.ISecretHasher.Verify
  nameWithType: ISecretHasher.Verify
- uid: Application.Contracts.ISessionReadStore
  name: ISessionReadStore
  href: api/Application.Contracts.ISessionReadStore.html
  commentId: T:Application.Contracts.ISessionReadStore
  fullName: Application.Contracts.ISessionReadStore
  nameWithType: ISessionReadStore
- uid: Application.Contracts.ISessionReadStore.GetAsync(System.String)
  name: GetAsync(string)
  href: api/Application.Contracts.ISessionReadStore.html#Application_Contracts_ISessionReadStore_GetAsync_System_String_
  commentId: M:Application.Contracts.ISessionReadStore.GetAsync(System.String)
  name.vb: GetAsync(String)
  fullName: Application.Contracts.ISessionReadStore.GetAsync(string)
  fullName.vb: Application.Contracts.ISessionReadStore.GetAsync(String)
  nameWithType: ISessionReadStore.GetAsync(string)
  nameWithType.vb: ISessionReadStore.GetAsync(String)
- uid: Application.Contracts.ISessionReadStore.GetAsync*
  name: GetAsync
  href: api/Application.Contracts.ISessionReadStore.html#Application_Contracts_ISessionReadStore_GetAsync_
  commentId: Overload:Application.Contracts.ISessionReadStore.GetAsync
  isSpec: "True"
  fullName: Application.Contracts.ISessionReadStore.GetAsync
  nameWithType: ISessionReadStore.GetAsync
- uid: Application.Contracts.ISessionReadStore.GetByIdAsync(System.String)
  name: GetByIdAsync(string)
  href: api/Application.Contracts.ISessionReadStore.html#Application_Contracts_ISessionReadStore_GetByIdAsync_System_String_
  commentId: M:Application.Contracts.ISessionReadStore.GetByIdAsync(System.String)
  name.vb: GetByIdAsync(String)
  fullName: Application.Contracts.ISessionReadStore.GetByIdAsync(string)
  fullName.vb: Application.Contracts.ISessionReadStore.GetByIdAsync(String)
  nameWithType: ISessionReadStore.GetByIdAsync(string)
  nameWithType.vb: ISessionReadStore.GetByIdAsync(String)
- uid: Application.Contracts.ISessionReadStore.GetByIdAsync*
  name: GetByIdAsync
  href: api/Application.Contracts.ISessionReadStore.html#Application_Contracts_ISessionReadStore_GetByIdAsync_
  commentId: Overload:Application.Contracts.ISessionReadStore.GetByIdAsync
  isSpec: "True"
  fullName: Application.Contracts.ISessionReadStore.GetByIdAsync
  nameWithType: ISessionReadStore.GetByIdAsync
- uid: Application.Contracts.ISessionWriteStore
  name: ISessionWriteStore
  href: api/Application.Contracts.ISessionWriteStore.html
  commentId: T:Application.Contracts.ISessionWriteStore
  fullName: Application.Contracts.ISessionWriteStore
  nameWithType: ISessionWriteStore
- uid: Application.Contracts.ISessionWriteStore.CreateAsync(Domain.Aggregates.Identity.Session)
  name: CreateAsync(Session)
  href: api/Application.Contracts.ISessionWriteStore.html#Application_Contracts_ISessionWriteStore_CreateAsync_Domain_Aggregates_Identity_Session_
  commentId: M:Application.Contracts.ISessionWriteStore.CreateAsync(Domain.Aggregates.Identity.Session)
  fullName: Application.Contracts.ISessionWriteStore.CreateAsync(Domain.Aggregates.Identity.Session)
  nameWithType: ISessionWriteStore.CreateAsync(Session)
- uid: Application.Contracts.ISessionWriteStore.CreateAsync*
  name: CreateAsync
  href: api/Application.Contracts.ISessionWriteStore.html#Application_Contracts_ISessionWriteStore_CreateAsync_
  commentId: Overload:Application.Contracts.ISessionWriteStore.CreateAsync
  isSpec: "True"
  fullName: Application.Contracts.ISessionWriteStore.CreateAsync
  nameWithType: ISessionWriteStore.CreateAsync
- uid: Application.Contracts.ISessionWriteStore.DeleteAsync(Domain.Aggregates.Identity.Session)
  name: DeleteAsync(Session)
  href: api/Application.Contracts.ISessionWriteStore.html#Application_Contracts_ISessionWriteStore_DeleteAsync_Domain_Aggregates_Identity_Session_
  commentId: M:Application.Contracts.ISessionWriteStore.DeleteAsync(Domain.Aggregates.Identity.Session)
  fullName: Application.Contracts.ISessionWriteStore.DeleteAsync(Domain.Aggregates.Identity.Session)
  nameWithType: ISessionWriteStore.DeleteAsync(Session)
- uid: Application.Contracts.ISessionWriteStore.DeleteAsync*
  name: DeleteAsync
  href: api/Application.Contracts.ISessionWriteStore.html#Application_Contracts_ISessionWriteStore_DeleteAsync_
  commentId: Overload:Application.Contracts.ISessionWriteStore.DeleteAsync
  isSpec: "True"
  fullName: Application.Contracts.ISessionWriteStore.DeleteAsync
  nameWithType: ISessionWriteStore.DeleteAsync
- uid: Application.Contracts.ISharedStore
  name: ISharedStore
  href: api/Application.Contracts.ISharedStore.html
  commentId: T:Application.Contracts.ISharedStore
  fullName: Application.Contracts.ISharedStore
  nameWithType: ISharedStore
- uid: Application.Contracts.ISharedStore.PurgeEntriesAsync*
  name: PurgeEntriesAsync
  href: api/Application.Contracts.ISharedStore.html#Application_Contracts_ISharedStore_PurgeEntriesAsync_
  commentId: Overload:Application.Contracts.ISharedStore.PurgeEntriesAsync
  isSpec: "True"
  fullName: Application.Contracts.ISharedStore.PurgeEntriesAsync
  nameWithType: ISharedStore.PurgeEntriesAsync
- uid: Application.Contracts.ISharedStore.PurgeEntriesAsync``1(System.Threading.CancellationToken)
  name: PurgeEntriesAsync<TEntity>(CancellationToken)
  href: api/Application.Contracts.ISharedStore.html#Application_Contracts_ISharedStore_PurgeEntriesAsync__1_System_Threading_CancellationToken_
  commentId: M:Application.Contracts.ISharedStore.PurgeEntriesAsync``1(System.Threading.CancellationToken)
  name.vb: PurgeEntriesAsync(Of TEntity)(CancellationToken)
  fullName: Application.Contracts.ISharedStore.PurgeEntriesAsync<TEntity>(System.Threading.CancellationToken)
  fullName.vb: Application.Contracts.ISharedStore.PurgeEntriesAsync(Of TEntity)(System.Threading.CancellationToken)
  nameWithType: ISharedStore.PurgeEntriesAsync<TEntity>(CancellationToken)
  nameWithType.vb: ISharedStore.PurgeEntriesAsync(Of TEntity)(CancellationToken)
- uid: Application.Contracts.ITimer
  name: ITimer
  href: api/Application.Contracts.ITimer.html
  commentId: T:Application.Contracts.ITimer
  fullName: Application.Contracts.ITimer
  nameWithType: ITimer
- uid: Application.Contracts.ITimer.WaitForNextTickAsync(System.Threading.CancellationToken)
  name: WaitForNextTickAsync(CancellationToken)
  href: api/Application.Contracts.ITimer.html#Application_Contracts_ITimer_WaitForNextTickAsync_System_Threading_CancellationToken_
  commentId: M:Application.Contracts.ITimer.WaitForNextTickAsync(System.Threading.CancellationToken)
  fullName: Application.Contracts.ITimer.WaitForNextTickAsync(System.Threading.CancellationToken)
  nameWithType: ITimer.WaitForNextTickAsync(CancellationToken)
- uid: Application.Contracts.ITimer.WaitForNextTickAsync*
  name: WaitForNextTickAsync
  href: api/Application.Contracts.ITimer.html#Application_Contracts_ITimer_WaitForNextTickAsync_
  commentId: Overload:Application.Contracts.ITimer.WaitForNextTickAsync
  isSpec: "True"
  fullName: Application.Contracts.ITimer.WaitForNextTickAsync
  nameWithType: ITimer.WaitForNextTickAsync
- uid: Application.Contracts.IUserReadStore
  name: IUserReadStore
  href: api/Application.Contracts.IUserReadStore.html
  commentId: T:Application.Contracts.IUserReadStore
  fullName: Application.Contracts.IUserReadStore
  nameWithType: IUserReadStore
- uid: Application.Contracts.IUserReadStore.GetAllUsersAsync
  name: GetAllUsersAsync()
  href: api/Application.Contracts.IUserReadStore.html#Application_Contracts_IUserReadStore_GetAllUsersAsync
  commentId: M:Application.Contracts.IUserReadStore.GetAllUsersAsync
  fullName: Application.Contracts.IUserReadStore.GetAllUsersAsync()
  nameWithType: IUserReadStore.GetAllUsersAsync()
- uid: Application.Contracts.IUserReadStore.GetAllUsersAsync*
  name: GetAllUsersAsync
  href: api/Application.Contracts.IUserReadStore.html#Application_Contracts_IUserReadStore_GetAllUsersAsync_
  commentId: Overload:Application.Contracts.IUserReadStore.GetAllUsersAsync
  isSpec: "True"
  fullName: Application.Contracts.IUserReadStore.GetAllUsersAsync
  nameWithType: IUserReadStore.GetAllUsersAsync
- uid: Application.Contracts.IUserReadStore.GetUserByEmailAsync(System.Security.Claims.ClaimsPrincipal,System.Threading.CancellationToken)
  name: GetUserByEmailAsync(ClaimsPrincipal, CancellationToken)
  href: api/Application.Contracts.IUserReadStore.html#Application_Contracts_IUserReadStore_GetUserByEmailAsync_System_Security_Claims_ClaimsPrincipal_System_Threading_CancellationToken_
  commentId: M:Application.Contracts.IUserReadStore.GetUserByEmailAsync(System.Security.Claims.ClaimsPrincipal,System.Threading.CancellationToken)
  fullName: Application.Contracts.IUserReadStore.GetUserByEmailAsync(System.Security.Claims.ClaimsPrincipal, System.Threading.CancellationToken)
  nameWithType: IUserReadStore.GetUserByEmailAsync(ClaimsPrincipal, CancellationToken)
- uid: Application.Contracts.IUserReadStore.GetUserByEmailAsync(System.String)
  name: GetUserByEmailAsync(string)
  href: api/Application.Contracts.IUserReadStore.html#Application_Contracts_IUserReadStore_GetUserByEmailAsync_System_String_
  commentId: M:Application.Contracts.IUserReadStore.GetUserByEmailAsync(System.String)
  name.vb: GetUserByEmailAsync(String)
  fullName: Application.Contracts.IUserReadStore.GetUserByEmailAsync(string)
  fullName.vb: Application.Contracts.IUserReadStore.GetUserByEmailAsync(String)
  nameWithType: IUserReadStore.GetUserByEmailAsync(string)
  nameWithType.vb: IUserReadStore.GetUserByEmailAsync(String)
- uid: Application.Contracts.IUserReadStore.GetUserByEmailAsync*
  name: GetUserByEmailAsync
  href: api/Application.Contracts.IUserReadStore.html#Application_Contracts_IUserReadStore_GetUserByEmailAsync_
  commentId: Overload:Application.Contracts.IUserReadStore.GetUserByEmailAsync
  isSpec: "True"
  fullName: Application.Contracts.IUserReadStore.GetUserByEmailAsync
  nameWithType: IUserReadStore.GetUserByEmailAsync
- uid: Application.Contracts.IUserReadStore.GetUserByIdAsync(System.String)
  name: GetUserByIdAsync(string)
  href: api/Application.Contracts.IUserReadStore.html#Application_Contracts_IUserReadStore_GetUserByIdAsync_System_String_
  commentId: M:Application.Contracts.IUserReadStore.GetUserByIdAsync(System.String)
  name.vb: GetUserByIdAsync(String)
  fullName: Application.Contracts.IUserReadStore.GetUserByIdAsync(string)
  fullName.vb: Application.Contracts.IUserReadStore.GetUserByIdAsync(String)
  nameWithType: IUserReadStore.GetUserByIdAsync(string)
  nameWithType.vb: IUserReadStore.GetUserByIdAsync(String)
- uid: Application.Contracts.IUserReadStore.GetUserByIdAsync*
  name: GetUserByIdAsync
  href: api/Application.Contracts.IUserReadStore.html#Application_Contracts_IUserReadStore_GetUserByIdAsync_
  commentId: Overload:Application.Contracts.IUserReadStore.GetUserByIdAsync
  isSpec: "True"
  fullName: Application.Contracts.IUserReadStore.GetUserByIdAsync
  nameWithType: IUserReadStore.GetUserByIdAsync
- uid: Application.Contracts.IUserReadStore.GetUserRolesAsync(System.String)
  name: GetUserRolesAsync(string)
  href: api/Application.Contracts.IUserReadStore.html#Application_Contracts_IUserReadStore_GetUserRolesAsync_System_String_
  commentId: M:Application.Contracts.IUserReadStore.GetUserRolesAsync(System.String)
  name.vb: GetUserRolesAsync(String)
  fullName: Application.Contracts.IUserReadStore.GetUserRolesAsync(string)
  fullName.vb: Application.Contracts.IUserReadStore.GetUserRolesAsync(String)
  nameWithType: IUserReadStore.GetUserRolesAsync(string)
  nameWithType.vb: IUserReadStore.GetUserRolesAsync(String)
- uid: Application.Contracts.IUserReadStore.GetUserRolesAsync*
  name: GetUserRolesAsync
  href: api/Application.Contracts.IUserReadStore.html#Application_Contracts_IUserReadStore_GetUserRolesAsync_
  commentId: Overload:Application.Contracts.IUserReadStore.GetUserRolesAsync
  isSpec: "True"
  fullName: Application.Contracts.IUserReadStore.GetUserRolesAsync
  nameWithType: IUserReadStore.GetUserRolesAsync
- uid: Application.Contracts.IUserWriteStore
  name: IUserWriteStore
  href: api/Application.Contracts.IUserWriteStore.html
  commentId: T:Application.Contracts.IUserWriteStore
  fullName: Application.Contracts.IUserWriteStore
  nameWithType: IUserWriteStore
- uid: Application.Contracts.IUserWriteStore.ConfirmEmailAsync(Domain.Aggregates.Identity.User,System.String)
  name: ConfirmEmailAsync(User, string)
  href: api/Application.Contracts.IUserWriteStore.html#Application_Contracts_IUserWriteStore_ConfirmEmailAsync_Domain_Aggregates_Identity_User_System_String_
  commentId: M:Application.Contracts.IUserWriteStore.ConfirmEmailAsync(Domain.Aggregates.Identity.User,System.String)
  name.vb: ConfirmEmailAsync(User, String)
  fullName: Application.Contracts.IUserWriteStore.ConfirmEmailAsync(Domain.Aggregates.Identity.User, string)
  fullName.vb: Application.Contracts.IUserWriteStore.ConfirmEmailAsync(Domain.Aggregates.Identity.User, String)
  nameWithType: IUserWriteStore.ConfirmEmailAsync(User, string)
  nameWithType.vb: IUserWriteStore.ConfirmEmailAsync(User, String)
- uid: Application.Contracts.IUserWriteStore.ConfirmEmailAsync*
  name: ConfirmEmailAsync
  href: api/Application.Contracts.IUserWriteStore.html#Application_Contracts_IUserWriteStore_ConfirmEmailAsync_
  commentId: Overload:Application.Contracts.IUserWriteStore.ConfirmEmailAsync
  isSpec: "True"
  fullName: Application.Contracts.IUserWriteStore.ConfirmEmailAsync
  nameWithType: IUserWriteStore.ConfirmEmailAsync
- uid: Application.Contracts.IUserWriteStore.CreateUserAsync(Api.Requests.RegisterRequest,System.Threading.CancellationToken)
  name: CreateUserAsync(RegisterRequest, CancellationToken)
  href: api/Application.Contracts.IUserWriteStore.html#Application_Contracts_IUserWriteStore_CreateUserAsync_Api_Requests_RegisterRequest_System_Threading_CancellationToken_
  commentId: M:Application.Contracts.IUserWriteStore.CreateUserAsync(Api.Requests.RegisterRequest,System.Threading.CancellationToken)
  fullName: Application.Contracts.IUserWriteStore.CreateUserAsync(Api.Requests.RegisterRequest, System.Threading.CancellationToken)
  nameWithType: IUserWriteStore.CreateUserAsync(RegisterRequest, CancellationToken)
- uid: Application.Contracts.IUserWriteStore.CreateUserAsync*
  name: CreateUserAsync
  href: api/Application.Contracts.IUserWriteStore.html#Application_Contracts_IUserWriteStore_CreateUserAsync_
  commentId: Overload:Application.Contracts.IUserWriteStore.CreateUserAsync
  isSpec: "True"
  fullName: Application.Contracts.IUserWriteStore.CreateUserAsync
  nameWithType: IUserWriteStore.CreateUserAsync
- uid: Application.Contracts.IUserWriteStore.RedeemMultiFactorRecoveryCodeAsync(Domain.Aggregates.Identity.User,System.String)
  name: RedeemMultiFactorRecoveryCodeAsync(User, string)
  href: api/Application.Contracts.IUserWriteStore.html#Application_Contracts_IUserWriteStore_RedeemMultiFactorRecoveryCodeAsync_Domain_Aggregates_Identity_User_System_String_
  commentId: M:Application.Contracts.IUserWriteStore.RedeemMultiFactorRecoveryCodeAsync(Domain.Aggregates.Identity.User,System.String)
  name.vb: RedeemMultiFactorRecoveryCodeAsync(User, String)
  fullName: Application.Contracts.IUserWriteStore.RedeemMultiFactorRecoveryCodeAsync(Domain.Aggregates.Identity.User, string)
  fullName.vb: Application.Contracts.IUserWriteStore.RedeemMultiFactorRecoveryCodeAsync(Domain.Aggregates.Identity.User, String)
  nameWithType: IUserWriteStore.RedeemMultiFactorRecoveryCodeAsync(User, string)
  nameWithType.vb: IUserWriteStore.RedeemMultiFactorRecoveryCodeAsync(User, String)
- uid: Application.Contracts.IUserWriteStore.RedeemMultiFactorRecoveryCodeAsync*
  name: RedeemMultiFactorRecoveryCodeAsync
  href: api/Application.Contracts.IUserWriteStore.html#Application_Contracts_IUserWriteStore_RedeemMultiFactorRecoveryCodeAsync_
  commentId: Overload:Application.Contracts.IUserWriteStore.RedeemMultiFactorRecoveryCodeAsync
  isSpec: "True"
  fullName: Application.Contracts.IUserWriteStore.RedeemMultiFactorRecoveryCodeAsync
  nameWithType: IUserWriteStore.RedeemMultiFactorRecoveryCodeAsync
- uid: Application.Contracts.IUserWriteStore.ResetPasswordAsync(Domain.Aggregates.Identity.User,System.String,System.String)
  name: ResetPasswordAsync(User, string, string)
  href: api/Application.Contracts.IUserWriteStore.html#Application_Contracts_IUserWriteStore_ResetPasswordAsync_Domain_Aggregates_Identity_User_System_String_System_String_
  commentId: M:Application.Contracts.IUserWriteStore.ResetPasswordAsync(Domain.Aggregates.Identity.User,System.String,System.String)
  name.vb: ResetPasswordAsync(User, String, String)
  fullName: Application.Contracts.IUserWriteStore.ResetPasswordAsync(Domain.Aggregates.Identity.User, string, string)
  fullName.vb: Application.Contracts.IUserWriteStore.ResetPasswordAsync(Domain.Aggregates.Identity.User, String, String)
  nameWithType: IUserWriteStore.ResetPasswordAsync(User, string, string)
  nameWithType.vb: IUserWriteStore.ResetPasswordAsync(User, String, String)
- uid: Application.Contracts.IUserWriteStore.ResetPasswordAsync*
  name: ResetPasswordAsync
  href: api/Application.Contracts.IUserWriteStore.html#Application_Contracts_IUserWriteStore_ResetPasswordAsync_
  commentId: Overload:Application.Contracts.IUserWriteStore.ResetPasswordAsync
  isSpec: "True"
  fullName: Application.Contracts.IUserWriteStore.ResetPasswordAsync
  nameWithType: IUserWriteStore.ResetPasswordAsync
- uid: Application.Contracts.IUserWriteStore.SoftDeleteUserAsync(System.Security.Claims.ClaimsPrincipal,System.Threading.CancellationToken)
  name: SoftDeleteUserAsync(ClaimsPrincipal, CancellationToken)
  href: api/Application.Contracts.IUserWriteStore.html#Application_Contracts_IUserWriteStore_SoftDeleteUserAsync_System_Security_Claims_ClaimsPrincipal_System_Threading_CancellationToken_
  commentId: M:Application.Contracts.IUserWriteStore.SoftDeleteUserAsync(System.Security.Claims.ClaimsPrincipal,System.Threading.CancellationToken)
  fullName: Application.Contracts.IUserWriteStore.SoftDeleteUserAsync(System.Security.Claims.ClaimsPrincipal, System.Threading.CancellationToken)
  nameWithType: IUserWriteStore.SoftDeleteUserAsync(ClaimsPrincipal, CancellationToken)
- uid: Application.Contracts.IUserWriteStore.SoftDeleteUserAsync*
  name: SoftDeleteUserAsync
  href: api/Application.Contracts.IUserWriteStore.html#Application_Contracts_IUserWriteStore_SoftDeleteUserAsync_
  commentId: Overload:Application.Contracts.IUserWriteStore.SoftDeleteUserAsync
  isSpec: "True"
  fullName: Application.Contracts.IUserWriteStore.SoftDeleteUserAsync
  nameWithType: IUserWriteStore.SoftDeleteUserAsync
- uid: Application.Contracts.IUserWriteStore.UpdateEmailAsync(Domain.Aggregates.Identity.User,System.String,System.String)
  name: UpdateEmailAsync(User, string, string)
  href: api/Application.Contracts.IUserWriteStore.html#Application_Contracts_IUserWriteStore_UpdateEmailAsync_Domain_Aggregates_Identity_User_System_String_System_String_
  commentId: M:Application.Contracts.IUserWriteStore.UpdateEmailAsync(Domain.Aggregates.Identity.User,System.String,System.String)
  name.vb: UpdateEmailAsync(User, String, String)
  fullName: Application.Contracts.IUserWriteStore.UpdateEmailAsync(Domain.Aggregates.Identity.User, string, string)
  fullName.vb: Application.Contracts.IUserWriteStore.UpdateEmailAsync(Domain.Aggregates.Identity.User, String, String)
  nameWithType: IUserWriteStore.UpdateEmailAsync(User, string, string)
  nameWithType.vb: IUserWriteStore.UpdateEmailAsync(User, String, String)
- uid: Application.Contracts.IUserWriteStore.UpdateEmailAsync*
  name: UpdateEmailAsync
  href: api/Application.Contracts.IUserWriteStore.html#Application_Contracts_IUserWriteStore_UpdateEmailAsync_
  commentId: Overload:Application.Contracts.IUserWriteStore.UpdateEmailAsync
  isSpec: "True"
  fullName: Application.Contracts.IUserWriteStore.UpdateEmailAsync
  nameWithType: IUserWriteStore.UpdateEmailAsync
- uid: Application.Contracts.IUserWriteStore.UpdatePhoneNumberAsync(Domain.Aggregates.Identity.User,System.String,System.String)
  name: UpdatePhoneNumberAsync(User, string, string)
  href: api/Application.Contracts.IUserWriteStore.html#Application_Contracts_IUserWriteStore_UpdatePhoneNumberAsync_Domain_Aggregates_Identity_User_System_String_System_String_
  commentId: M:Application.Contracts.IUserWriteStore.UpdatePhoneNumberAsync(Domain.Aggregates.Identity.User,System.String,System.String)
  name.vb: UpdatePhoneNumberAsync(User, String, String)
  fullName: Application.Contracts.IUserWriteStore.UpdatePhoneNumberAsync(Domain.Aggregates.Identity.User, string, string)
  fullName.vb: Application.Contracts.IUserWriteStore.UpdatePhoneNumberAsync(Domain.Aggregates.Identity.User, String, String)
  nameWithType: IUserWriteStore.UpdatePhoneNumberAsync(User, string, string)
  nameWithType.vb: IUserWriteStore.UpdatePhoneNumberAsync(User, String, String)
- uid: Application.Contracts.IUserWriteStore.UpdatePhoneNumberAsync*
  name: UpdatePhoneNumberAsync
  href: api/Application.Contracts.IUserWriteStore.html#Application_Contracts_IUserWriteStore_UpdatePhoneNumberAsync_
  commentId: Overload:Application.Contracts.IUserWriteStore.UpdatePhoneNumberAsync
  isSpec: "True"
  fullName: Application.Contracts.IUserWriteStore.UpdatePhoneNumberAsync
  nameWithType: IUserWriteStore.UpdatePhoneNumberAsync
- uid: Application.Cryptography
  name: Application.Cryptography
  href: api/Application.Cryptography.html
  commentId: N:Application.Cryptography
  fullName: Application.Cryptography
  nameWithType: Application.Cryptography
- uid: Application.Cryptography.Argon2PasswordHasher`1
  name: Argon2PasswordHasher<TUser>
  href: api/Application.Cryptography.Argon2PasswordHasher-1.html
  commentId: T:Application.Cryptography.Argon2PasswordHasher`1
  name.vb: Argon2PasswordHasher(Of TUser)
  fullName: Application.Cryptography.Argon2PasswordHasher<TUser>
  fullName.vb: Application.Cryptography.Argon2PasswordHasher(Of TUser)
  nameWithType: Argon2PasswordHasher<TUser>
  nameWithType.vb: Argon2PasswordHasher(Of TUser)
- uid: Application.Cryptography.Argon2PasswordHasher`1.HashPassword(`0,System.String)
  name: HashPassword(TUser, string)
  href: api/Application.Cryptography.Argon2PasswordHasher-1.html#Application_Cryptography_Argon2PasswordHasher_1_HashPassword__0_System_String_
  commentId: M:Application.Cryptography.Argon2PasswordHasher`1.HashPassword(`0,System.String)
  name.vb: HashPassword(TUser, String)
  fullName: Application.Cryptography.Argon2PasswordHasher<TUser>.HashPassword(TUser, string)
  fullName.vb: Application.Cryptography.Argon2PasswordHasher(Of TUser).HashPassword(TUser, String)
  nameWithType: Argon2PasswordHasher<TUser>.HashPassword(TUser, string)
  nameWithType.vb: Argon2PasswordHasher(Of TUser).HashPassword(TUser, String)
- uid: Application.Cryptography.Argon2PasswordHasher`1.HashPassword*
  name: HashPassword
  href: api/Application.Cryptography.Argon2PasswordHasher-1.html#Application_Cryptography_Argon2PasswordHasher_1_HashPassword_
  commentId: Overload:Application.Cryptography.Argon2PasswordHasher`1.HashPassword
  isSpec: "True"
  fullName: Application.Cryptography.Argon2PasswordHasher<TUser>.HashPassword
  fullName.vb: Application.Cryptography.Argon2PasswordHasher(Of TUser).HashPassword
  nameWithType: Argon2PasswordHasher<TUser>.HashPassword
  nameWithType.vb: Argon2PasswordHasher(Of TUser).HashPassword
- uid: Application.Cryptography.Argon2PasswordHasher`1.VerifyHashedPassword(`0,System.String,System.String)
  name: VerifyHashedPassword(TUser, string, string)
  href: api/Application.Cryptography.Argon2PasswordHasher-1.html#Application_Cryptography_Argon2PasswordHasher_1_VerifyHashedPassword__0_System_String_System_String_
  commentId: M:Application.Cryptography.Argon2PasswordHasher`1.VerifyHashedPassword(`0,System.String,System.String)
  name.vb: VerifyHashedPassword(TUser, String, String)
  fullName: Application.Cryptography.Argon2PasswordHasher<TUser>.VerifyHashedPassword(TUser, string, string)
  fullName.vb: Application.Cryptography.Argon2PasswordHasher(Of TUser).VerifyHashedPassword(TUser, String, String)
  nameWithType: Argon2PasswordHasher<TUser>.VerifyHashedPassword(TUser, string, string)
  nameWithType.vb: Argon2PasswordHasher(Of TUser).VerifyHashedPassword(TUser, String, String)
- uid: Application.Cryptography.Argon2PasswordHasher`1.VerifyHashedPassword*
  name: VerifyHashedPassword
  href: api/Application.Cryptography.Argon2PasswordHasher-1.html#Application_Cryptography_Argon2PasswordHasher_1_VerifyHashedPassword_
  commentId: Overload:Application.Cryptography.Argon2PasswordHasher`1.VerifyHashedPassword
  isSpec: "True"
  fullName: Application.Cryptography.Argon2PasswordHasher<TUser>.VerifyHashedPassword
  fullName.vb: Application.Cryptography.Argon2PasswordHasher(Of TUser).VerifyHashedPassword
  nameWithType: Argon2PasswordHasher<TUser>.VerifyHashedPassword
  nameWithType.vb: Argon2PasswordHasher(Of TUser).VerifyHashedPassword
- uid: Application.Cryptography.Argon2SecretHasher
  name: Argon2SecretHasher
  href: api/Application.Cryptography.Argon2SecretHasher.html
  commentId: T:Application.Cryptography.Argon2SecretHasher
  fullName: Application.Cryptography.Argon2SecretHasher
  nameWithType: Argon2SecretHasher
- uid: Application.Cryptography.Argon2SecretHasher.Hash(System.String)
  name: Hash(string)
  href: api/Application.Cryptography.Argon2SecretHasher.html#Application_Cryptography_Argon2SecretHasher_Hash_System_String_
  commentId: M:Application.Cryptography.Argon2SecretHasher.Hash(System.String)
  name.vb: Hash(String)
  fullName: Application.Cryptography.Argon2SecretHasher.Hash(string)
  fullName.vb: Application.Cryptography.Argon2SecretHasher.Hash(String)
  nameWithType: Argon2SecretHasher.Hash(string)
  nameWithType.vb: Argon2SecretHasher.Hash(String)
- uid: Application.Cryptography.Argon2SecretHasher.Hash*
  name: Hash
  href: api/Application.Cryptography.Argon2SecretHasher.html#Application_Cryptography_Argon2SecretHasher_Hash_
  commentId: Overload:Application.Cryptography.Argon2SecretHasher.Hash
  isSpec: "True"
  fullName: Application.Cryptography.Argon2SecretHasher.Hash
  nameWithType: Argon2SecretHasher.Hash
- uid: Application.Cryptography.Argon2SecretHasher.Verify(System.String,System.String)
  name: Verify(string, string)
  href: api/Application.Cryptography.Argon2SecretHasher.html#Application_Cryptography_Argon2SecretHasher_Verify_System_String_System_String_
  commentId: M:Application.Cryptography.Argon2SecretHasher.Verify(System.String,System.String)
  name.vb: Verify(String, String)
  fullName: Application.Cryptography.Argon2SecretHasher.Verify(string, string)
  fullName.vb: Application.Cryptography.Argon2SecretHasher.Verify(String, String)
  nameWithType: Argon2SecretHasher.Verify(string, string)
  nameWithType.vb: Argon2SecretHasher.Verify(String, String)
- uid: Application.Cryptography.Argon2SecretHasher.Verify*
  name: Verify
  href: api/Application.Cryptography.Argon2SecretHasher.html#Application_Cryptography_Argon2SecretHasher_Verify_
  commentId: Overload:Application.Cryptography.Argon2SecretHasher.Verify
  isSpec: "True"
  fullName: Application.Cryptography.Argon2SecretHasher.Verify
  nameWithType: Argon2SecretHasher.Verify
- uid: Application.Cryptography.Shared
  name: Shared
  href: api/Application.Cryptography.Shared.html
  commentId: T:Application.Cryptography.Shared
  fullName: Application.Cryptography.Shared
  nameWithType: Shared
- uid: Application.Cryptography.Shared.Hash(System.String)
  name: Hash(string)
  href: api/Application.Cryptography.Shared.html#Application_Cryptography_Shared_Hash_System_String_
  commentId: M:Application.Cryptography.Shared.Hash(System.String)
  name.vb: Hash(String)
  fullName: Application.Cryptography.Shared.Hash(string)
  fullName.vb: Application.Cryptography.Shared.Hash(String)
  nameWithType: Shared.Hash(string)
  nameWithType.vb: Shared.Hash(String)
- uid: Application.Cryptography.Shared.Hash*
  name: Hash
  href: api/Application.Cryptography.Shared.html#Application_Cryptography_Shared_Hash_
  commentId: Overload:Application.Cryptography.Shared.Hash
  isSpec: "True"
  fullName: Application.Cryptography.Shared.Hash
  nameWithType: Shared.Hash
- uid: Application.Cryptography.Shared.Verify(System.String,System.String)
  name: Verify(string, string)
  href: api/Application.Cryptography.Shared.html#Application_Cryptography_Shared_Verify_System_String_System_String_
  commentId: M:Application.Cryptography.Shared.Verify(System.String,System.String)
  name.vb: Verify(String, String)
  fullName: Application.Cryptography.Shared.Verify(string, string)
  fullName.vb: Application.Cryptography.Shared.Verify(String, String)
  nameWithType: Shared.Verify(string, string)
  nameWithType.vb: Shared.Verify(String, String)
- uid: Application.Cryptography.Shared.Verify*
  name: Verify
  href: api/Application.Cryptography.Shared.html#Application_Cryptography_Shared_Verify_
  commentId: Overload:Application.Cryptography.Shared.Verify
  isSpec: "True"
  fullName: Application.Cryptography.Shared.Verify
  nameWithType: Shared.Verify
- uid: Application.DTOs
  name: Application.DTOs
  href: api/Application.DTOs.html
  commentId: N:Application.DTOs
  fullName: Application.DTOs
  nameWithType: Application.DTOs
- uid: Application.DTOs.ApplicationDto`1
  name: ApplicationDto<TRequest>
  href: api/Application.DTOs.ApplicationDto-1.html
  commentId: T:Application.DTOs.ApplicationDto`1
  name.vb: ApplicationDto(Of TRequest)
  fullName: Application.DTOs.ApplicationDto<TRequest>
  fullName.vb: Application.DTOs.ApplicationDto(Of TRequest)
  nameWithType: ApplicationDto<TRequest>
  nameWithType.vb: ApplicationDto(Of TRequest)
- uid: Application.DTOs.ApplicationDto`1.ClaimsPrincipal
  name: ClaimsPrincipal
  href: api/Application.DTOs.ApplicationDto-1.html#Application_DTOs_ApplicationDto_1_ClaimsPrincipal
  commentId: P:Application.DTOs.ApplicationDto`1.ClaimsPrincipal
  fullName: Application.DTOs.ApplicationDto<TRequest>.ClaimsPrincipal
  fullName.vb: Application.DTOs.ApplicationDto(Of TRequest).ClaimsPrincipal
  nameWithType: ApplicationDto<TRequest>.ClaimsPrincipal
  nameWithType.vb: ApplicationDto(Of TRequest).ClaimsPrincipal
- uid: Application.DTOs.ApplicationDto`1.ClaimsPrincipal*
  name: ClaimsPrincipal
  href: api/Application.DTOs.ApplicationDto-1.html#Application_DTOs_ApplicationDto_1_ClaimsPrincipal_
  commentId: Overload:Application.DTOs.ApplicationDto`1.ClaimsPrincipal
  isSpec: "True"
  fullName: Application.DTOs.ApplicationDto<TRequest>.ClaimsPrincipal
  fullName.vb: Application.DTOs.ApplicationDto(Of TRequest).ClaimsPrincipal
  nameWithType: ApplicationDto<TRequest>.ClaimsPrincipal
  nameWithType.vb: ApplicationDto(Of TRequest).ClaimsPrincipal
- uid: Application.DTOs.ApplicationDto`1.Request
  name: Request
  href: api/Application.DTOs.ApplicationDto-1.html#Application_DTOs_ApplicationDto_1_Request
  commentId: P:Application.DTOs.ApplicationDto`1.Request
  fullName: Application.DTOs.ApplicationDto<TRequest>.Request
  fullName.vb: Application.DTOs.ApplicationDto(Of TRequest).Request
  nameWithType: ApplicationDto<TRequest>.Request
  nameWithType.vb: ApplicationDto(Of TRequest).Request
- uid: Application.DTOs.ApplicationDto`1.Request*
  name: Request
  href: api/Application.DTOs.ApplicationDto-1.html#Application_DTOs_ApplicationDto_1_Request_
  commentId: Overload:Application.DTOs.ApplicationDto`1.Request
  isSpec: "True"
  fullName: Application.DTOs.ApplicationDto<TRequest>.Request
  fullName.vb: Application.DTOs.ApplicationDto(Of TRequest).Request
  nameWithType: ApplicationDto<TRequest>.Request
  nameWithType.vb: ApplicationDto(Of TRequest).Request
- uid: Application.Exceptions
  name: Application.Exceptions
  href: api/Application.Exceptions.html
  commentId: N:Application.Exceptions
  fullName: Application.Exceptions
  nameWithType: Application.Exceptions
- uid: Application.Exceptions.PurgeFailureException
  name: PurgeFailureException
  href: api/Application.Exceptions.PurgeFailureException.html
  commentId: T:Application.Exceptions.PurgeFailureException
  fullName: Application.Exceptions.PurgeFailureException
  nameWithType: PurgeFailureException
- uid: Application.Exceptions.PurgeFailureException.#ctor(System.String)
  name: PurgeFailureException(string?)
  href: api/Application.Exceptions.PurgeFailureException.html#Application_Exceptions_PurgeFailureException__ctor_System_String_
  commentId: M:Application.Exceptions.PurgeFailureException.#ctor(System.String)
  name.vb: New(String)
  fullName: Application.Exceptions.PurgeFailureException.PurgeFailureException(string?)
  fullName.vb: Application.Exceptions.PurgeFailureException.New(String)
  nameWithType: PurgeFailureException.PurgeFailureException(string?)
  nameWithType.vb: PurgeFailureException.New(String)
- uid: Application.Exceptions.PurgeFailureException.#ctor*
  name: PurgeFailureException
  href: api/Application.Exceptions.PurgeFailureException.html#Application_Exceptions_PurgeFailureException__ctor_
  commentId: Overload:Application.Exceptions.PurgeFailureException.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Application.Exceptions.PurgeFailureException.PurgeFailureException
  fullName.vb: Application.Exceptions.PurgeFailureException.New
  nameWithType: PurgeFailureException.PurgeFailureException
  nameWithType.vb: PurgeFailureException.New
- uid: Application.Extensions
  name: Application.Extensions
  href: api/Application.Extensions.html
  commentId: N:Application.Extensions
  fullName: Application.Extensions
  nameWithType: Application.Extensions
- uid: Application.Extensions.HealthCheckExtensions
  name: HealthCheckExtensions
  href: api/Application.Extensions.HealthCheckExtensions.html
  commentId: T:Application.Extensions.HealthCheckExtensions
  fullName: Application.Extensions.HealthCheckExtensions
  nameWithType: HealthCheckExtensions
- uid: Application.Extensions.HealthCheckExtensions.AddRedisHealthCheck(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  name: AddRedisHealthCheck(IServiceCollection)
  href: api/Application.Extensions.HealthCheckExtensions.html#Application_Extensions_HealthCheckExtensions_AddRedisHealthCheck_Microsoft_Extensions_DependencyInjection_IServiceCollection_
  commentId: M:Application.Extensions.HealthCheckExtensions.AddRedisHealthCheck(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  fullName: Application.Extensions.HealthCheckExtensions.AddRedisHealthCheck(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  nameWithType: HealthCheckExtensions.AddRedisHealthCheck(IServiceCollection)
- uid: Application.Extensions.HealthCheckExtensions.AddRedisHealthCheck*
  name: AddRedisHealthCheck
  href: api/Application.Extensions.HealthCheckExtensions.html#Application_Extensions_HealthCheckExtensions_AddRedisHealthCheck_
  commentId: Overload:Application.Extensions.HealthCheckExtensions.AddRedisHealthCheck
  isSpec: "True"
  fullName: Application.Extensions.HealthCheckExtensions.AddRedisHealthCheck
  nameWithType: HealthCheckExtensions.AddRedisHealthCheck
- uid: Application.Extensions.HttpContextExtensions
  name: HttpContextExtensions
  href: api/Application.Extensions.HttpContextExtensions.html
  commentId: T:Application.Extensions.HttpContextExtensions
  fullName: Application.Extensions.HttpContextExtensions
  nameWithType: HttpContextExtensions
- uid: Application.Extensions.HttpContextExtensions.GetIpAddress(Microsoft.AspNetCore.Http.HttpContext)
  name: GetIpAddress(HttpContext)
  href: api/Application.Extensions.HttpContextExtensions.html#Application_Extensions_HttpContextExtensions_GetIpAddress_Microsoft_AspNetCore_Http_HttpContext_
  commentId: M:Application.Extensions.HttpContextExtensions.GetIpAddress(Microsoft.AspNetCore.Http.HttpContext)
  fullName: Application.Extensions.HttpContextExtensions.GetIpAddress(Microsoft.AspNetCore.Http.HttpContext)
  nameWithType: HttpContextExtensions.GetIpAddress(HttpContext)
- uid: Application.Extensions.HttpContextExtensions.GetIpAddress*
  name: GetIpAddress
  href: api/Application.Extensions.HttpContextExtensions.html#Application_Extensions_HttpContextExtensions_GetIpAddress_
  commentId: Overload:Application.Extensions.HttpContextExtensions.GetIpAddress
  isSpec: "True"
  fullName: Application.Extensions.HttpContextExtensions.GetIpAddress
  nameWithType: HttpContextExtensions.GetIpAddress
- uid: Application.Extensions.ServiceCollectionExtensions
  name: ServiceCollectionExtensions
  href: api/Application.Extensions.ServiceCollectionExtensions.html
  commentId: T:Application.Extensions.ServiceCollectionExtensions
  fullName: Application.Extensions.ServiceCollectionExtensions
  nameWithType: ServiceCollectionExtensions
- uid: Application.Extensions.ServiceCollectionExtensions.AddBearerAuthentication(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  name: AddBearerAuthentication(IServiceCollection)
  href: api/Application.Extensions.ServiceCollectionExtensions.html#Application_Extensions_ServiceCollectionExtensions_AddBearerAuthentication_Microsoft_Extensions_DependencyInjection_IServiceCollection_
  commentId: M:Application.Extensions.ServiceCollectionExtensions.AddBearerAuthentication(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  fullName: Application.Extensions.ServiceCollectionExtensions.AddBearerAuthentication(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  nameWithType: ServiceCollectionExtensions.AddBearerAuthentication(IServiceCollection)
- uid: Application.Extensions.ServiceCollectionExtensions.AddBearerAuthentication*
  name: AddBearerAuthentication
  href: api/Application.Extensions.ServiceCollectionExtensions.html#Application_Extensions_ServiceCollectionExtensions_AddBearerAuthentication_
  commentId: Overload:Application.Extensions.ServiceCollectionExtensions.AddBearerAuthentication
  isSpec: "True"
  fullName: Application.Extensions.ServiceCollectionExtensions.AddBearerAuthentication
  nameWithType: ServiceCollectionExtensions.AddBearerAuthentication
- uid: Application.Extensions.ServiceCollectionExtensions.AddCrossOrigin(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  name: AddCrossOrigin(IServiceCollection)
  href: api/Application.Extensions.ServiceCollectionExtensions.html#Application_Extensions_ServiceCollectionExtensions_AddCrossOrigin_Microsoft_Extensions_DependencyInjection_IServiceCollection_
  commentId: M:Application.Extensions.ServiceCollectionExtensions.AddCrossOrigin(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  fullName: Application.Extensions.ServiceCollectionExtensions.AddCrossOrigin(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  nameWithType: ServiceCollectionExtensions.AddCrossOrigin(IServiceCollection)
- uid: Application.Extensions.ServiceCollectionExtensions.AddCrossOrigin*
  name: AddCrossOrigin
  href: api/Application.Extensions.ServiceCollectionExtensions.html#Application_Extensions_ServiceCollectionExtensions_AddCrossOrigin_
  commentId: Overload:Application.Extensions.ServiceCollectionExtensions.AddCrossOrigin
  isSpec: "True"
  fullName: Application.Extensions.ServiceCollectionExtensions.AddCrossOrigin
  nameWithType: ServiceCollectionExtensions.AddCrossOrigin
- uid: Application.Extensions.ServiceCollectionExtensions.AddCustomSession(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  name: AddCustomSession(IServiceCollection)
  href: api/Application.Extensions.ServiceCollectionExtensions.html#Application_Extensions_ServiceCollectionExtensions_AddCustomSession_Microsoft_Extensions_DependencyInjection_IServiceCollection_
  commentId: M:Application.Extensions.ServiceCollectionExtensions.AddCustomSession(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  fullName: Application.Extensions.ServiceCollectionExtensions.AddCustomSession(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  nameWithType: ServiceCollectionExtensions.AddCustomSession(IServiceCollection)
- uid: Application.Extensions.ServiceCollectionExtensions.AddCustomSession*
  name: AddCustomSession
  href: api/Application.Extensions.ServiceCollectionExtensions.html#Application_Extensions_ServiceCollectionExtensions_AddCustomSession_
  commentId: Overload:Application.Extensions.ServiceCollectionExtensions.AddCustomSession
  isSpec: "True"
  fullName: Application.Extensions.ServiceCollectionExtensions.AddCustomSession
  nameWithType: ServiceCollectionExtensions.AddCustomSession
- uid: Application.Extensions.ServiceCollectionExtensions.AddIdentity(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  name: AddIdentity(IServiceCollection)
  href: api/Application.Extensions.ServiceCollectionExtensions.html#Application_Extensions_ServiceCollectionExtensions_AddIdentity_Microsoft_Extensions_DependencyInjection_IServiceCollection_
  commentId: M:Application.Extensions.ServiceCollectionExtensions.AddIdentity(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  fullName: Application.Extensions.ServiceCollectionExtensions.AddIdentity(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  nameWithType: ServiceCollectionExtensions.AddIdentity(IServiceCollection)
- uid: Application.Extensions.ServiceCollectionExtensions.AddIdentity*
  name: AddIdentity
  href: api/Application.Extensions.ServiceCollectionExtensions.html#Application_Extensions_ServiceCollectionExtensions_AddIdentity_
  commentId: Overload:Application.Extensions.ServiceCollectionExtensions.AddIdentity
  isSpec: "True"
  fullName: Application.Extensions.ServiceCollectionExtensions.AddIdentity
  nameWithType: ServiceCollectionExtensions.AddIdentity
- uid: Application.Extensions.ServiceCollectionExtensions.AddPersistence(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  name: AddPersistence(IServiceCollection)
  href: api/Application.Extensions.ServiceCollectionExtensions.html#Application_Extensions_ServiceCollectionExtensions_AddPersistence_Microsoft_Extensions_DependencyInjection_IServiceCollection_
  commentId: M:Application.Extensions.ServiceCollectionExtensions.AddPersistence(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  fullName: Application.Extensions.ServiceCollectionExtensions.AddPersistence(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  nameWithType: ServiceCollectionExtensions.AddPersistence(IServiceCollection)
- uid: Application.Extensions.ServiceCollectionExtensions.AddPersistence*
  name: AddPersistence
  href: api/Application.Extensions.ServiceCollectionExtensions.html#Application_Extensions_ServiceCollectionExtensions_AddPersistence_
  commentId: Overload:Application.Extensions.ServiceCollectionExtensions.AddPersistence
  isSpec: "True"
  fullName: Application.Extensions.ServiceCollectionExtensions.AddPersistence
  nameWithType: ServiceCollectionExtensions.AddPersistence
- uid: Application.Extensions.ServiceCollectionExtensions.AddPublisherMessaging(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  name: AddPublisherMessaging(IServiceCollection)
  href: api/Application.Extensions.ServiceCollectionExtensions.html#Application_Extensions_ServiceCollectionExtensions_AddPublisherMessaging_Microsoft_Extensions_DependencyInjection_IServiceCollection_
  commentId: M:Application.Extensions.ServiceCollectionExtensions.AddPublisherMessaging(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  fullName: Application.Extensions.ServiceCollectionExtensions.AddPublisherMessaging(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  nameWithType: ServiceCollectionExtensions.AddPublisherMessaging(IServiceCollection)
- uid: Application.Extensions.ServiceCollectionExtensions.AddPublisherMessaging*
  name: AddPublisherMessaging
  href: api/Application.Extensions.ServiceCollectionExtensions.html#Application_Extensions_ServiceCollectionExtensions_AddPublisherMessaging_
  commentId: Overload:Application.Extensions.ServiceCollectionExtensions.AddPublisherMessaging
  isSpec: "True"
  fullName: Application.Extensions.ServiceCollectionExtensions.AddPublisherMessaging
  nameWithType: ServiceCollectionExtensions.AddPublisherMessaging
- uid: Application.Extensions.ServiceCollectionExtensions.AddSessionCache(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  name: AddSessionCache(IServiceCollection)
  href: api/Application.Extensions.ServiceCollectionExtensions.html#Application_Extensions_ServiceCollectionExtensions_AddSessionCache_Microsoft_Extensions_DependencyInjection_IServiceCollection_
  commentId: M:Application.Extensions.ServiceCollectionExtensions.AddSessionCache(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  fullName: Application.Extensions.ServiceCollectionExtensions.AddSessionCache(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  nameWithType: ServiceCollectionExtensions.AddSessionCache(IServiceCollection)
- uid: Application.Extensions.ServiceCollectionExtensions.AddSessionCache*
  name: AddSessionCache
  href: api/Application.Extensions.ServiceCollectionExtensions.html#Application_Extensions_ServiceCollectionExtensions_AddSessionCache_
  commentId: Overload:Application.Extensions.ServiceCollectionExtensions.AddSessionCache
  isSpec: "True"
  fullName: Application.Extensions.ServiceCollectionExtensions.AddSessionCache
  nameWithType: ServiceCollectionExtensions.AddSessionCache
- uid: Application.Extensions.ServiceCollectionExtensions.AddSwaggerGen(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.String)
  name: AddSwaggerGen(IServiceCollection, string)
  href: api/Application.Extensions.ServiceCollectionExtensions.html#Application_Extensions_ServiceCollectionExtensions_AddSwaggerGen_Microsoft_Extensions_DependencyInjection_IServiceCollection_System_String_
  commentId: M:Application.Extensions.ServiceCollectionExtensions.AddSwaggerGen(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.String)
  name.vb: AddSwaggerGen(IServiceCollection, String)
  fullName: Application.Extensions.ServiceCollectionExtensions.AddSwaggerGen(Microsoft.Extensions.DependencyInjection.IServiceCollection, string)
  fullName.vb: Application.Extensions.ServiceCollectionExtensions.AddSwaggerGen(Microsoft.Extensions.DependencyInjection.IServiceCollection, String)
  nameWithType: ServiceCollectionExtensions.AddSwaggerGen(IServiceCollection, string)
  nameWithType.vb: ServiceCollectionExtensions.AddSwaggerGen(IServiceCollection, String)
- uid: Application.Extensions.ServiceCollectionExtensions.AddSwaggerGen*
  name: AddSwaggerGen
  href: api/Application.Extensions.ServiceCollectionExtensions.html#Application_Extensions_ServiceCollectionExtensions_AddSwaggerGen_
  commentId: Overload:Application.Extensions.ServiceCollectionExtensions.AddSwaggerGen
  isSpec: "True"
  fullName: Application.Extensions.ServiceCollectionExtensions.AddSwaggerGen
  nameWithType: ServiceCollectionExtensions.AddSwaggerGen
- uid: Application.Extensions.ValidationExtensions
  name: ValidationExtensions
  href: api/Application.Extensions.ValidationExtensions.html
  commentId: T:Application.Extensions.ValidationExtensions
  fullName: Application.Extensions.ValidationExtensions
  nameWithType: ValidationExtensions
- uid: Application.Extensions.ValidationExtensions.BeAValidGrantType(System.String)
  name: BeAValidGrantType(string)
  href: api/Application.Extensions.ValidationExtensions.html#Application_Extensions_ValidationExtensions_BeAValidGrantType_System_String_
  commentId: M:Application.Extensions.ValidationExtensions.BeAValidGrantType(System.String)
  name.vb: BeAValidGrantType(String)
  fullName: Application.Extensions.ValidationExtensions.BeAValidGrantType(string)
  fullName.vb: Application.Extensions.ValidationExtensions.BeAValidGrantType(String)
  nameWithType: ValidationExtensions.BeAValidGrantType(string)
  nameWithType.vb: ValidationExtensions.BeAValidGrantType(String)
- uid: Application.Extensions.ValidationExtensions.BeAValidGrantType*
  name: BeAValidGrantType
  href: api/Application.Extensions.ValidationExtensions.html#Application_Extensions_ValidationExtensions_BeAValidGrantType_
  commentId: Overload:Application.Extensions.ValidationExtensions.BeAValidGrantType
  isSpec: "True"
  fullName: Application.Extensions.ValidationExtensions.BeAValidGrantType
  nameWithType: ValidationExtensions.BeAValidGrantType
- uid: Application.Extensions.ValidationExtensions.BeAValidGuid(System.String)
  name: BeAValidGuid(string)
  href: api/Application.Extensions.ValidationExtensions.html#Application_Extensions_ValidationExtensions_BeAValidGuid_System_String_
  commentId: M:Application.Extensions.ValidationExtensions.BeAValidGuid(System.String)
  name.vb: BeAValidGuid(String)
  fullName: Application.Extensions.ValidationExtensions.BeAValidGuid(string)
  fullName.vb: Application.Extensions.ValidationExtensions.BeAValidGuid(String)
  nameWithType: ValidationExtensions.BeAValidGuid(string)
  nameWithType.vb: ValidationExtensions.BeAValidGuid(String)
- uid: Application.Extensions.ValidationExtensions.BeAValidGuid*
  name: BeAValidGuid
  href: api/Application.Extensions.ValidationExtensions.html#Application_Extensions_ValidationExtensions_BeAValidGuid_
  commentId: Overload:Application.Extensions.ValidationExtensions.BeAValidGuid
  isSpec: "True"
  fullName: Application.Extensions.ValidationExtensions.BeAValidGuid
  nameWithType: ValidationExtensions.BeAValidGuid
- uid: Application.Extensions.ValidationExtensions.BeAValidUri(System.String)
  name: BeAValidUri(string)
  href: api/Application.Extensions.ValidationExtensions.html#Application_Extensions_ValidationExtensions_BeAValidUri_System_String_
  commentId: M:Application.Extensions.ValidationExtensions.BeAValidUri(System.String)
  name.vb: BeAValidUri(String)
  fullName: Application.Extensions.ValidationExtensions.BeAValidUri(string)
  fullName.vb: Application.Extensions.ValidationExtensions.BeAValidUri(String)
  nameWithType: ValidationExtensions.BeAValidUri(string)
  nameWithType.vb: ValidationExtensions.BeAValidUri(String)
- uid: Application.Extensions.ValidationExtensions.BeAValidUri*
  name: BeAValidUri
  href: api/Application.Extensions.ValidationExtensions.html#Application_Extensions_ValidationExtensions_BeAValidUri_
  commentId: Overload:Application.Extensions.ValidationExtensions.BeAValidUri
  isSpec: "True"
  fullName: Application.Extensions.ValidationExtensions.BeAValidUri
  nameWithType: ValidationExtensions.BeAValidUri
- uid: Application.Extensions.WebApplicationExtensions
  name: WebApplicationExtensions
  href: api/Application.Extensions.WebApplicationExtensions.html
  commentId: T:Application.Extensions.WebApplicationExtensions
  fullName: Application.Extensions.WebApplicationExtensions
  nameWithType: WebApplicationExtensions
- uid: Application.Extensions.WebApplicationExtensions.UseSeedDataAsync(Microsoft.AspNetCore.Builder.WebApplication)
  name: UseSeedDataAsync(WebApplication)
  href: api/Application.Extensions.WebApplicationExtensions.html#Application_Extensions_WebApplicationExtensions_UseSeedDataAsync_Microsoft_AspNetCore_Builder_WebApplication_
  commentId: M:Application.Extensions.WebApplicationExtensions.UseSeedDataAsync(Microsoft.AspNetCore.Builder.WebApplication)
  fullName: Application.Extensions.WebApplicationExtensions.UseSeedDataAsync(Microsoft.AspNetCore.Builder.WebApplication)
  nameWithType: WebApplicationExtensions.UseSeedDataAsync(WebApplication)
- uid: Application.Extensions.WebApplicationExtensions.UseSeedDataAsync*
  name: UseSeedDataAsync
  href: api/Application.Extensions.WebApplicationExtensions.html#Application_Extensions_WebApplicationExtensions_UseSeedDataAsync_
  commentId: Overload:Application.Extensions.WebApplicationExtensions.UseSeedDataAsync
  isSpec: "True"
  fullName: Application.Extensions.WebApplicationExtensions.UseSeedDataAsync
  nameWithType: WebApplicationExtensions.UseSeedDataAsync
- uid: Application.Extensions.WebApplicationExtensions.UseSeedTestDataAsync(Microsoft.AspNetCore.Builder.WebApplication)
  name: UseSeedTestDataAsync(WebApplication)
  href: api/Application.Extensions.WebApplicationExtensions.html#Application_Extensions_WebApplicationExtensions_UseSeedTestDataAsync_Microsoft_AspNetCore_Builder_WebApplication_
  commentId: M:Application.Extensions.WebApplicationExtensions.UseSeedTestDataAsync(Microsoft.AspNetCore.Builder.WebApplication)
  fullName: Application.Extensions.WebApplicationExtensions.UseSeedTestDataAsync(Microsoft.AspNetCore.Builder.WebApplication)
  nameWithType: WebApplicationExtensions.UseSeedTestDataAsync(WebApplication)
- uid: Application.Extensions.WebApplicationExtensions.UseSeedTestDataAsync*
  name: UseSeedTestDataAsync
  href: api/Application.Extensions.WebApplicationExtensions.html#Application_Extensions_WebApplicationExtensions_UseSeedTestDataAsync_
  commentId: Overload:Application.Extensions.WebApplicationExtensions.UseSeedTestDataAsync
  isSpec: "True"
  fullName: Application.Extensions.WebApplicationExtensions.UseSeedTestDataAsync
  nameWithType: WebApplicationExtensions.UseSeedTestDataAsync
- uid: Application.Factories
  name: Application.Factories
  href: api/Application.Factories.html
  commentId: N:Application.Factories
  fullName: Application.Factories
  nameWithType: Application.Factories
- uid: Application.Factories.IdentityErrorFactory
  name: IdentityErrorFactory
  href: api/Application.Factories.IdentityErrorFactory.html
  commentId: T:Application.Factories.IdentityErrorFactory
  fullName: Application.Factories.IdentityErrorFactory
  nameWithType: IdentityErrorFactory
- uid: Application.Factories.IdentityErrorFactory.ApplicationNotFound
  name: ApplicationNotFound()
  href: api/Application.Factories.IdentityErrorFactory.html#Application_Factories_IdentityErrorFactory_ApplicationNotFound
  commentId: M:Application.Factories.IdentityErrorFactory.ApplicationNotFound
  fullName: Application.Factories.IdentityErrorFactory.ApplicationNotFound()
  nameWithType: IdentityErrorFactory.ApplicationNotFound()
- uid: Application.Factories.IdentityErrorFactory.ApplicationNotFound*
  name: ApplicationNotFound
  href: api/Application.Factories.IdentityErrorFactory.html#Application_Factories_IdentityErrorFactory_ApplicationNotFound_
  commentId: Overload:Application.Factories.IdentityErrorFactory.ApplicationNotFound
  isSpec: "True"
  fullName: Application.Factories.IdentityErrorFactory.ApplicationNotFound
  nameWithType: IdentityErrorFactory.ApplicationNotFound
- uid: Application.Factories.IdentityErrorFactory.EmailNotFound
  name: EmailNotFound()
  href: api/Application.Factories.IdentityErrorFactory.html#Application_Factories_IdentityErrorFactory_EmailNotFound
  commentId: M:Application.Factories.IdentityErrorFactory.EmailNotFound
  fullName: Application.Factories.IdentityErrorFactory.EmailNotFound()
  nameWithType: IdentityErrorFactory.EmailNotFound()
- uid: Application.Factories.IdentityErrorFactory.EmailNotFound*
  name: EmailNotFound
  href: api/Application.Factories.IdentityErrorFactory.html#Application_Factories_IdentityErrorFactory_EmailNotFound_
  commentId: Overload:Application.Factories.IdentityErrorFactory.EmailNotFound
  isSpec: "True"
  fullName: Application.Factories.IdentityErrorFactory.EmailNotFound
  nameWithType: IdentityErrorFactory.EmailNotFound
- uid: Application.Factories.IdentityErrorFactory.ExceptionOccurred(System.Exception)
  name: ExceptionOccurred(Exception)
  href: api/Application.Factories.IdentityErrorFactory.html#Application_Factories_IdentityErrorFactory_ExceptionOccurred_System_Exception_
  commentId: M:Application.Factories.IdentityErrorFactory.ExceptionOccurred(System.Exception)
  fullName: Application.Factories.IdentityErrorFactory.ExceptionOccurred(System.Exception)
  nameWithType: IdentityErrorFactory.ExceptionOccurred(Exception)
- uid: Application.Factories.IdentityErrorFactory.ExceptionOccurred*
  name: ExceptionOccurred
  href: api/Application.Factories.IdentityErrorFactory.html#Application_Factories_IdentityErrorFactory_ExceptionOccurred_
  commentId: Overload:Application.Factories.IdentityErrorFactory.ExceptionOccurred
  isSpec: "True"
  fullName: Application.Factories.IdentityErrorFactory.ExceptionOccurred
  nameWithType: IdentityErrorFactory.ExceptionOccurred
- uid: Application.Factories.IdentityErrorFactory.UserNotFound
  name: UserNotFound()
  href: api/Application.Factories.IdentityErrorFactory.html#Application_Factories_IdentityErrorFactory_UserNotFound
  commentId: M:Application.Factories.IdentityErrorFactory.UserNotFound
  fullName: Application.Factories.IdentityErrorFactory.UserNotFound()
  nameWithType: IdentityErrorFactory.UserNotFound()
- uid: Application.Factories.IdentityErrorFactory.UserNotFound*
  name: UserNotFound
  href: api/Application.Factories.IdentityErrorFactory.html#Application_Factories_IdentityErrorFactory_UserNotFound_
  commentId: Overload:Application.Factories.IdentityErrorFactory.UserNotFound
  isSpec: "True"
  fullName: Application.Factories.IdentityErrorFactory.UserNotFound
  nameWithType: IdentityErrorFactory.UserNotFound
- uid: Application.Mappers
  name: Application.Mappers
  href: api/Application.Mappers.html
  commentId: N:Application.Mappers
  fullName: Application.Mappers
  nameWithType: Application.Mappers
- uid: Application.Mappers.ClientApplicationMapper
  name: ClientApplicationMapper
  href: api/Application.Mappers.ClientApplicationMapper.html
  commentId: T:Application.Mappers.ClientApplicationMapper
  fullName: Application.Mappers.ClientApplicationMapper
  nameWithType: ClientApplicationMapper
- uid: Application.Mappers.ClientApplicationMapper.ToResponse(Domain.Aggregates.Identity.ClientApplication)
  name: ToResponse(ClientApplication)
  href: api/Application.Mappers.ClientApplicationMapper.html#Application_Mappers_ClientApplicationMapper_ToResponse_Domain_Aggregates_Identity_ClientApplication_
  commentId: M:Application.Mappers.ClientApplicationMapper.ToResponse(Domain.Aggregates.Identity.ClientApplication)
  fullName: Application.Mappers.ClientApplicationMapper.ToResponse(Domain.Aggregates.Identity.ClientApplication)
  nameWithType: ClientApplicationMapper.ToResponse(ClientApplication)
- uid: Application.Mappers.ClientApplicationMapper.ToResponse*
  name: ToResponse
  href: api/Application.Mappers.ClientApplicationMapper.html#Application_Mappers_ClientApplicationMapper_ToResponse_
  commentId: Overload:Application.Mappers.ClientApplicationMapper.ToResponse
  isSpec: "True"
  fullName: Application.Mappers.ClientApplicationMapper.ToResponse
  nameWithType: ClientApplicationMapper.ToResponse
- uid: Application.Mappers.GetAllUsersMapper
  name: GetAllUsersMapper
  href: api/Application.Mappers.GetAllUsersMapper.html
  commentId: T:Application.Mappers.GetAllUsersMapper
  fullName: Application.Mappers.GetAllUsersMapper
  nameWithType: GetAllUsersMapper
- uid: Application.Mappers.GetAllUsersMapper.ToResponse(System.Collections.Generic.IList{Domain.Aggregates.Identity.User})
  name: ToResponse(IList<User>)
  href: api/Application.Mappers.GetAllUsersMapper.html#Application_Mappers_GetAllUsersMapper_ToResponse_System_Collections_Generic_IList_Domain_Aggregates_Identity_User__
  commentId: M:Application.Mappers.GetAllUsersMapper.ToResponse(System.Collections.Generic.IList{Domain.Aggregates.Identity.User})
  name.vb: ToResponse(IList(Of User))
  fullName: Application.Mappers.GetAllUsersMapper.ToResponse(System.Collections.Generic.IList<Domain.Aggregates.Identity.User>)
  fullName.vb: Application.Mappers.GetAllUsersMapper.ToResponse(System.Collections.Generic.IList(Of Domain.Aggregates.Identity.User))
  nameWithType: GetAllUsersMapper.ToResponse(IList<User>)
  nameWithType.vb: GetAllUsersMapper.ToResponse(IList(Of User))
- uid: Application.Mappers.GetAllUsersMapper.ToResponse*
  name: ToResponse
  href: api/Application.Mappers.GetAllUsersMapper.html#Application_Mappers_GetAllUsersMapper_ToResponse_
  commentId: Overload:Application.Mappers.GetAllUsersMapper.ToResponse
  isSpec: "True"
  fullName: Application.Mappers.GetAllUsersMapper.ToResponse
  nameWithType: GetAllUsersMapper.ToResponse
- uid: Application.Mappers.ReadAllActivitiesMapper
  name: ReadAllActivitiesMapper
  href: api/Application.Mappers.ReadAllActivitiesMapper.html
  commentId: T:Application.Mappers.ReadAllActivitiesMapper
  fullName: Application.Mappers.ReadAllActivitiesMapper
  nameWithType: ReadAllActivitiesMapper
- uid: Application.Mappers.ReadAllActivitiesMapper.ToResponse(System.Collections.Immutable.ImmutableList{Domain.Aggregates.Identity.Activity})
  name: ToResponse(ImmutableList<Activity>)
  href: api/Application.Mappers.ReadAllActivitiesMapper.html#Application_Mappers_ReadAllActivitiesMapper_ToResponse_System_Collections_Immutable_ImmutableList_Domain_Aggregates_Identity_Activity__
  commentId: M:Application.Mappers.ReadAllActivitiesMapper.ToResponse(System.Collections.Immutable.ImmutableList{Domain.Aggregates.Identity.Activity})
  name.vb: ToResponse(ImmutableList(Of Activity))
  fullName: Application.Mappers.ReadAllActivitiesMapper.ToResponse(System.Collections.Immutable.ImmutableList<Domain.Aggregates.Identity.Activity>)
  fullName.vb: Application.Mappers.ReadAllActivitiesMapper.ToResponse(System.Collections.Immutable.ImmutableList(Of Domain.Aggregates.Identity.Activity))
  nameWithType: ReadAllActivitiesMapper.ToResponse(ImmutableList<Activity>)
  nameWithType.vb: ReadAllActivitiesMapper.ToResponse(ImmutableList(Of Activity))
- uid: Application.Mappers.ReadAllActivitiesMapper.ToResponse*
  name: ToResponse
  href: api/Application.Mappers.ReadAllActivitiesMapper.html#Application_Mappers_ReadAllActivitiesMapper_ToResponse_
  commentId: Overload:Application.Mappers.ReadAllActivitiesMapper.ToResponse
  isSpec: "True"
  fullName: Application.Mappers.ReadAllActivitiesMapper.ToResponse
  nameWithType: ReadAllActivitiesMapper.ToResponse
- uid: Application.Providers
  name: Application.Providers
  href: api/Application.Providers.html
  commentId: N:Application.Providers
  fullName: Application.Providers
  nameWithType: Application.Providers
- uid: Application.Providers.JsonWebTokenProvider
  name: JsonWebTokenProvider
  href: api/Application.Providers.JsonWebTokenProvider.html
  commentId: T:Application.Providers.JsonWebTokenProvider
  fullName: Application.Providers.JsonWebTokenProvider
  nameWithType: JsonWebTokenProvider
- uid: Application.Providers.JsonWebTokenProvider.#ctor(System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler)
  name: JsonWebTokenProvider(JwtSecurityTokenHandler)
  href: api/Application.Providers.JsonWebTokenProvider.html#Application_Providers_JsonWebTokenProvider__ctor_System_IdentityModel_Tokens_Jwt_JwtSecurityTokenHandler_
  commentId: M:Application.Providers.JsonWebTokenProvider.#ctor(System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler)
  name.vb: New(JwtSecurityTokenHandler)
  fullName: Application.Providers.JsonWebTokenProvider.JsonWebTokenProvider(System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler)
  fullName.vb: Application.Providers.JsonWebTokenProvider.New(System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler)
  nameWithType: JsonWebTokenProvider.JsonWebTokenProvider(JwtSecurityTokenHandler)
  nameWithType.vb: JsonWebTokenProvider.New(JwtSecurityTokenHandler)
- uid: Application.Providers.JsonWebTokenProvider.#ctor*
  name: JsonWebTokenProvider
  href: api/Application.Providers.JsonWebTokenProvider.html#Application_Providers_JsonWebTokenProvider__ctor_
  commentId: Overload:Application.Providers.JsonWebTokenProvider.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Application.Providers.JsonWebTokenProvider.JsonWebTokenProvider
  fullName.vb: Application.Providers.JsonWebTokenProvider.New
  nameWithType: JsonWebTokenProvider.JsonWebTokenProvider
  nameWithType.vb: JsonWebTokenProvider.New
- uid: Application.Providers.JsonWebTokenProvider.TryCreateRefreshTokenAsync(System.String,System.String,System.String,System.String,System.Int32,System.String,System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.String})
  name: TryCreateRefreshTokenAsync(string, string, string, string, int, string, IList<string>, IList<string>)
  href: api/Application.Providers.JsonWebTokenProvider.html#Application_Providers_JsonWebTokenProvider_TryCreateRefreshTokenAsync_System_String_System_String_System_String_System_String_System_Int32_System_String_System_Collections_Generic_IList_System_String__System_Collections_Generic_IList_System_String__
  commentId: M:Application.Providers.JsonWebTokenProvider.TryCreateRefreshTokenAsync(System.String,System.String,System.String,System.String,System.Int32,System.String,System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.String})
  name.vb: TryCreateRefreshTokenAsync(String, String, String, String, Integer, String, IList(Of String), IList(Of String))
  fullName: Application.Providers.JsonWebTokenProvider.TryCreateRefreshTokenAsync(string, string, string, string, int, string, System.Collections.Generic.IList<string>, System.Collections.Generic.IList<string>)
  fullName.vb: Application.Providers.JsonWebTokenProvider.TryCreateRefreshTokenAsync(String, String, String, String, Integer, String, System.Collections.Generic.IList(Of String), System.Collections.Generic.IList(Of String))
  nameWithType: JsonWebTokenProvider.TryCreateRefreshTokenAsync(string, string, string, string, int, string, IList<string>, IList<string>)
  nameWithType.vb: JsonWebTokenProvider.TryCreateRefreshTokenAsync(String, String, String, String, Integer, String, IList(Of String), IList(Of String))
- uid: Application.Providers.JsonWebTokenProvider.TryCreateRefreshTokenAsync*
  name: TryCreateRefreshTokenAsync
  href: api/Application.Providers.JsonWebTokenProvider.html#Application_Providers_JsonWebTokenProvider_TryCreateRefreshTokenAsync_
  commentId: Overload:Application.Providers.JsonWebTokenProvider.TryCreateRefreshTokenAsync
  isSpec: "True"
  fullName: Application.Providers.JsonWebTokenProvider.TryCreateRefreshTokenAsync
  nameWithType: JsonWebTokenProvider.TryCreateRefreshTokenAsync
- uid: Application.Providers.JsonWebTokenProvider.TryCreateTokenAsync(System.String,System.String,System.String,System.String,System.Int32,System.String,System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.String})
  name: TryCreateTokenAsync(string, string, string, string, int, string, IList<string>, IList<string>)
  href: api/Application.Providers.JsonWebTokenProvider.html#Application_Providers_JsonWebTokenProvider_TryCreateTokenAsync_System_String_System_String_System_String_System_String_System_Int32_System_String_System_Collections_Generic_IList_System_String__System_Collections_Generic_IList_System_String__
  commentId: M:Application.Providers.JsonWebTokenProvider.TryCreateTokenAsync(System.String,System.String,System.String,System.String,System.Int32,System.String,System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.String})
  name.vb: TryCreateTokenAsync(String, String, String, String, Integer, String, IList(Of String), IList(Of String))
  fullName: Application.Providers.JsonWebTokenProvider.TryCreateTokenAsync(string, string, string, string, int, string, System.Collections.Generic.IList<string>, System.Collections.Generic.IList<string>)
  fullName.vb: Application.Providers.JsonWebTokenProvider.TryCreateTokenAsync(String, String, String, String, Integer, String, System.Collections.Generic.IList(Of String), System.Collections.Generic.IList(Of String))
  nameWithType: JsonWebTokenProvider.TryCreateTokenAsync(string, string, string, string, int, string, IList<string>, IList<string>)
  nameWithType.vb: JsonWebTokenProvider.TryCreateTokenAsync(String, String, String, String, Integer, String, IList(Of String), IList(Of String))
- uid: Application.Providers.JsonWebTokenProvider.TryCreateTokenAsync*
  name: TryCreateTokenAsync
  href: api/Application.Providers.JsonWebTokenProvider.html#Application_Providers_JsonWebTokenProvider_TryCreateTokenAsync_
  commentId: Overload:Application.Providers.JsonWebTokenProvider.TryCreateTokenAsync
  isSpec: "True"
  fullName: Application.Providers.JsonWebTokenProvider.TryCreateTokenAsync
  nameWithType: JsonWebTokenProvider.TryCreateTokenAsync
- uid: Application.Providers.JsonWebTokenProvider.TryValidateTokenAsync(System.String,System.String,System.String,System.String)
  name: TryValidateTokenAsync(string, string, string, string)
  href: api/Application.Providers.JsonWebTokenProvider.html#Application_Providers_JsonWebTokenProvider_TryValidateTokenAsync_System_String_System_String_System_String_System_String_
  commentId: M:Application.Providers.JsonWebTokenProvider.TryValidateTokenAsync(System.String,System.String,System.String,System.String)
  name.vb: TryValidateTokenAsync(String, String, String, String)
  fullName: Application.Providers.JsonWebTokenProvider.TryValidateTokenAsync(string, string, string, string)
  fullName.vb: Application.Providers.JsonWebTokenProvider.TryValidateTokenAsync(String, String, String, String)
  nameWithType: JsonWebTokenProvider.TryValidateTokenAsync(string, string, string, string)
  nameWithType.vb: JsonWebTokenProvider.TryValidateTokenAsync(String, String, String, String)
- uid: Application.Providers.JsonWebTokenProvider.TryValidateTokenAsync*
  name: TryValidateTokenAsync
  href: api/Application.Providers.JsonWebTokenProvider.html#Application_Providers_JsonWebTokenProvider_TryValidateTokenAsync_
  commentId: Overload:Application.Providers.JsonWebTokenProvider.TryValidateTokenAsync
  isSpec: "True"
  fullName: Application.Providers.JsonWebTokenProvider.TryValidateTokenAsync
  nameWithType: JsonWebTokenProvider.TryValidateTokenAsync
- uid: Application.Providers.MultiFactorTotpProvider
  name: MultiFactorTotpProvider
  href: api/Application.Providers.MultiFactorTotpProvider.html
  commentId: T:Application.Providers.MultiFactorTotpProvider
  fullName: Application.Providers.MultiFactorTotpProvider
  nameWithType: MultiFactorTotpProvider
- uid: Application.Providers.MultiFactorTotpProvider.#ctor(System.IServiceProvider)
  name: MultiFactorTotpProvider(IServiceProvider)
  href: api/Application.Providers.MultiFactorTotpProvider.html#Application_Providers_MultiFactorTotpProvider__ctor_System_IServiceProvider_
  commentId: M:Application.Providers.MultiFactorTotpProvider.#ctor(System.IServiceProvider)
  name.vb: New(IServiceProvider)
  fullName: Application.Providers.MultiFactorTotpProvider.MultiFactorTotpProvider(System.IServiceProvider)
  fullName.vb: Application.Providers.MultiFactorTotpProvider.New(System.IServiceProvider)
  nameWithType: MultiFactorTotpProvider.MultiFactorTotpProvider(IServiceProvider)
  nameWithType.vb: MultiFactorTotpProvider.New(IServiceProvider)
- uid: Application.Providers.MultiFactorTotpProvider.#ctor*
  name: MultiFactorTotpProvider
  href: api/Application.Providers.MultiFactorTotpProvider.html#Application_Providers_MultiFactorTotpProvider__ctor_
  commentId: Overload:Application.Providers.MultiFactorTotpProvider.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Application.Providers.MultiFactorTotpProvider.MultiFactorTotpProvider
  fullName.vb: Application.Providers.MultiFactorTotpProvider.New
  nameWithType: MultiFactorTotpProvider.MultiFactorTotpProvider
  nameWithType.vb: MultiFactorTotpProvider.New
- uid: Application.Providers.MultiFactorTotpProvider.FormatKey(System.String)
  name: FormatKey(string)
  href: api/Application.Providers.MultiFactorTotpProvider.html#Application_Providers_MultiFactorTotpProvider_FormatKey_System_String_
  commentId: M:Application.Providers.MultiFactorTotpProvider.FormatKey(System.String)
  name.vb: FormatKey(String)
  fullName: Application.Providers.MultiFactorTotpProvider.FormatKey(string)
  fullName.vb: Application.Providers.MultiFactorTotpProvider.FormatKey(String)
  nameWithType: MultiFactorTotpProvider.FormatKey(string)
  nameWithType.vb: MultiFactorTotpProvider.FormatKey(String)
- uid: Application.Providers.MultiFactorTotpProvider.FormatKey*
  name: FormatKey
  href: api/Application.Providers.MultiFactorTotpProvider.html#Application_Providers_MultiFactorTotpProvider_FormatKey_
  commentId: Overload:Application.Providers.MultiFactorTotpProvider.FormatKey
  isSpec: "True"
  fullName: Application.Providers.MultiFactorTotpProvider.FormatKey
  nameWithType: MultiFactorTotpProvider.FormatKey
- uid: Application.Providers.MultiFactorTotpProvider.GenerateKeyAsync(Domain.Aggregates.Identity.User)
  name: GenerateKeyAsync(User)
  href: api/Application.Providers.MultiFactorTotpProvider.html#Application_Providers_MultiFactorTotpProvider_GenerateKeyAsync_Domain_Aggregates_Identity_User_
  commentId: M:Application.Providers.MultiFactorTotpProvider.GenerateKeyAsync(Domain.Aggregates.Identity.User)
  fullName: Application.Providers.MultiFactorTotpProvider.GenerateKeyAsync(Domain.Aggregates.Identity.User)
  nameWithType: MultiFactorTotpProvider.GenerateKeyAsync(User)
- uid: Application.Providers.MultiFactorTotpProvider.GenerateKeyAsync*
  name: GenerateKeyAsync
  href: api/Application.Providers.MultiFactorTotpProvider.html#Application_Providers_MultiFactorTotpProvider_GenerateKeyAsync_
  commentId: Overload:Application.Providers.MultiFactorTotpProvider.GenerateKeyAsync
  isSpec: "True"
  fullName: Application.Providers.MultiFactorTotpProvider.GenerateKeyAsync
  nameWithType: MultiFactorTotpProvider.GenerateKeyAsync
- uid: Application.Providers.MultiFactorTotpProvider.GenerateQrCodeUriAsync(Domain.Aggregates.Identity.User)
  name: GenerateQrCodeUriAsync(User)
  href: api/Application.Providers.MultiFactorTotpProvider.html#Application_Providers_MultiFactorTotpProvider_GenerateQrCodeUriAsync_Domain_Aggregates_Identity_User_
  commentId: M:Application.Providers.MultiFactorTotpProvider.GenerateQrCodeUriAsync(Domain.Aggregates.Identity.User)
  fullName: Application.Providers.MultiFactorTotpProvider.GenerateQrCodeUriAsync(Domain.Aggregates.Identity.User)
  nameWithType: MultiFactorTotpProvider.GenerateQrCodeUriAsync(User)
- uid: Application.Providers.MultiFactorTotpProvider.GenerateQrCodeUriAsync*
  name: GenerateQrCodeUriAsync
  href: api/Application.Providers.MultiFactorTotpProvider.html#Application_Providers_MultiFactorTotpProvider_GenerateQrCodeUriAsync_
  commentId: Overload:Application.Providers.MultiFactorTotpProvider.GenerateQrCodeUriAsync
  isSpec: "True"
  fullName: Application.Providers.MultiFactorTotpProvider.GenerateQrCodeUriAsync
  nameWithType: MultiFactorTotpProvider.GenerateQrCodeUriAsync
- uid: Application.Providers.MultiFactorTotpProvider.ValidateAsync(System.String,Domain.Aggregates.Identity.User)
  name: ValidateAsync(string, User)
  href: api/Application.Providers.MultiFactorTotpProvider.html#Application_Providers_MultiFactorTotpProvider_ValidateAsync_System_String_Domain_Aggregates_Identity_User_
  commentId: M:Application.Providers.MultiFactorTotpProvider.ValidateAsync(System.String,Domain.Aggregates.Identity.User)
  name.vb: ValidateAsync(String, User)
  fullName: Application.Providers.MultiFactorTotpProvider.ValidateAsync(string, Domain.Aggregates.Identity.User)
  fullName.vb: Application.Providers.MultiFactorTotpProvider.ValidateAsync(String, Domain.Aggregates.Identity.User)
  nameWithType: MultiFactorTotpProvider.ValidateAsync(string, User)
  nameWithType.vb: MultiFactorTotpProvider.ValidateAsync(String, User)
- uid: Application.Providers.MultiFactorTotpProvider.ValidateAsync*
  name: ValidateAsync
  href: api/Application.Providers.MultiFactorTotpProvider.html#Application_Providers_MultiFactorTotpProvider_ValidateAsync_
  commentId: Overload:Application.Providers.MultiFactorTotpProvider.ValidateAsync
  isSpec: "True"
  fullName: Application.Providers.MultiFactorTotpProvider.ValidateAsync
  nameWithType: MultiFactorTotpProvider.ValidateAsync
- uid: Application.Providers.RandomStringProvider
  name: RandomStringProvider
  href: api/Application.Providers.RandomStringProvider.html
  commentId: T:Application.Providers.RandomStringProvider
  fullName: Application.Providers.RandomStringProvider
  nameWithType: RandomStringProvider
- uid: Application.Providers.RandomStringProvider.GenerateAlphanumeric(System.Int32)
  name: GenerateAlphanumeric(int)
  href: api/Application.Providers.RandomStringProvider.html#Application_Providers_RandomStringProvider_GenerateAlphanumeric_System_Int32_
  commentId: M:Application.Providers.RandomStringProvider.GenerateAlphanumeric(System.Int32)
  name.vb: GenerateAlphanumeric(Integer)
  fullName: Application.Providers.RandomStringProvider.GenerateAlphanumeric(int)
  fullName.vb: Application.Providers.RandomStringProvider.GenerateAlphanumeric(Integer)
  nameWithType: RandomStringProvider.GenerateAlphanumeric(int)
  nameWithType.vb: RandomStringProvider.GenerateAlphanumeric(Integer)
- uid: Application.Providers.RandomStringProvider.GenerateAlphanumeric*
  name: GenerateAlphanumeric
  href: api/Application.Providers.RandomStringProvider.html#Application_Providers_RandomStringProvider_GenerateAlphanumeric_
  commentId: Overload:Application.Providers.RandomStringProvider.GenerateAlphanumeric
  isSpec: "True"
  fullName: Application.Providers.RandomStringProvider.GenerateAlphanumeric
  nameWithType: RandomStringProvider.GenerateAlphanumeric
- uid: Application.Providers.ScopeProvider
  name: ScopeProvider
  href: api/Application.Providers.ScopeProvider.html
  commentId: T:Application.Providers.ScopeProvider
  fullName: Application.Providers.ScopeProvider
  nameWithType: ScopeProvider
- uid: Application.Providers.ScopeProvider.ParseScopes(System.String)
  name: ParseScopes(string)
  href: api/Application.Providers.ScopeProvider.html#Application_Providers_ScopeProvider_ParseScopes_System_String_
  commentId: M:Application.Providers.ScopeProvider.ParseScopes(System.String)
  name.vb: ParseScopes(String)
  fullName: Application.Providers.ScopeProvider.ParseScopes(string)
  fullName.vb: Application.Providers.ScopeProvider.ParseScopes(String)
  nameWithType: ScopeProvider.ParseScopes(string)
  nameWithType.vb: ScopeProvider.ParseScopes(String)
- uid: Application.Providers.ScopeProvider.ParseScopes*
  name: ParseScopes
  href: api/Application.Providers.ScopeProvider.html#Application_Providers_ScopeProvider_ParseScopes_
  commentId: Overload:Application.Providers.ScopeProvider.ParseScopes
  isSpec: "True"
  fullName: Application.Providers.ScopeProvider.ParseScopes
  nameWithType: ScopeProvider.ParseScopes
- uid: Application.Providers.TimerProvider
  name: TimerProvider
  href: api/Application.Providers.TimerProvider.html
  commentId: T:Application.Providers.TimerProvider
  fullName: Application.Providers.TimerProvider
  nameWithType: TimerProvider
- uid: Application.Providers.TimerProvider.#ctor
  name: TimerProvider()
  href: api/Application.Providers.TimerProvider.html#Application_Providers_TimerProvider__ctor
  commentId: M:Application.Providers.TimerProvider.#ctor
  name.vb: New()
  fullName: Application.Providers.TimerProvider.TimerProvider()
  fullName.vb: Application.Providers.TimerProvider.New()
  nameWithType: TimerProvider.TimerProvider()
  nameWithType.vb: TimerProvider.New()
- uid: Application.Providers.TimerProvider.#ctor*
  name: TimerProvider
  href: api/Application.Providers.TimerProvider.html#Application_Providers_TimerProvider__ctor_
  commentId: Overload:Application.Providers.TimerProvider.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Application.Providers.TimerProvider.TimerProvider
  fullName.vb: Application.Providers.TimerProvider.New
  nameWithType: TimerProvider.TimerProvider
  nameWithType.vb: TimerProvider.New
- uid: Application.Providers.TimerProvider.Finalize
  name: ~TimerProvider()
  href: api/Application.Providers.TimerProvider.html#Application_Providers_TimerProvider_Finalize
  commentId: M:Application.Providers.TimerProvider.Finalize
  name.vb: ''
  fullName: Application.Providers.TimerProvider.~TimerProvider()
  fullName.vb: ''
  nameWithType: TimerProvider.~TimerProvider()
  nameWithType.vb: ''
- uid: Application.Providers.TimerProvider.Finalize*
  name: ~TimerProvider
  href: api/Application.Providers.TimerProvider.html#Application_Providers_TimerProvider_Finalize_
  commentId: Overload:Application.Providers.TimerProvider.Finalize
  isSpec: "True"
  fullName: Application.Providers.TimerProvider.~TimerProvider
  nameWithType: TimerProvider.~TimerProvider
- uid: Application.Providers.TimerProvider.WaitForNextTickAsync(System.Threading.CancellationToken)
  name: WaitForNextTickAsync(CancellationToken)
  href: api/Application.Providers.TimerProvider.html#Application_Providers_TimerProvider_WaitForNextTickAsync_System_Threading_CancellationToken_
  commentId: M:Application.Providers.TimerProvider.WaitForNextTickAsync(System.Threading.CancellationToken)
  fullName: Application.Providers.TimerProvider.WaitForNextTickAsync(System.Threading.CancellationToken)
  nameWithType: TimerProvider.WaitForNextTickAsync(CancellationToken)
- uid: Application.Providers.TimerProvider.WaitForNextTickAsync*
  name: WaitForNextTickAsync
  href: api/Application.Providers.TimerProvider.html#Application_Providers_TimerProvider_WaitForNextTickAsync_
  commentId: Overload:Application.Providers.TimerProvider.WaitForNextTickAsync
  isSpec: "True"
  fullName: Application.Providers.TimerProvider.WaitForNextTickAsync
  nameWithType: TimerProvider.WaitForNextTickAsync
- uid: Application.Publishers
  name: Application.Publishers
  href: api/Application.Publishers.html
  commentId: N:Application.Publishers
  fullName: Application.Publishers
  nameWithType: Application.Publishers
- uid: Application.Publishers.EmailPublisher
  name: EmailPublisher
  href: api/Application.Publishers.EmailPublisher.html
  commentId: T:Application.Publishers.EmailPublisher
  fullName: Application.Publishers.EmailPublisher
  nameWithType: EmailPublisher
- uid: Application.Publishers.EmailPublisher.#ctor(System.IServiceProvider)
  name: EmailPublisher(IServiceProvider)
  href: api/Application.Publishers.EmailPublisher.html#Application_Publishers_EmailPublisher__ctor_System_IServiceProvider_
  commentId: M:Application.Publishers.EmailPublisher.#ctor(System.IServiceProvider)
  name.vb: New(IServiceProvider)
  fullName: Application.Publishers.EmailPublisher.EmailPublisher(System.IServiceProvider)
  fullName.vb: Application.Publishers.EmailPublisher.New(System.IServiceProvider)
  nameWithType: EmailPublisher.EmailPublisher(IServiceProvider)
  nameWithType.vb: EmailPublisher.New(IServiceProvider)
- uid: Application.Publishers.EmailPublisher.#ctor*
  name: EmailPublisher
  href: api/Application.Publishers.EmailPublisher.html#Application_Publishers_EmailPublisher__ctor_
  commentId: Overload:Application.Publishers.EmailPublisher.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Application.Publishers.EmailPublisher.EmailPublisher
  fullName.vb: Application.Publishers.EmailPublisher.New
  nameWithType: EmailPublisher.EmailPublisher
  nameWithType.vb: EmailPublisher.New
- uid: Application.Publishers.EmailPublisher.Publish(Authentica.Common.EmailMessage,System.Threading.CancellationToken)
  name: Publish(EmailMessage, CancellationToken)
  href: api/Application.Publishers.EmailPublisher.html#Application_Publishers_EmailPublisher_Publish_Authentica_Common_EmailMessage_System_Threading_CancellationToken_
  commentId: M:Application.Publishers.EmailPublisher.Publish(Authentica.Common.EmailMessage,System.Threading.CancellationToken)
  fullName: Application.Publishers.EmailPublisher.Publish(Authentica.Common.EmailMessage, System.Threading.CancellationToken)
  nameWithType: EmailPublisher.Publish(EmailMessage, CancellationToken)
- uid: Application.Publishers.EmailPublisher.Publish*
  name: Publish
  href: api/Application.Publishers.EmailPublisher.html#Application_Publishers_EmailPublisher_Publish_
  commentId: Overload:Application.Publishers.EmailPublisher.Publish
  isSpec: "True"
  fullName: Application.Publishers.EmailPublisher.Publish
  nameWithType: EmailPublisher.Publish
- uid: Application.Publishers.EmailPublisher.ServiceProvider
  name: ServiceProvider
  href: api/Application.Publishers.EmailPublisher.html#Application_Publishers_EmailPublisher_ServiceProvider
  commentId: P:Application.Publishers.EmailPublisher.ServiceProvider
  fullName: Application.Publishers.EmailPublisher.ServiceProvider
  nameWithType: EmailPublisher.ServiceProvider
- uid: Application.Publishers.EmailPublisher.ServiceProvider*
  name: ServiceProvider
  href: api/Application.Publishers.EmailPublisher.html#Application_Publishers_EmailPublisher_ServiceProvider_
  commentId: Overload:Application.Publishers.EmailPublisher.ServiceProvider
  isSpec: "True"
  fullName: Application.Publishers.EmailPublisher.ServiceProvider
  nameWithType: EmailPublisher.ServiceProvider
- uid: Application.Publishers.NullEmailPublisher
  name: NullEmailPublisher
  href: api/Application.Publishers.NullEmailPublisher.html
  commentId: T:Application.Publishers.NullEmailPublisher
  fullName: Application.Publishers.NullEmailPublisher
  nameWithType: NullEmailPublisher
- uid: Application.Publishers.NullEmailPublisher.Publish(Authentica.Common.EmailMessage,System.Threading.CancellationToken)
  name: Publish(EmailMessage, CancellationToken)
  href: api/Application.Publishers.NullEmailPublisher.html#Application_Publishers_NullEmailPublisher_Publish_Authentica_Common_EmailMessage_System_Threading_CancellationToken_
  commentId: M:Application.Publishers.NullEmailPublisher.Publish(Authentica.Common.EmailMessage,System.Threading.CancellationToken)
  fullName: Application.Publishers.NullEmailPublisher.Publish(Authentica.Common.EmailMessage, System.Threading.CancellationToken)
  nameWithType: NullEmailPublisher.Publish(EmailMessage, CancellationToken)
- uid: Application.Publishers.NullEmailPublisher.Publish*
  name: Publish
  href: api/Application.Publishers.NullEmailPublisher.html#Application_Publishers_NullEmailPublisher_Publish_
  commentId: Overload:Application.Publishers.NullEmailPublisher.Publish
  isSpec: "True"
  fullName: Application.Publishers.NullEmailPublisher.Publish
  nameWithType: NullEmailPublisher.Publish
- uid: Application.Redactors
  name: Application.Redactors
  href: api/Application.Redactors.html
  commentId: N:Application.Redactors
  fullName: Application.Redactors
  nameWithType: Application.Redactors
- uid: Application.Redactors.ActivityDataRedactor
  name: ActivityDataRedactor
  href: api/Application.Redactors.ActivityDataRedactor.html
  commentId: T:Application.Redactors.ActivityDataRedactor
  fullName: Application.Redactors.ActivityDataRedactor
  nameWithType: ActivityDataRedactor
- uid: Application.Redactors.ActivityDataRedactor.RedactSensitiveData*
  name: RedactSensitiveData
  href: api/Application.Redactors.ActivityDataRedactor.html#Application_Redactors_ActivityDataRedactor_RedactSensitiveData_
  commentId: Overload:Application.Redactors.ActivityDataRedactor.RedactSensitiveData
  isSpec: "True"
  fullName: Application.Redactors.ActivityDataRedactor.RedactSensitiveData
  nameWithType: ActivityDataRedactor.RedactSensitiveData
- uid: Application.Redactors.ActivityDataRedactor.RedactSensitiveData``1(``0)
  name: RedactSensitiveData<T>(T)
  href: api/Application.Redactors.ActivityDataRedactor.html#Application_Redactors_ActivityDataRedactor_RedactSensitiveData__1___0_
  commentId: M:Application.Redactors.ActivityDataRedactor.RedactSensitiveData``1(``0)
  name.vb: RedactSensitiveData(Of T)(T)
  fullName: Application.Redactors.ActivityDataRedactor.RedactSensitiveData<T>(T)
  fullName.vb: Application.Redactors.ActivityDataRedactor.RedactSensitiveData(Of T)(T)
  nameWithType: ActivityDataRedactor.RedactSensitiveData<T>(T)
  nameWithType.vb: ActivityDataRedactor.RedactSensitiveData(Of T)(T)
- uid: Application.Redactors.ActivityDataRedactor.ReferenceEqualityComparer
  name: ActivityDataRedactor.ReferenceEqualityComparer
  href: api/Application.Redactors.ActivityDataRedactor.ReferenceEqualityComparer.html
  commentId: T:Application.Redactors.ActivityDataRedactor.ReferenceEqualityComparer
  fullName: Application.Redactors.ActivityDataRedactor.ReferenceEqualityComparer
  nameWithType: ActivityDataRedactor.ReferenceEqualityComparer
- uid: Application.Redactors.ActivityDataRedactor.ReferenceEqualityComparer.Equals(System.Object,System.Object)
  name: Equals(object?, object?)
  href: api/Application.Redactors.ActivityDataRedactor.ReferenceEqualityComparer.html#Application_Redactors_ActivityDataRedactor_ReferenceEqualityComparer_Equals_System_Object_System_Object_
  commentId: M:Application.Redactors.ActivityDataRedactor.ReferenceEqualityComparer.Equals(System.Object,System.Object)
  name.vb: Equals(Object, Object)
  fullName: Application.Redactors.ActivityDataRedactor.ReferenceEqualityComparer.Equals(object?, object?)
  fullName.vb: Application.Redactors.ActivityDataRedactor.ReferenceEqualityComparer.Equals(Object, Object)
  nameWithType: ActivityDataRedactor.ReferenceEqualityComparer.Equals(object?, object?)
  nameWithType.vb: ActivityDataRedactor.ReferenceEqualityComparer.Equals(Object, Object)
- uid: Application.Redactors.ActivityDataRedactor.ReferenceEqualityComparer.Equals*
  name: Equals
  href: api/Application.Redactors.ActivityDataRedactor.ReferenceEqualityComparer.html#Application_Redactors_ActivityDataRedactor_ReferenceEqualityComparer_Equals_
  commentId: Overload:Application.Redactors.ActivityDataRedactor.ReferenceEqualityComparer.Equals
  isSpec: "True"
  fullName: Application.Redactors.ActivityDataRedactor.ReferenceEqualityComparer.Equals
  nameWithType: ActivityDataRedactor.ReferenceEqualityComparer.Equals
- uid: Application.Redactors.ActivityDataRedactor.ReferenceEqualityComparer.GetHashCode(System.Object)
  name: GetHashCode(object)
  href: api/Application.Redactors.ActivityDataRedactor.ReferenceEqualityComparer.html#Application_Redactors_ActivityDataRedactor_ReferenceEqualityComparer_GetHashCode_System_Object_
  commentId: M:Application.Redactors.ActivityDataRedactor.ReferenceEqualityComparer.GetHashCode(System.Object)
  name.vb: GetHashCode(Object)
  fullName: Application.Redactors.ActivityDataRedactor.ReferenceEqualityComparer.GetHashCode(object)
  fullName.vb: Application.Redactors.ActivityDataRedactor.ReferenceEqualityComparer.GetHashCode(Object)
  nameWithType: ActivityDataRedactor.ReferenceEqualityComparer.GetHashCode(object)
  nameWithType.vb: ActivityDataRedactor.ReferenceEqualityComparer.GetHashCode(Object)
- uid: Application.Redactors.ActivityDataRedactor.ReferenceEqualityComparer.GetHashCode*
  name: GetHashCode
  href: api/Application.Redactors.ActivityDataRedactor.ReferenceEqualityComparer.html#Application_Redactors_ActivityDataRedactor_ReferenceEqualityComparer_GetHashCode_
  commentId: Overload:Application.Redactors.ActivityDataRedactor.ReferenceEqualityComparer.GetHashCode
  isSpec: "True"
  fullName: Application.Redactors.ActivityDataRedactor.ReferenceEqualityComparer.GetHashCode
  nameWithType: ActivityDataRedactor.ReferenceEqualityComparer.GetHashCode
- uid: Application.Results
  name: Application.Results
  href: api/Application.Results.html
  commentId: N:Application.Results
  fullName: Application.Results
  nameWithType: Application.Results
- uid: Application.Results.ApplicationStoreResult
  name: ApplicationStoreResult
  href: api/Application.Results.ApplicationStoreResult.html
  commentId: T:Application.Results.ApplicationStoreResult
  fullName: Application.Results.ApplicationStoreResult
  nameWithType: ApplicationStoreResult
- uid: Application.Results.ApplicationStoreResult.Secret
  name: Secret
  href: api/Application.Results.ApplicationStoreResult.html#Application_Results_ApplicationStoreResult_Secret
  commentId: P:Application.Results.ApplicationStoreResult.Secret
  fullName: Application.Results.ApplicationStoreResult.Secret
  nameWithType: ApplicationStoreResult.Secret
- uid: Application.Results.ApplicationStoreResult.Secret*
  name: Secret
  href: api/Application.Results.ApplicationStoreResult.html#Application_Results_ApplicationStoreResult_Secret_
  commentId: Overload:Application.Results.ApplicationStoreResult.Secret
  isSpec: "True"
  fullName: Application.Results.ApplicationStoreResult.Secret
  nameWithType: ApplicationStoreResult.Secret
- uid: Application.Results.ApplicationStoreResult.Success(System.String)
  name: Success(string)
  href: api/Application.Results.ApplicationStoreResult.html#Application_Results_ApplicationStoreResult_Success_System_String_
  commentId: M:Application.Results.ApplicationStoreResult.Success(System.String)
  name.vb: Success(String)
  fullName: Application.Results.ApplicationStoreResult.Success(string)
  fullName.vb: Application.Results.ApplicationStoreResult.Success(String)
  nameWithType: ApplicationStoreResult.Success(string)
  nameWithType.vb: ApplicationStoreResult.Success(String)
- uid: Application.Results.ApplicationStoreResult.Success*
  name: Success
  href: api/Application.Results.ApplicationStoreResult.html#Application_Results_ApplicationStoreResult_Success_
  commentId: Overload:Application.Results.ApplicationStoreResult.Success
  isSpec: "True"
  fullName: Application.Results.ApplicationStoreResult.Success
  nameWithType: ApplicationStoreResult.Success
- uid: Application.Results.BaseResult`1
  name: BaseResult<TResult>
  href: api/Application.Results.BaseResult-1.html
  commentId: T:Application.Results.BaseResult`1
  name.vb: BaseResult(Of TResult)
  fullName: Application.Results.BaseResult<TResult>
  fullName.vb: Application.Results.BaseResult(Of TResult)
  nameWithType: BaseResult<TResult>
  nameWithType.vb: BaseResult(Of TResult)
- uid: Application.Results.BaseResult`1.Errors
  name: Errors
  href: api/Application.Results.BaseResult-1.html#Application_Results_BaseResult_1_Errors
  commentId: P:Application.Results.BaseResult`1.Errors
  fullName: Application.Results.BaseResult<TResult>.Errors
  fullName.vb: Application.Results.BaseResult(Of TResult).Errors
  nameWithType: BaseResult<TResult>.Errors
  nameWithType.vb: BaseResult(Of TResult).Errors
- uid: Application.Results.BaseResult`1.Errors*
  name: Errors
  href: api/Application.Results.BaseResult-1.html#Application_Results_BaseResult_1_Errors_
  commentId: Overload:Application.Results.BaseResult`1.Errors
  isSpec: "True"
  fullName: Application.Results.BaseResult<TResult>.Errors
  fullName.vb: Application.Results.BaseResult(Of TResult).Errors
  nameWithType: BaseResult<TResult>.Errors
  nameWithType.vb: BaseResult(Of TResult).Errors
- uid: Application.Results.BaseResult`1.Failed(Microsoft.AspNetCore.Identity.IdentityError[])
  name: Failed(params IdentityError[])
  href: api/Application.Results.BaseResult-1.html#Application_Results_BaseResult_1_Failed_Microsoft_AspNetCore_Identity_IdentityError___
  commentId: M:Application.Results.BaseResult`1.Failed(Microsoft.AspNetCore.Identity.IdentityError[])
  name.vb: Failed(ParamArray IdentityError())
  fullName: Application.Results.BaseResult<TResult>.Failed(params Microsoft.AspNetCore.Identity.IdentityError[])
  fullName.vb: Application.Results.BaseResult(Of TResult).Failed(ParamArray Microsoft.AspNetCore.Identity.IdentityError())
  nameWithType: BaseResult<TResult>.Failed(params IdentityError[])
  nameWithType.vb: BaseResult(Of TResult).Failed(ParamArray IdentityError())
- uid: Application.Results.BaseResult`1.Failed*
  name: Failed
  href: api/Application.Results.BaseResult-1.html#Application_Results_BaseResult_1_Failed_
  commentId: Overload:Application.Results.BaseResult`1.Failed
  isSpec: "True"
  fullName: Application.Results.BaseResult<TResult>.Failed
  fullName.vb: Application.Results.BaseResult(Of TResult).Failed
  nameWithType: BaseResult<TResult>.Failed
  nameWithType.vb: BaseResult(Of TResult).Failed
- uid: Application.Results.BaseResult`1.Succeeded
  name: Succeeded
  href: api/Application.Results.BaseResult-1.html#Application_Results_BaseResult_1_Succeeded
  commentId: P:Application.Results.BaseResult`1.Succeeded
  fullName: Application.Results.BaseResult<TResult>.Succeeded
  fullName.vb: Application.Results.BaseResult(Of TResult).Succeeded
  nameWithType: BaseResult<TResult>.Succeeded
  nameWithType.vb: BaseResult(Of TResult).Succeeded
- uid: Application.Results.BaseResult`1.Succeeded*
  name: Succeeded
  href: api/Application.Results.BaseResult-1.html#Application_Results_BaseResult_1_Succeeded_
  commentId: Overload:Application.Results.BaseResult`1.Succeeded
  isSpec: "True"
  fullName: Application.Results.BaseResult<TResult>.Succeeded
  fullName.vb: Application.Results.BaseResult(Of TResult).Succeeded
  nameWithType: BaseResult<TResult>.Succeeded
  nameWithType.vb: BaseResult(Of TResult).Succeeded
- uid: Application.Results.BaseResult`1.Success
  name: Success()
  href: api/Application.Results.BaseResult-1.html#Application_Results_BaseResult_1_Success
  commentId: M:Application.Results.BaseResult`1.Success
  fullName: Application.Results.BaseResult<TResult>.Success()
  fullName.vb: Application.Results.BaseResult(Of TResult).Success()
  nameWithType: BaseResult<TResult>.Success()
  nameWithType.vb: BaseResult(Of TResult).Success()
- uid: Application.Results.BaseResult`1.Success*
  name: Success
  href: api/Application.Results.BaseResult-1.html#Application_Results_BaseResult_1_Success_
  commentId: Overload:Application.Results.BaseResult`1.Success
  isSpec: "True"
  fullName: Application.Results.BaseResult<TResult>.Success
  fullName.vb: Application.Results.BaseResult(Of TResult).Success
  nameWithType: BaseResult<TResult>.Success
  nameWithType.vb: BaseResult(Of TResult).Success
- uid: Application.Results.JwtResult
  name: JwtResult
  href: api/Application.Results.JwtResult.html
  commentId: T:Application.Results.JwtResult
  fullName: Application.Results.JwtResult
  nameWithType: JwtResult
- uid: Application.Results.JwtResult.Error
  name: Error
  href: api/Application.Results.JwtResult.html#Application_Results_JwtResult_Error
  commentId: P:Application.Results.JwtResult.Error
  fullName: Application.Results.JwtResult.Error
  nameWithType: JwtResult.Error
- uid: Application.Results.JwtResult.Error*
  name: Error
  href: api/Application.Results.JwtResult.html#Application_Results_JwtResult_Error_
  commentId: Overload:Application.Results.JwtResult.Error
  isSpec: "True"
  fullName: Application.Results.JwtResult.Error
  nameWithType: JwtResult.Error
- uid: Application.Results.JwtResult.Success
  name: Success
  href: api/Application.Results.JwtResult.html#Application_Results_JwtResult_Success
  commentId: P:Application.Results.JwtResult.Success
  fullName: Application.Results.JwtResult.Success
  nameWithType: JwtResult.Success
- uid: Application.Results.JwtResult.Success*
  name: Success
  href: api/Application.Results.JwtResult.html#Application_Results_JwtResult_Success_
  commentId: Overload:Application.Results.JwtResult.Success
  isSpec: "True"
  fullName: Application.Results.JwtResult.Success
  nameWithType: JwtResult.Success
- uid: Application.Results.JwtResult.Token
  name: Token
  href: api/Application.Results.JwtResult.html#Application_Results_JwtResult_Token
  commentId: P:Application.Results.JwtResult.Token
  fullName: Application.Results.JwtResult.Token
  nameWithType: JwtResult.Token
- uid: Application.Results.JwtResult.Token*
  name: Token
  href: api/Application.Results.JwtResult.html#Application_Results_JwtResult_Token_
  commentId: Overload:Application.Results.JwtResult.Token
  isSpec: "True"
  fullName: Application.Results.JwtResult.Token
  nameWithType: JwtResult.Token
- uid: Application.Results.SessionStoreResult
  name: SessionStoreResult
  href: api/Application.Results.SessionStoreResult.html
  commentId: T:Application.Results.SessionStoreResult
  fullName: Application.Results.SessionStoreResult
  nameWithType: SessionStoreResult
- uid: Application.Results.SharedStoreResult
  name: SharedStoreResult
  href: api/Application.Results.SharedStoreResult.html
  commentId: T:Application.Results.SharedStoreResult
  fullName: Application.Results.SharedStoreResult
  nameWithType: SharedStoreResult
- uid: Application.Results.UserStoreResult
  name: UserStoreResult
  href: api/Application.Results.UserStoreResult.html
  commentId: T:Application.Results.UserStoreResult
  fullName: Application.Results.UserStoreResult
  nameWithType: UserStoreResult
- uid: Application.Results.UserStoreResult.Success(Domain.Aggregates.Identity.User)
  name: Success(User)
  href: api/Application.Results.UserStoreResult.html#Application_Results_UserStoreResult_Success_Domain_Aggregates_Identity_User_
  commentId: M:Application.Results.UserStoreResult.Success(Domain.Aggregates.Identity.User)
  fullName: Application.Results.UserStoreResult.Success(Domain.Aggregates.Identity.User)
  nameWithType: UserStoreResult.Success(User)
- uid: Application.Results.UserStoreResult.Success*
  name: Success
  href: api/Application.Results.UserStoreResult.html#Application_Results_UserStoreResult_Success_
  commentId: Overload:Application.Results.UserStoreResult.Success
  isSpec: "True"
  fullName: Application.Results.UserStoreResult.Success
  nameWithType: UserStoreResult.Success
- uid: Application.Results.UserStoreResult.User
  name: User
  href: api/Application.Results.UserStoreResult.html#Application_Results_UserStoreResult_User
  commentId: P:Application.Results.UserStoreResult.User
  fullName: Application.Results.UserStoreResult.User
  nameWithType: UserStoreResult.User
- uid: Application.Results.UserStoreResult.User*
  name: User
  href: api/Application.Results.UserStoreResult.html#Application_Results_UserStoreResult_User_
  commentId: Overload:Application.Results.UserStoreResult.User
  isSpec: "True"
  fullName: Application.Results.UserStoreResult.User
  nameWithType: UserStoreResult.User
- uid: Application.Stores
  name: Application.Stores
  href: api/Application.Stores.html
  commentId: N:Application.Stores
  fullName: Application.Stores
  nameWithType: Application.Stores
- uid: Application.Stores.ActivityReadStore
  name: ActivityReadStore
  href: api/Application.Stores.ActivityReadStore.html
  commentId: T:Application.Stores.ActivityReadStore
  fullName: Application.Stores.ActivityReadStore
  nameWithType: ActivityReadStore
- uid: Application.Stores.ActivityReadStore.#ctor(System.IServiceProvider)
  name: ActivityReadStore(IServiceProvider)
  href: api/Application.Stores.ActivityReadStore.html#Application_Stores_ActivityReadStore__ctor_System_IServiceProvider_
  commentId: M:Application.Stores.ActivityReadStore.#ctor(System.IServiceProvider)
  name.vb: New(IServiceProvider)
  fullName: Application.Stores.ActivityReadStore.ActivityReadStore(System.IServiceProvider)
  fullName.vb: Application.Stores.ActivityReadStore.New(System.IServiceProvider)
  nameWithType: ActivityReadStore.ActivityReadStore(IServiceProvider)
  nameWithType.vb: ActivityReadStore.New(IServiceProvider)
- uid: Application.Stores.ActivityReadStore.#ctor*
  name: ActivityReadStore
  href: api/Application.Stores.ActivityReadStore.html#Application_Stores_ActivityReadStore__ctor_
  commentId: Overload:Application.Stores.ActivityReadStore.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Application.Stores.ActivityReadStore.ActivityReadStore
  fullName.vb: Application.Stores.ActivityReadStore.New
  nameWithType: ActivityReadStore.ActivityReadStore
  nameWithType.vb: ActivityReadStore.New
- uid: Application.Stores.ActivityReadStore.GetActivities
  name: GetActivities()
  href: api/Application.Stores.ActivityReadStore.html#Application_Stores_ActivityReadStore_GetActivities
  commentId: M:Application.Stores.ActivityReadStore.GetActivities
  fullName: Application.Stores.ActivityReadStore.GetActivities()
  nameWithType: ActivityReadStore.GetActivities()
- uid: Application.Stores.ActivityReadStore.GetActivities*
  name: GetActivities
  href: api/Application.Stores.ActivityReadStore.html#Application_Stores_ActivityReadStore_GetActivities_
  commentId: Overload:Application.Stores.ActivityReadStore.GetActivities
  isSpec: "True"
  fullName: Application.Stores.ActivityReadStore.GetActivities
  nameWithType: ActivityReadStore.GetActivities
- uid: Application.Stores.ActivityReadStore.GetActivitiesByDateTimeStamp(System.DateTime)
  name: GetActivitiesByDateTimeStamp(DateTime)
  href: api/Application.Stores.ActivityReadStore.html#Application_Stores_ActivityReadStore_GetActivitiesByDateTimeStamp_System_DateTime_
  commentId: M:Application.Stores.ActivityReadStore.GetActivitiesByDateTimeStamp(System.DateTime)
  name.vb: GetActivitiesByDateTimeStamp(Date)
  fullName: Application.Stores.ActivityReadStore.GetActivitiesByDateTimeStamp(System.DateTime)
  fullName.vb: Application.Stores.ActivityReadStore.GetActivitiesByDateTimeStamp(Date)
  nameWithType: ActivityReadStore.GetActivitiesByDateTimeStamp(DateTime)
  nameWithType.vb: ActivityReadStore.GetActivitiesByDateTimeStamp(Date)
- uid: Application.Stores.ActivityReadStore.GetActivitiesByDateTimeStamp*
  name: GetActivitiesByDateTimeStamp
  href: api/Application.Stores.ActivityReadStore.html#Application_Stores_ActivityReadStore_GetActivitiesByDateTimeStamp_
  commentId: Overload:Application.Stores.ActivityReadStore.GetActivitiesByDateTimeStamp
  isSpec: "True"
  fullName: Application.Stores.ActivityReadStore.GetActivitiesByDateTimeStamp
  nameWithType: ActivityReadStore.GetActivitiesByDateTimeStamp
- uid: Application.Stores.ActivityWriteStore
  name: ActivityWriteStore
  href: api/Application.Stores.ActivityWriteStore.html
  commentId: T:Application.Stores.ActivityWriteStore
  fullName: Application.Stores.ActivityWriteStore
  nameWithType: ActivityWriteStore
- uid: Application.Stores.ActivityWriteStore.#ctor(System.IServiceProvider)
  name: ActivityWriteStore(IServiceProvider)
  href: api/Application.Stores.ActivityWriteStore.html#Application_Stores_ActivityWriteStore__ctor_System_IServiceProvider_
  commentId: M:Application.Stores.ActivityWriteStore.#ctor(System.IServiceProvider)
  name.vb: New(IServiceProvider)
  fullName: Application.Stores.ActivityWriteStore.ActivityWriteStore(System.IServiceProvider)
  fullName.vb: Application.Stores.ActivityWriteStore.New(System.IServiceProvider)
  nameWithType: ActivityWriteStore.ActivityWriteStore(IServiceProvider)
  nameWithType.vb: ActivityWriteStore.New(IServiceProvider)
- uid: Application.Stores.ActivityWriteStore.#ctor*
  name: ActivityWriteStore
  href: api/Application.Stores.ActivityWriteStore.html#Application_Stores_ActivityWriteStore__ctor_
  commentId: Overload:Application.Stores.ActivityWriteStore.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Application.Stores.ActivityWriteStore.ActivityWriteStore
  fullName.vb: Application.Stores.ActivityWriteStore.New
  nameWithType: ActivityWriteStore.ActivityWriteStore
  nameWithType.vb: ActivityWriteStore.New
- uid: Application.Stores.ActivityWriteStore.SaveActivityAsync*
  name: SaveActivityAsync
  href: api/Application.Stores.ActivityWriteStore.html#Application_Stores_ActivityWriteStore_SaveActivityAsync_
  commentId: Overload:Application.Stores.ActivityWriteStore.SaveActivityAsync
  isSpec: "True"
  fullName: Application.Stores.ActivityWriteStore.SaveActivityAsync
  nameWithType: ActivityWriteStore.SaveActivityAsync
- uid: Application.Stores.ActivityWriteStore.SaveActivityAsync``1(``0)
  name: SaveActivityAsync<T>(T)
  href: api/Application.Stores.ActivityWriteStore.html#Application_Stores_ActivityWriteStore_SaveActivityAsync__1___0_
  commentId: M:Application.Stores.ActivityWriteStore.SaveActivityAsync``1(``0)
  name.vb: SaveActivityAsync(Of T)(T)
  fullName: Application.Stores.ActivityWriteStore.SaveActivityAsync<T>(T)
  fullName.vb: Application.Stores.ActivityWriteStore.SaveActivityAsync(Of T)(T)
  nameWithType: ActivityWriteStore.SaveActivityAsync<T>(T)
  nameWithType.vb: ActivityWriteStore.SaveActivityAsync(Of T)(T)
- uid: Application.Stores.ApplicationReadStore
  name: ApplicationReadStore
  href: api/Application.Stores.ApplicationReadStore.html
  commentId: T:Application.Stores.ApplicationReadStore
  fullName: Application.Stores.ApplicationReadStore
  nameWithType: ApplicationReadStore
- uid: Application.Stores.ApplicationReadStore.#ctor(System.IServiceProvider)
  name: ApplicationReadStore(IServiceProvider)
  href: api/Application.Stores.ApplicationReadStore.html#Application_Stores_ApplicationReadStore__ctor_System_IServiceProvider_
  commentId: M:Application.Stores.ApplicationReadStore.#ctor(System.IServiceProvider)
  name.vb: New(IServiceProvider)
  fullName: Application.Stores.ApplicationReadStore.ApplicationReadStore(System.IServiceProvider)
  fullName.vb: Application.Stores.ApplicationReadStore.New(System.IServiceProvider)
  nameWithType: ApplicationReadStore.ApplicationReadStore(IServiceProvider)
  nameWithType.vb: ApplicationReadStore.New(IServiceProvider)
- uid: Application.Stores.ApplicationReadStore.#ctor*
  name: ApplicationReadStore
  href: api/Application.Stores.ApplicationReadStore.html#Application_Stores_ApplicationReadStore__ctor_
  commentId: Overload:Application.Stores.ApplicationReadStore.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Application.Stores.ApplicationReadStore.ApplicationReadStore
  fullName.vb: Application.Stores.ApplicationReadStore.New
  nameWithType: ApplicationReadStore.ApplicationReadStore
  nameWithType.vb: ApplicationReadStore.New
- uid: Application.Stores.ApplicationReadStore.CheckApplicationExistsAsync(System.String,System.Threading.CancellationToken)
  name: CheckApplicationExistsAsync(string, CancellationToken)
  href: api/Application.Stores.ApplicationReadStore.html#Application_Stores_ApplicationReadStore_CheckApplicationExistsAsync_System_String_System_Threading_CancellationToken_
  commentId: M:Application.Stores.ApplicationReadStore.CheckApplicationExistsAsync(System.String,System.Threading.CancellationToken)
  name.vb: CheckApplicationExistsAsync(String, CancellationToken)
  fullName: Application.Stores.ApplicationReadStore.CheckApplicationExistsAsync(string, System.Threading.CancellationToken)
  fullName.vb: Application.Stores.ApplicationReadStore.CheckApplicationExistsAsync(String, System.Threading.CancellationToken)
  nameWithType: ApplicationReadStore.CheckApplicationExistsAsync(string, CancellationToken)
  nameWithType.vb: ApplicationReadStore.CheckApplicationExistsAsync(String, CancellationToken)
- uid: Application.Stores.ApplicationReadStore.CheckApplicationExistsAsync*
  name: CheckApplicationExistsAsync
  href: api/Application.Stores.ApplicationReadStore.html#Application_Stores_ApplicationReadStore_CheckApplicationExistsAsync_
  commentId: Overload:Application.Stores.ApplicationReadStore.CheckApplicationExistsAsync
  isSpec: "True"
  fullName: Application.Stores.ApplicationReadStore.CheckApplicationExistsAsync
  nameWithType: ApplicationReadStore.CheckApplicationExistsAsync
- uid: Application.Stores.ApplicationReadStore.GetAllClientApplicationsByUserIdAsync(System.String,System.Threading.CancellationToken)
  name: GetAllClientApplicationsByUserIdAsync(string, CancellationToken)
  href: api/Application.Stores.ApplicationReadStore.html#Application_Stores_ApplicationReadStore_GetAllClientApplicationsByUserIdAsync_System_String_System_Threading_CancellationToken_
  commentId: M:Application.Stores.ApplicationReadStore.GetAllClientApplicationsByUserIdAsync(System.String,System.Threading.CancellationToken)
  name.vb: GetAllClientApplicationsByUserIdAsync(String, CancellationToken)
  fullName: Application.Stores.ApplicationReadStore.GetAllClientApplicationsByUserIdAsync(string, System.Threading.CancellationToken)
  fullName.vb: Application.Stores.ApplicationReadStore.GetAllClientApplicationsByUserIdAsync(String, System.Threading.CancellationToken)
  nameWithType: ApplicationReadStore.GetAllClientApplicationsByUserIdAsync(string, CancellationToken)
  nameWithType.vb: ApplicationReadStore.GetAllClientApplicationsByUserIdAsync(String, CancellationToken)
- uid: Application.Stores.ApplicationReadStore.GetAllClientApplicationsByUserIdAsync*
  name: GetAllClientApplicationsByUserIdAsync
  href: api/Application.Stores.ApplicationReadStore.html#Application_Stores_ApplicationReadStore_GetAllClientApplicationsByUserIdAsync_
  commentId: Overload:Application.Stores.ApplicationReadStore.GetAllClientApplicationsByUserIdAsync
  isSpec: "True"
  fullName: Application.Stores.ApplicationReadStore.GetAllClientApplicationsByUserIdAsync
  nameWithType: ApplicationReadStore.GetAllClientApplicationsByUserIdAsync
- uid: Application.Stores.ApplicationReadStore.GetClientApplicationByClientIdAndCallbackUri(Application.DTOs.ApplicationDto{Api.Requests.AuthorizeRequest},System.Threading.CancellationToken)
  name: GetClientApplicationByClientIdAndCallbackUri(ApplicationDto<AuthorizeRequest>, CancellationToken)
  href: api/Application.Stores.ApplicationReadStore.html#Application_Stores_ApplicationReadStore_GetClientApplicationByClientIdAndCallbackUri_Application_DTOs_ApplicationDto_Api_Requests_AuthorizeRequest__System_Threading_CancellationToken_
  commentId: M:Application.Stores.ApplicationReadStore.GetClientApplicationByClientIdAndCallbackUri(Application.DTOs.ApplicationDto{Api.Requests.AuthorizeRequest},System.Threading.CancellationToken)
  name.vb: GetClientApplicationByClientIdAndCallbackUri(ApplicationDto(Of AuthorizeRequest), CancellationToken)
  fullName: Application.Stores.ApplicationReadStore.GetClientApplicationByClientIdAndCallbackUri(Application.DTOs.ApplicationDto<Api.Requests.AuthorizeRequest>, System.Threading.CancellationToken)
  fullName.vb: Application.Stores.ApplicationReadStore.GetClientApplicationByClientIdAndCallbackUri(Application.DTOs.ApplicationDto(Of Api.Requests.AuthorizeRequest), System.Threading.CancellationToken)
  nameWithType: ApplicationReadStore.GetClientApplicationByClientIdAndCallbackUri(ApplicationDto<AuthorizeRequest>, CancellationToken)
  nameWithType.vb: ApplicationReadStore.GetClientApplicationByClientIdAndCallbackUri(ApplicationDto(Of AuthorizeRequest), CancellationToken)
- uid: Application.Stores.ApplicationReadStore.GetClientApplicationByClientIdAndCallbackUri*
  name: GetClientApplicationByClientIdAndCallbackUri
  href: api/Application.Stores.ApplicationReadStore.html#Application_Stores_ApplicationReadStore_GetClientApplicationByClientIdAndCallbackUri_
  commentId: Overload:Application.Stores.ApplicationReadStore.GetClientApplicationByClientIdAndCallbackUri
  isSpec: "True"
  fullName: Application.Stores.ApplicationReadStore.GetClientApplicationByClientIdAndCallbackUri
  nameWithType: ApplicationReadStore.GetClientApplicationByClientIdAndCallbackUri
- uid: Application.Stores.ApplicationReadStore.GetClientApplicationByNameAndUserIdAsync(System.String,System.String,System.Threading.CancellationToken)
  name: GetClientApplicationByNameAndUserIdAsync(string, string, CancellationToken)
  href: api/Application.Stores.ApplicationReadStore.html#Application_Stores_ApplicationReadStore_GetClientApplicationByNameAndUserIdAsync_System_String_System_String_System_Threading_CancellationToken_
  commentId: M:Application.Stores.ApplicationReadStore.GetClientApplicationByNameAndUserIdAsync(System.String,System.String,System.Threading.CancellationToken)
  name.vb: GetClientApplicationByNameAndUserIdAsync(String, String, CancellationToken)
  fullName: Application.Stores.ApplicationReadStore.GetClientApplicationByNameAndUserIdAsync(string, string, System.Threading.CancellationToken)
  fullName.vb: Application.Stores.ApplicationReadStore.GetClientApplicationByNameAndUserIdAsync(String, String, System.Threading.CancellationToken)
  nameWithType: ApplicationReadStore.GetClientApplicationByNameAndUserIdAsync(string, string, CancellationToken)
  nameWithType.vb: ApplicationReadStore.GetClientApplicationByNameAndUserIdAsync(String, String, CancellationToken)
- uid: Application.Stores.ApplicationReadStore.GetClientApplicationByNameAndUserIdAsync*
  name: GetClientApplicationByNameAndUserIdAsync
  href: api/Application.Stores.ApplicationReadStore.html#Application_Stores_ApplicationReadStore_GetClientApplicationByNameAndUserIdAsync_
  commentId: Overload:Application.Stores.ApplicationReadStore.GetClientApplicationByNameAndUserIdAsync
  isSpec: "True"
  fullName: Application.Stores.ApplicationReadStore.GetClientApplicationByNameAndUserIdAsync
  nameWithType: ApplicationReadStore.GetClientApplicationByNameAndUserIdAsync
- uid: Application.Stores.ApplicationWriteStore
  name: ApplicationWriteStore
  href: api/Application.Stores.ApplicationWriteStore.html
  commentId: T:Application.Stores.ApplicationWriteStore
  fullName: Application.Stores.ApplicationWriteStore
  nameWithType: ApplicationWriteStore
- uid: Application.Stores.ApplicationWriteStore.#ctor(System.IServiceProvider)
  name: ApplicationWriteStore(IServiceProvider)
  href: api/Application.Stores.ApplicationWriteStore.html#Application_Stores_ApplicationWriteStore__ctor_System_IServiceProvider_
  commentId: M:Application.Stores.ApplicationWriteStore.#ctor(System.IServiceProvider)
  name.vb: New(IServiceProvider)
  fullName: Application.Stores.ApplicationWriteStore.ApplicationWriteStore(System.IServiceProvider)
  fullName.vb: Application.Stores.ApplicationWriteStore.New(System.IServiceProvider)
  nameWithType: ApplicationWriteStore.ApplicationWriteStore(IServiceProvider)
  nameWithType.vb: ApplicationWriteStore.New(IServiceProvider)
- uid: Application.Stores.ApplicationWriteStore.#ctor*
  name: ApplicationWriteStore
  href: api/Application.Stores.ApplicationWriteStore.html#Application_Stores_ApplicationWriteStore__ctor_
  commentId: Overload:Application.Stores.ApplicationWriteStore.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Application.Stores.ApplicationWriteStore.ApplicationWriteStore
  fullName.vb: Application.Stores.ApplicationWriteStore.New
  nameWithType: ApplicationWriteStore.ApplicationWriteStore
  nameWithType.vb: ApplicationWriteStore.New
- uid: Application.Stores.ApplicationWriteStore.CreateClientApplicationAsync(Application.DTOs.ApplicationDto{Api.Requests.CreateApplicationRequest},System.Threading.CancellationToken)
  name: CreateClientApplicationAsync(ApplicationDto<CreateApplicationRequest>, CancellationToken)
  href: api/Application.Stores.ApplicationWriteStore.html#Application_Stores_ApplicationWriteStore_CreateClientApplicationAsync_Application_DTOs_ApplicationDto_Api_Requests_CreateApplicationRequest__System_Threading_CancellationToken_
  commentId: M:Application.Stores.ApplicationWriteStore.CreateClientApplicationAsync(Application.DTOs.ApplicationDto{Api.Requests.CreateApplicationRequest},System.Threading.CancellationToken)
  name.vb: CreateClientApplicationAsync(ApplicationDto(Of CreateApplicationRequest), CancellationToken)
  fullName: Application.Stores.ApplicationWriteStore.CreateClientApplicationAsync(Application.DTOs.ApplicationDto<Api.Requests.CreateApplicationRequest>, System.Threading.CancellationToken)
  fullName.vb: Application.Stores.ApplicationWriteStore.CreateClientApplicationAsync(Application.DTOs.ApplicationDto(Of Api.Requests.CreateApplicationRequest), System.Threading.CancellationToken)
  nameWithType: ApplicationWriteStore.CreateClientApplicationAsync(ApplicationDto<CreateApplicationRequest>, CancellationToken)
  nameWithType.vb: ApplicationWriteStore.CreateClientApplicationAsync(ApplicationDto(Of CreateApplicationRequest), CancellationToken)
- uid: Application.Stores.ApplicationWriteStore.CreateClientApplicationAsync*
  name: CreateClientApplicationAsync
  href: api/Application.Stores.ApplicationWriteStore.html#Application_Stores_ApplicationWriteStore_CreateClientApplicationAsync_
  commentId: Overload:Application.Stores.ApplicationWriteStore.CreateClientApplicationAsync
  isSpec: "True"
  fullName: Application.Stores.ApplicationWriteStore.CreateClientApplicationAsync
  nameWithType: ApplicationWriteStore.CreateClientApplicationAsync
- uid: Application.Stores.ApplicationWriteStore.SoftDeleteApplicationAsync(Application.DTOs.ApplicationDto{Api.Requests.DeleteApplicationByNameRequest},System.Threading.CancellationToken)
  name: SoftDeleteApplicationAsync(ApplicationDto<DeleteApplicationByNameRequest>, CancellationToken)
  href: api/Application.Stores.ApplicationWriteStore.html#Application_Stores_ApplicationWriteStore_SoftDeleteApplicationAsync_Application_DTOs_ApplicationDto_Api_Requests_DeleteApplicationByNameRequest__System_Threading_CancellationToken_
  commentId: M:Application.Stores.ApplicationWriteStore.SoftDeleteApplicationAsync(Application.DTOs.ApplicationDto{Api.Requests.DeleteApplicationByNameRequest},System.Threading.CancellationToken)
  name.vb: SoftDeleteApplicationAsync(ApplicationDto(Of DeleteApplicationByNameRequest), CancellationToken)
  fullName: Application.Stores.ApplicationWriteStore.SoftDeleteApplicationAsync(Application.DTOs.ApplicationDto<Api.Requests.DeleteApplicationByNameRequest>, System.Threading.CancellationToken)
  fullName.vb: Application.Stores.ApplicationWriteStore.SoftDeleteApplicationAsync(Application.DTOs.ApplicationDto(Of Api.Requests.DeleteApplicationByNameRequest), System.Threading.CancellationToken)
  nameWithType: ApplicationWriteStore.SoftDeleteApplicationAsync(ApplicationDto<DeleteApplicationByNameRequest>, CancellationToken)
  nameWithType.vb: ApplicationWriteStore.SoftDeleteApplicationAsync(ApplicationDto(Of DeleteApplicationByNameRequest), CancellationToken)
- uid: Application.Stores.ApplicationWriteStore.SoftDeleteApplicationAsync*
  name: SoftDeleteApplicationAsync
  href: api/Application.Stores.ApplicationWriteStore.html#Application_Stores_ApplicationWriteStore_SoftDeleteApplicationAsync_
  commentId: Overload:Application.Stores.ApplicationWriteStore.SoftDeleteApplicationAsync
  isSpec: "True"
  fullName: Application.Stores.ApplicationWriteStore.SoftDeleteApplicationAsync
  nameWithType: ApplicationWriteStore.SoftDeleteApplicationAsync
- uid: Application.Stores.ApplicationWriteStore.UpdateApplicationAsync(Application.DTOs.ApplicationDto{Api.Requests.UpdateApplicationByNameRequest},System.Threading.CancellationToken)
  name: UpdateApplicationAsync(ApplicationDto<UpdateApplicationByNameRequest>, CancellationToken)
  href: api/Application.Stores.ApplicationWriteStore.html#Application_Stores_ApplicationWriteStore_UpdateApplicationAsync_Application_DTOs_ApplicationDto_Api_Requests_UpdateApplicationByNameRequest__System_Threading_CancellationToken_
  commentId: M:Application.Stores.ApplicationWriteStore.UpdateApplicationAsync(Application.DTOs.ApplicationDto{Api.Requests.UpdateApplicationByNameRequest},System.Threading.CancellationToken)
  name.vb: UpdateApplicationAsync(ApplicationDto(Of UpdateApplicationByNameRequest), CancellationToken)
  fullName: Application.Stores.ApplicationWriteStore.UpdateApplicationAsync(Application.DTOs.ApplicationDto<Api.Requests.UpdateApplicationByNameRequest>, System.Threading.CancellationToken)
  fullName.vb: Application.Stores.ApplicationWriteStore.UpdateApplicationAsync(Application.DTOs.ApplicationDto(Of Api.Requests.UpdateApplicationByNameRequest), System.Threading.CancellationToken)
  nameWithType: ApplicationWriteStore.UpdateApplicationAsync(ApplicationDto<UpdateApplicationByNameRequest>, CancellationToken)
  nameWithType.vb: ApplicationWriteStore.UpdateApplicationAsync(ApplicationDto(Of UpdateApplicationByNameRequest), CancellationToken)
- uid: Application.Stores.ApplicationWriteStore.UpdateApplicationAsync*
  name: UpdateApplicationAsync
  href: api/Application.Stores.ApplicationWriteStore.html#Application_Stores_ApplicationWriteStore_UpdateApplicationAsync_
  commentId: Overload:Application.Stores.ApplicationWriteStore.UpdateApplicationAsync
  isSpec: "True"
  fullName: Application.Stores.ApplicationWriteStore.UpdateApplicationAsync
  nameWithType: ApplicationWriteStore.UpdateApplicationAsync
- uid: Application.Stores.ApplicationWriteStore.UpdateClientSecretAsync(Application.DTOs.ApplicationDto{Api.Requests.CreateApplicationSecretRequest},System.Threading.CancellationToken)
  name: UpdateClientSecretAsync(ApplicationDto<CreateApplicationSecretRequest>, CancellationToken)
  href: api/Application.Stores.ApplicationWriteStore.html#Application_Stores_ApplicationWriteStore_UpdateClientSecretAsync_Application_DTOs_ApplicationDto_Api_Requests_CreateApplicationSecretRequest__System_Threading_CancellationToken_
  commentId: M:Application.Stores.ApplicationWriteStore.UpdateClientSecretAsync(Application.DTOs.ApplicationDto{Api.Requests.CreateApplicationSecretRequest},System.Threading.CancellationToken)
  name.vb: UpdateClientSecretAsync(ApplicationDto(Of CreateApplicationSecretRequest), CancellationToken)
  fullName: Application.Stores.ApplicationWriteStore.UpdateClientSecretAsync(Application.DTOs.ApplicationDto<Api.Requests.CreateApplicationSecretRequest>, System.Threading.CancellationToken)
  fullName.vb: Application.Stores.ApplicationWriteStore.UpdateClientSecretAsync(Application.DTOs.ApplicationDto(Of Api.Requests.CreateApplicationSecretRequest), System.Threading.CancellationToken)
  nameWithType: ApplicationWriteStore.UpdateClientSecretAsync(ApplicationDto<CreateApplicationSecretRequest>, CancellationToken)
  nameWithType.vb: ApplicationWriteStore.UpdateClientSecretAsync(ApplicationDto(Of CreateApplicationSecretRequest), CancellationToken)
- uid: Application.Stores.ApplicationWriteStore.UpdateClientSecretAsync*
  name: UpdateClientSecretAsync
  href: api/Application.Stores.ApplicationWriteStore.html#Application_Stores_ApplicationWriteStore_UpdateClientSecretAsync_
  commentId: Overload:Application.Stores.ApplicationWriteStore.UpdateClientSecretAsync
  isSpec: "True"
  fullName: Application.Stores.ApplicationWriteStore.UpdateClientSecretAsync
  nameWithType: ApplicationWriteStore.UpdateClientSecretAsync
- uid: Application.Stores.SessionReadStore
  name: SessionReadStore
  href: api/Application.Stores.SessionReadStore.html
  commentId: T:Application.Stores.SessionReadStore
  fullName: Application.Stores.SessionReadStore
  nameWithType: SessionReadStore
- uid: Application.Stores.SessionReadStore.#ctor(System.IServiceProvider)
  name: SessionReadStore(IServiceProvider)
  href: api/Application.Stores.SessionReadStore.html#Application_Stores_SessionReadStore__ctor_System_IServiceProvider_
  commentId: M:Application.Stores.SessionReadStore.#ctor(System.IServiceProvider)
  name.vb: New(IServiceProvider)
  fullName: Application.Stores.SessionReadStore.SessionReadStore(System.IServiceProvider)
  fullName.vb: Application.Stores.SessionReadStore.New(System.IServiceProvider)
  nameWithType: SessionReadStore.SessionReadStore(IServiceProvider)
  nameWithType.vb: SessionReadStore.New(IServiceProvider)
- uid: Application.Stores.SessionReadStore.#ctor*
  name: SessionReadStore
  href: api/Application.Stores.SessionReadStore.html#Application_Stores_SessionReadStore__ctor_
  commentId: Overload:Application.Stores.SessionReadStore.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Application.Stores.SessionReadStore.SessionReadStore
  fullName.vb: Application.Stores.SessionReadStore.New
  nameWithType: SessionReadStore.SessionReadStore
  nameWithType.vb: SessionReadStore.New
- uid: Application.Stores.SessionReadStore.GetAsync(System.String)
  name: GetAsync(string)
  href: api/Application.Stores.SessionReadStore.html#Application_Stores_SessionReadStore_GetAsync_System_String_
  commentId: M:Application.Stores.SessionReadStore.GetAsync(System.String)
  name.vb: GetAsync(String)
  fullName: Application.Stores.SessionReadStore.GetAsync(string)
  fullName.vb: Application.Stores.SessionReadStore.GetAsync(String)
  nameWithType: SessionReadStore.GetAsync(string)
  nameWithType.vb: SessionReadStore.GetAsync(String)
- uid: Application.Stores.SessionReadStore.GetAsync*
  name: GetAsync
  href: api/Application.Stores.SessionReadStore.html#Application_Stores_SessionReadStore_GetAsync_
  commentId: Overload:Application.Stores.SessionReadStore.GetAsync
  isSpec: "True"
  fullName: Application.Stores.SessionReadStore.GetAsync
  nameWithType: SessionReadStore.GetAsync
- uid: Application.Stores.SessionReadStore.GetByIdAsync(System.String)
  name: GetByIdAsync(string)
  href: api/Application.Stores.SessionReadStore.html#Application_Stores_SessionReadStore_GetByIdAsync_System_String_
  commentId: M:Application.Stores.SessionReadStore.GetByIdAsync(System.String)
  name.vb: GetByIdAsync(String)
  fullName: Application.Stores.SessionReadStore.GetByIdAsync(string)
  fullName.vb: Application.Stores.SessionReadStore.GetByIdAsync(String)
  nameWithType: SessionReadStore.GetByIdAsync(string)
  nameWithType.vb: SessionReadStore.GetByIdAsync(String)
- uid: Application.Stores.SessionReadStore.GetByIdAsync*
  name: GetByIdAsync
  href: api/Application.Stores.SessionReadStore.html#Application_Stores_SessionReadStore_GetByIdAsync_
  commentId: Overload:Application.Stores.SessionReadStore.GetByIdAsync
  isSpec: "True"
  fullName: Application.Stores.SessionReadStore.GetByIdAsync
  nameWithType: SessionReadStore.GetByIdAsync
- uid: Application.Stores.SessionWriteStore
  name: SessionWriteStore
  href: api/Application.Stores.SessionWriteStore.html
  commentId: T:Application.Stores.SessionWriteStore
  fullName: Application.Stores.SessionWriteStore
  nameWithType: SessionWriteStore
- uid: Application.Stores.SessionWriteStore.#ctor(System.IServiceProvider)
  name: SessionWriteStore(IServiceProvider)
  href: api/Application.Stores.SessionWriteStore.html#Application_Stores_SessionWriteStore__ctor_System_IServiceProvider_
  commentId: M:Application.Stores.SessionWriteStore.#ctor(System.IServiceProvider)
  name.vb: New(IServiceProvider)
  fullName: Application.Stores.SessionWriteStore.SessionWriteStore(System.IServiceProvider)
  fullName.vb: Application.Stores.SessionWriteStore.New(System.IServiceProvider)
  nameWithType: SessionWriteStore.SessionWriteStore(IServiceProvider)
  nameWithType.vb: SessionWriteStore.New(IServiceProvider)
- uid: Application.Stores.SessionWriteStore.#ctor*
  name: SessionWriteStore
  href: api/Application.Stores.SessionWriteStore.html#Application_Stores_SessionWriteStore__ctor_
  commentId: Overload:Application.Stores.SessionWriteStore.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Application.Stores.SessionWriteStore.SessionWriteStore
  fullName.vb: Application.Stores.SessionWriteStore.New
  nameWithType: SessionWriteStore.SessionWriteStore
  nameWithType.vb: SessionWriteStore.New
- uid: Application.Stores.SessionWriteStore.CreateAsync(Domain.Aggregates.Identity.Session)
  name: CreateAsync(Session)
  href: api/Application.Stores.SessionWriteStore.html#Application_Stores_SessionWriteStore_CreateAsync_Domain_Aggregates_Identity_Session_
  commentId: M:Application.Stores.SessionWriteStore.CreateAsync(Domain.Aggregates.Identity.Session)
  fullName: Application.Stores.SessionWriteStore.CreateAsync(Domain.Aggregates.Identity.Session)
  nameWithType: SessionWriteStore.CreateAsync(Session)
- uid: Application.Stores.SessionWriteStore.CreateAsync*
  name: CreateAsync
  href: api/Application.Stores.SessionWriteStore.html#Application_Stores_SessionWriteStore_CreateAsync_
  commentId: Overload:Application.Stores.SessionWriteStore.CreateAsync
  isSpec: "True"
  fullName: Application.Stores.SessionWriteStore.CreateAsync
  nameWithType: SessionWriteStore.CreateAsync
- uid: Application.Stores.SessionWriteStore.DeleteAsync(Domain.Aggregates.Identity.Session)
  name: DeleteAsync(Session)
  href: api/Application.Stores.SessionWriteStore.html#Application_Stores_SessionWriteStore_DeleteAsync_Domain_Aggregates_Identity_Session_
  commentId: M:Application.Stores.SessionWriteStore.DeleteAsync(Domain.Aggregates.Identity.Session)
  fullName: Application.Stores.SessionWriteStore.DeleteAsync(Domain.Aggregates.Identity.Session)
  nameWithType: SessionWriteStore.DeleteAsync(Session)
- uid: Application.Stores.SessionWriteStore.DeleteAsync*
  name: DeleteAsync
  href: api/Application.Stores.SessionWriteStore.html#Application_Stores_SessionWriteStore_DeleteAsync_
  commentId: Overload:Application.Stores.SessionWriteStore.DeleteAsync
  isSpec: "True"
  fullName: Application.Stores.SessionWriteStore.DeleteAsync
  nameWithType: SessionWriteStore.DeleteAsync
- uid: Application.Stores.SharedStore
  name: SharedStore
  href: api/Application.Stores.SharedStore.html
  commentId: T:Application.Stores.SharedStore
  fullName: Application.Stores.SharedStore
  nameWithType: SharedStore
- uid: Application.Stores.SharedStore.#ctor(System.IServiceProvider)
  name: SharedStore(IServiceProvider)
  href: api/Application.Stores.SharedStore.html#Application_Stores_SharedStore__ctor_System_IServiceProvider_
  commentId: M:Application.Stores.SharedStore.#ctor(System.IServiceProvider)
  name.vb: New(IServiceProvider)
  fullName: Application.Stores.SharedStore.SharedStore(System.IServiceProvider)
  fullName.vb: Application.Stores.SharedStore.New(System.IServiceProvider)
  nameWithType: SharedStore.SharedStore(IServiceProvider)
  nameWithType.vb: SharedStore.New(IServiceProvider)
- uid: Application.Stores.SharedStore.#ctor*
  name: SharedStore
  href: api/Application.Stores.SharedStore.html#Application_Stores_SharedStore__ctor_
  commentId: Overload:Application.Stores.SharedStore.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Application.Stores.SharedStore.SharedStore
  fullName.vb: Application.Stores.SharedStore.New
  nameWithType: SharedStore.SharedStore
  nameWithType.vb: SharedStore.New
- uid: Application.Stores.SharedStore.PurgeEntriesAsync*
  name: PurgeEntriesAsync
  href: api/Application.Stores.SharedStore.html#Application_Stores_SharedStore_PurgeEntriesAsync_
  commentId: Overload:Application.Stores.SharedStore.PurgeEntriesAsync
  isSpec: "True"
  fullName: Application.Stores.SharedStore.PurgeEntriesAsync
  nameWithType: SharedStore.PurgeEntriesAsync
- uid: Application.Stores.SharedStore.PurgeEntriesAsync``1(System.Threading.CancellationToken)
  name: PurgeEntriesAsync<TEntity>(CancellationToken)
  href: api/Application.Stores.SharedStore.html#Application_Stores_SharedStore_PurgeEntriesAsync__1_System_Threading_CancellationToken_
  commentId: M:Application.Stores.SharedStore.PurgeEntriesAsync``1(System.Threading.CancellationToken)
  name.vb: PurgeEntriesAsync(Of TEntity)(CancellationToken)
  fullName: Application.Stores.SharedStore.PurgeEntriesAsync<TEntity>(System.Threading.CancellationToken)
  fullName.vb: Application.Stores.SharedStore.PurgeEntriesAsync(Of TEntity)(System.Threading.CancellationToken)
  nameWithType: SharedStore.PurgeEntriesAsync<TEntity>(CancellationToken)
  nameWithType.vb: SharedStore.PurgeEntriesAsync(Of TEntity)(CancellationToken)
- uid: Application.Stores.StoreBase
  name: StoreBase
  href: api/Application.Stores.StoreBase.html
  commentId: T:Application.Stores.StoreBase
  fullName: Application.Stores.StoreBase
  nameWithType: StoreBase
- uid: Application.Stores.StoreBase.#ctor(System.IServiceProvider)
  name: StoreBase(IServiceProvider)
  href: api/Application.Stores.StoreBase.html#Application_Stores_StoreBase__ctor_System_IServiceProvider_
  commentId: M:Application.Stores.StoreBase.#ctor(System.IServiceProvider)
  name.vb: New(IServiceProvider)
  fullName: Application.Stores.StoreBase.StoreBase(System.IServiceProvider)
  fullName.vb: Application.Stores.StoreBase.New(System.IServiceProvider)
  nameWithType: StoreBase.StoreBase(IServiceProvider)
  nameWithType.vb: StoreBase.New(IServiceProvider)
- uid: Application.Stores.StoreBase.#ctor*
  name: StoreBase
  href: api/Application.Stores.StoreBase.html#Application_Stores_StoreBase__ctor_
  commentId: Overload:Application.Stores.StoreBase.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Application.Stores.StoreBase.StoreBase
  fullName.vb: Application.Stores.StoreBase.New
  nameWithType: StoreBase.StoreBase
  nameWithType.vb: StoreBase.New
- uid: Application.Stores.StoreBase.ApplicationReadStore
  name: ApplicationReadStore
  href: api/Application.Stores.StoreBase.html#Application_Stores_StoreBase_ApplicationReadStore
  commentId: P:Application.Stores.StoreBase.ApplicationReadStore
  fullName: Application.Stores.StoreBase.ApplicationReadStore
  nameWithType: StoreBase.ApplicationReadStore
- uid: Application.Stores.StoreBase.ApplicationReadStore*
  name: ApplicationReadStore
  href: api/Application.Stores.StoreBase.html#Application_Stores_StoreBase_ApplicationReadStore_
  commentId: Overload:Application.Stores.StoreBase.ApplicationReadStore
  isSpec: "True"
  fullName: Application.Stores.StoreBase.ApplicationReadStore
  nameWithType: StoreBase.ApplicationReadStore
- uid: Application.Stores.StoreBase.DbContext
  name: DbContext
  href: api/Application.Stores.StoreBase.html#Application_Stores_StoreBase_DbContext
  commentId: P:Application.Stores.StoreBase.DbContext
  fullName: Application.Stores.StoreBase.DbContext
  nameWithType: StoreBase.DbContext
- uid: Application.Stores.StoreBase.DbContext*
  name: DbContext
  href: api/Application.Stores.StoreBase.html#Application_Stores_StoreBase_DbContext_
  commentId: Overload:Application.Stores.StoreBase.DbContext
  isSpec: "True"
  fullName: Application.Stores.StoreBase.DbContext
  nameWithType: StoreBase.DbContext
- uid: Application.Stores.StoreBase.HttpContext
  name: HttpContext
  href: api/Application.Stores.StoreBase.html#Application_Stores_StoreBase_HttpContext
  commentId: P:Application.Stores.StoreBase.HttpContext
  fullName: Application.Stores.StoreBase.HttpContext
  nameWithType: StoreBase.HttpContext
- uid: Application.Stores.StoreBase.HttpContext*
  name: HttpContext
  href: api/Application.Stores.StoreBase.html#Application_Stores_StoreBase_HttpContext_
  commentId: Overload:Application.Stores.StoreBase.HttpContext
  isSpec: "True"
  fullName: Application.Stores.StoreBase.HttpContext
  nameWithType: StoreBase.HttpContext
- uid: Application.Stores.StoreBase.Services
  name: Services
  href: api/Application.Stores.StoreBase.html#Application_Stores_StoreBase_Services
  commentId: P:Application.Stores.StoreBase.Services
  fullName: Application.Stores.StoreBase.Services
  nameWithType: StoreBase.Services
- uid: Application.Stores.StoreBase.Services*
  name: Services
  href: api/Application.Stores.StoreBase.html#Application_Stores_StoreBase_Services_
  commentId: Overload:Application.Stores.StoreBase.Services
  isSpec: "True"
  fullName: Application.Stores.StoreBase.Services
  nameWithType: StoreBase.Services
- uid: Application.Stores.StoreBase.UserManager
  name: UserManager
  href: api/Application.Stores.StoreBase.html#Application_Stores_StoreBase_UserManager
  commentId: P:Application.Stores.StoreBase.UserManager
  fullName: Application.Stores.StoreBase.UserManager
  nameWithType: StoreBase.UserManager
- uid: Application.Stores.StoreBase.UserManager*
  name: UserManager
  href: api/Application.Stores.StoreBase.html#Application_Stores_StoreBase_UserManager_
  commentId: Overload:Application.Stores.StoreBase.UserManager
  isSpec: "True"
  fullName: Application.Stores.StoreBase.UserManager
  nameWithType: StoreBase.UserManager
- uid: Application.Stores.StoreBase.UserReadStore
  name: UserReadStore
  href: api/Application.Stores.StoreBase.html#Application_Stores_StoreBase_UserReadStore
  commentId: P:Application.Stores.StoreBase.UserReadStore
  fullName: Application.Stores.StoreBase.UserReadStore
  nameWithType: StoreBase.UserReadStore
- uid: Application.Stores.StoreBase.UserReadStore*
  name: UserReadStore
  href: api/Application.Stores.StoreBase.html#Application_Stores_StoreBase_UserReadStore_
  commentId: Overload:Application.Stores.StoreBase.UserReadStore
  isSpec: "True"
  fullName: Application.Stores.StoreBase.UserReadStore
  nameWithType: StoreBase.UserReadStore
- uid: Application.Stores.UserReadStore
  name: UserReadStore
  href: api/Application.Stores.UserReadStore.html
  commentId: T:Application.Stores.UserReadStore
  fullName: Application.Stores.UserReadStore
  nameWithType: UserReadStore
- uid: Application.Stores.UserReadStore.#ctor(System.IServiceProvider)
  name: UserReadStore(IServiceProvider)
  href: api/Application.Stores.UserReadStore.html#Application_Stores_UserReadStore__ctor_System_IServiceProvider_
  commentId: M:Application.Stores.UserReadStore.#ctor(System.IServiceProvider)
  name.vb: New(IServiceProvider)
  fullName: Application.Stores.UserReadStore.UserReadStore(System.IServiceProvider)
  fullName.vb: Application.Stores.UserReadStore.New(System.IServiceProvider)
  nameWithType: UserReadStore.UserReadStore(IServiceProvider)
  nameWithType.vb: UserReadStore.New(IServiceProvider)
- uid: Application.Stores.UserReadStore.#ctor*
  name: UserReadStore
  href: api/Application.Stores.UserReadStore.html#Application_Stores_UserReadStore__ctor_
  commentId: Overload:Application.Stores.UserReadStore.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Application.Stores.UserReadStore.UserReadStore
  fullName.vb: Application.Stores.UserReadStore.New
  nameWithType: UserReadStore.UserReadStore
  nameWithType.vb: UserReadStore.New
- uid: Application.Stores.UserReadStore.GetAllUsersAsync
  name: GetAllUsersAsync()
  href: api/Application.Stores.UserReadStore.html#Application_Stores_UserReadStore_GetAllUsersAsync
  commentId: M:Application.Stores.UserReadStore.GetAllUsersAsync
  fullName: Application.Stores.UserReadStore.GetAllUsersAsync()
  nameWithType: UserReadStore.GetAllUsersAsync()
- uid: Application.Stores.UserReadStore.GetAllUsersAsync*
  name: GetAllUsersAsync
  href: api/Application.Stores.UserReadStore.html#Application_Stores_UserReadStore_GetAllUsersAsync_
  commentId: Overload:Application.Stores.UserReadStore.GetAllUsersAsync
  isSpec: "True"
  fullName: Application.Stores.UserReadStore.GetAllUsersAsync
  nameWithType: UserReadStore.GetAllUsersAsync
- uid: Application.Stores.UserReadStore.GetUserByEmailAsync(System.Security.Claims.ClaimsPrincipal,System.Threading.CancellationToken)
  name: GetUserByEmailAsync(ClaimsPrincipal, CancellationToken)
  href: api/Application.Stores.UserReadStore.html#Application_Stores_UserReadStore_GetUserByEmailAsync_System_Security_Claims_ClaimsPrincipal_System_Threading_CancellationToken_
  commentId: M:Application.Stores.UserReadStore.GetUserByEmailAsync(System.Security.Claims.ClaimsPrincipal,System.Threading.CancellationToken)
  fullName: Application.Stores.UserReadStore.GetUserByEmailAsync(System.Security.Claims.ClaimsPrincipal, System.Threading.CancellationToken)
  nameWithType: UserReadStore.GetUserByEmailAsync(ClaimsPrincipal, CancellationToken)
- uid: Application.Stores.UserReadStore.GetUserByEmailAsync(System.String)
  name: GetUserByEmailAsync(string)
  href: api/Application.Stores.UserReadStore.html#Application_Stores_UserReadStore_GetUserByEmailAsync_System_String_
  commentId: M:Application.Stores.UserReadStore.GetUserByEmailAsync(System.String)
  name.vb: GetUserByEmailAsync(String)
  fullName: Application.Stores.UserReadStore.GetUserByEmailAsync(string)
  fullName.vb: Application.Stores.UserReadStore.GetUserByEmailAsync(String)
  nameWithType: UserReadStore.GetUserByEmailAsync(string)
  nameWithType.vb: UserReadStore.GetUserByEmailAsync(String)
- uid: Application.Stores.UserReadStore.GetUserByEmailAsync*
  name: GetUserByEmailAsync
  href: api/Application.Stores.UserReadStore.html#Application_Stores_UserReadStore_GetUserByEmailAsync_
  commentId: Overload:Application.Stores.UserReadStore.GetUserByEmailAsync
  isSpec: "True"
  fullName: Application.Stores.UserReadStore.GetUserByEmailAsync
  nameWithType: UserReadStore.GetUserByEmailAsync
- uid: Application.Stores.UserReadStore.GetUserByIdAsync(System.String)
  name: GetUserByIdAsync(string)
  href: api/Application.Stores.UserReadStore.html#Application_Stores_UserReadStore_GetUserByIdAsync_System_String_
  commentId: M:Application.Stores.UserReadStore.GetUserByIdAsync(System.String)
  name.vb: GetUserByIdAsync(String)
  fullName: Application.Stores.UserReadStore.GetUserByIdAsync(string)
  fullName.vb: Application.Stores.UserReadStore.GetUserByIdAsync(String)
  nameWithType: UserReadStore.GetUserByIdAsync(string)
  nameWithType.vb: UserReadStore.GetUserByIdAsync(String)
- uid: Application.Stores.UserReadStore.GetUserByIdAsync*
  name: GetUserByIdAsync
  href: api/Application.Stores.UserReadStore.html#Application_Stores_UserReadStore_GetUserByIdAsync_
  commentId: Overload:Application.Stores.UserReadStore.GetUserByIdAsync
  isSpec: "True"
  fullName: Application.Stores.UserReadStore.GetUserByIdAsync
  nameWithType: UserReadStore.GetUserByIdAsync
- uid: Application.Stores.UserReadStore.GetUserRolesAsync(System.String)
  name: GetUserRolesAsync(string)
  href: api/Application.Stores.UserReadStore.html#Application_Stores_UserReadStore_GetUserRolesAsync_System_String_
  commentId: M:Application.Stores.UserReadStore.GetUserRolesAsync(System.String)
  name.vb: GetUserRolesAsync(String)
  fullName: Application.Stores.UserReadStore.GetUserRolesAsync(string)
  fullName.vb: Application.Stores.UserReadStore.GetUserRolesAsync(String)
  nameWithType: UserReadStore.GetUserRolesAsync(string)
  nameWithType.vb: UserReadStore.GetUserRolesAsync(String)
- uid: Application.Stores.UserReadStore.GetUserRolesAsync*
  name: GetUserRolesAsync
  href: api/Application.Stores.UserReadStore.html#Application_Stores_UserReadStore_GetUserRolesAsync_
  commentId: Overload:Application.Stores.UserReadStore.GetUserRolesAsync
  isSpec: "True"
  fullName: Application.Stores.UserReadStore.GetUserRolesAsync
  nameWithType: UserReadStore.GetUserRolesAsync
- uid: Application.Stores.UserWriteStore
  name: UserWriteStore
  href: api/Application.Stores.UserWriteStore.html
  commentId: T:Application.Stores.UserWriteStore
  fullName: Application.Stores.UserWriteStore
  nameWithType: UserWriteStore
- uid: Application.Stores.UserWriteStore.#ctor(System.IServiceProvider)
  name: UserWriteStore(IServiceProvider)
  href: api/Application.Stores.UserWriteStore.html#Application_Stores_UserWriteStore__ctor_System_IServiceProvider_
  commentId: M:Application.Stores.UserWriteStore.#ctor(System.IServiceProvider)
  name.vb: New(IServiceProvider)
  fullName: Application.Stores.UserWriteStore.UserWriteStore(System.IServiceProvider)
  fullName.vb: Application.Stores.UserWriteStore.New(System.IServiceProvider)
  nameWithType: UserWriteStore.UserWriteStore(IServiceProvider)
  nameWithType.vb: UserWriteStore.New(IServiceProvider)
- uid: Application.Stores.UserWriteStore.#ctor*
  name: UserWriteStore
  href: api/Application.Stores.UserWriteStore.html#Application_Stores_UserWriteStore__ctor_
  commentId: Overload:Application.Stores.UserWriteStore.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Application.Stores.UserWriteStore.UserWriteStore
  fullName.vb: Application.Stores.UserWriteStore.New
  nameWithType: UserWriteStore.UserWriteStore
  nameWithType.vb: UserWriteStore.New
- uid: Application.Stores.UserWriteStore.ConfirmEmailAsync(Domain.Aggregates.Identity.User,System.String)
  name: ConfirmEmailAsync(User, string)
  href: api/Application.Stores.UserWriteStore.html#Application_Stores_UserWriteStore_ConfirmEmailAsync_Domain_Aggregates_Identity_User_System_String_
  commentId: M:Application.Stores.UserWriteStore.ConfirmEmailAsync(Domain.Aggregates.Identity.User,System.String)
  name.vb: ConfirmEmailAsync(User, String)
  fullName: Application.Stores.UserWriteStore.ConfirmEmailAsync(Domain.Aggregates.Identity.User, string)
  fullName.vb: Application.Stores.UserWriteStore.ConfirmEmailAsync(Domain.Aggregates.Identity.User, String)
  nameWithType: UserWriteStore.ConfirmEmailAsync(User, string)
  nameWithType.vb: UserWriteStore.ConfirmEmailAsync(User, String)
- uid: Application.Stores.UserWriteStore.ConfirmEmailAsync*
  name: ConfirmEmailAsync
  href: api/Application.Stores.UserWriteStore.html#Application_Stores_UserWriteStore_ConfirmEmailAsync_
  commentId: Overload:Application.Stores.UserWriteStore.ConfirmEmailAsync
  isSpec: "True"
  fullName: Application.Stores.UserWriteStore.ConfirmEmailAsync
  nameWithType: UserWriteStore.ConfirmEmailAsync
- uid: Application.Stores.UserWriteStore.CreateUserAsync(Api.Requests.RegisterRequest,System.Threading.CancellationToken)
  name: CreateUserAsync(RegisterRequest, CancellationToken)
  href: api/Application.Stores.UserWriteStore.html#Application_Stores_UserWriteStore_CreateUserAsync_Api_Requests_RegisterRequest_System_Threading_CancellationToken_
  commentId: M:Application.Stores.UserWriteStore.CreateUserAsync(Api.Requests.RegisterRequest,System.Threading.CancellationToken)
  fullName: Application.Stores.UserWriteStore.CreateUserAsync(Api.Requests.RegisterRequest, System.Threading.CancellationToken)
  nameWithType: UserWriteStore.CreateUserAsync(RegisterRequest, CancellationToken)
- uid: Application.Stores.UserWriteStore.CreateUserAsync*
  name: CreateUserAsync
  href: api/Application.Stores.UserWriteStore.html#Application_Stores_UserWriteStore_CreateUserAsync_
  commentId: Overload:Application.Stores.UserWriteStore.CreateUserAsync
  isSpec: "True"
  fullName: Application.Stores.UserWriteStore.CreateUserAsync
  nameWithType: UserWriteStore.CreateUserAsync
- uid: Application.Stores.UserWriteStore.RedeemMultiFactorRecoveryCodeAsync(Domain.Aggregates.Identity.User,System.String)
  name: RedeemMultiFactorRecoveryCodeAsync(User, string)
  href: api/Application.Stores.UserWriteStore.html#Application_Stores_UserWriteStore_RedeemMultiFactorRecoveryCodeAsync_Domain_Aggregates_Identity_User_System_String_
  commentId: M:Application.Stores.UserWriteStore.RedeemMultiFactorRecoveryCodeAsync(Domain.Aggregates.Identity.User,System.String)
  name.vb: RedeemMultiFactorRecoveryCodeAsync(User, String)
  fullName: Application.Stores.UserWriteStore.RedeemMultiFactorRecoveryCodeAsync(Domain.Aggregates.Identity.User, string)
  fullName.vb: Application.Stores.UserWriteStore.RedeemMultiFactorRecoveryCodeAsync(Domain.Aggregates.Identity.User, String)
  nameWithType: UserWriteStore.RedeemMultiFactorRecoveryCodeAsync(User, string)
  nameWithType.vb: UserWriteStore.RedeemMultiFactorRecoveryCodeAsync(User, String)
- uid: Application.Stores.UserWriteStore.RedeemMultiFactorRecoveryCodeAsync*
  name: RedeemMultiFactorRecoveryCodeAsync
  href: api/Application.Stores.UserWriteStore.html#Application_Stores_UserWriteStore_RedeemMultiFactorRecoveryCodeAsync_
  commentId: Overload:Application.Stores.UserWriteStore.RedeemMultiFactorRecoveryCodeAsync
  isSpec: "True"
  fullName: Application.Stores.UserWriteStore.RedeemMultiFactorRecoveryCodeAsync
  nameWithType: UserWriteStore.RedeemMultiFactorRecoveryCodeAsync
- uid: Application.Stores.UserWriteStore.ResetPasswordAsync(Domain.Aggregates.Identity.User,System.String,System.String)
  name: ResetPasswordAsync(User, string, string)
  href: api/Application.Stores.UserWriteStore.html#Application_Stores_UserWriteStore_ResetPasswordAsync_Domain_Aggregates_Identity_User_System_String_System_String_
  commentId: M:Application.Stores.UserWriteStore.ResetPasswordAsync(Domain.Aggregates.Identity.User,System.String,System.String)
  name.vb: ResetPasswordAsync(User, String, String)
  fullName: Application.Stores.UserWriteStore.ResetPasswordAsync(Domain.Aggregates.Identity.User, string, string)
  fullName.vb: Application.Stores.UserWriteStore.ResetPasswordAsync(Domain.Aggregates.Identity.User, String, String)
  nameWithType: UserWriteStore.ResetPasswordAsync(User, string, string)
  nameWithType.vb: UserWriteStore.ResetPasswordAsync(User, String, String)
- uid: Application.Stores.UserWriteStore.ResetPasswordAsync*
  name: ResetPasswordAsync
  href: api/Application.Stores.UserWriteStore.html#Application_Stores_UserWriteStore_ResetPasswordAsync_
  commentId: Overload:Application.Stores.UserWriteStore.ResetPasswordAsync
  isSpec: "True"
  fullName: Application.Stores.UserWriteStore.ResetPasswordAsync
  nameWithType: UserWriteStore.ResetPasswordAsync
- uid: Application.Stores.UserWriteStore.SoftDeleteUserAsync(System.Security.Claims.ClaimsPrincipal,System.Threading.CancellationToken)
  name: SoftDeleteUserAsync(ClaimsPrincipal, CancellationToken)
  href: api/Application.Stores.UserWriteStore.html#Application_Stores_UserWriteStore_SoftDeleteUserAsync_System_Security_Claims_ClaimsPrincipal_System_Threading_CancellationToken_
  commentId: M:Application.Stores.UserWriteStore.SoftDeleteUserAsync(System.Security.Claims.ClaimsPrincipal,System.Threading.CancellationToken)
  fullName: Application.Stores.UserWriteStore.SoftDeleteUserAsync(System.Security.Claims.ClaimsPrincipal, System.Threading.CancellationToken)
  nameWithType: UserWriteStore.SoftDeleteUserAsync(ClaimsPrincipal, CancellationToken)
- uid: Application.Stores.UserWriteStore.SoftDeleteUserAsync*
  name: SoftDeleteUserAsync
  href: api/Application.Stores.UserWriteStore.html#Application_Stores_UserWriteStore_SoftDeleteUserAsync_
  commentId: Overload:Application.Stores.UserWriteStore.SoftDeleteUserAsync
  isSpec: "True"
  fullName: Application.Stores.UserWriteStore.SoftDeleteUserAsync
  nameWithType: UserWriteStore.SoftDeleteUserAsync
- uid: Application.Stores.UserWriteStore.UpdateEmailAsync(Domain.Aggregates.Identity.User,System.String,System.String)
  name: UpdateEmailAsync(User, string, string)
  href: api/Application.Stores.UserWriteStore.html#Application_Stores_UserWriteStore_UpdateEmailAsync_Domain_Aggregates_Identity_User_System_String_System_String_
  commentId: M:Application.Stores.UserWriteStore.UpdateEmailAsync(Domain.Aggregates.Identity.User,System.String,System.String)
  name.vb: UpdateEmailAsync(User, String, String)
  fullName: Application.Stores.UserWriteStore.UpdateEmailAsync(Domain.Aggregates.Identity.User, string, string)
  fullName.vb: Application.Stores.UserWriteStore.UpdateEmailAsync(Domain.Aggregates.Identity.User, String, String)
  nameWithType: UserWriteStore.UpdateEmailAsync(User, string, string)
  nameWithType.vb: UserWriteStore.UpdateEmailAsync(User, String, String)
- uid: Application.Stores.UserWriteStore.UpdateEmailAsync*
  name: UpdateEmailAsync
  href: api/Application.Stores.UserWriteStore.html#Application_Stores_UserWriteStore_UpdateEmailAsync_
  commentId: Overload:Application.Stores.UserWriteStore.UpdateEmailAsync
  isSpec: "True"
  fullName: Application.Stores.UserWriteStore.UpdateEmailAsync
  nameWithType: UserWriteStore.UpdateEmailAsync
- uid: Application.Stores.UserWriteStore.UpdatePhoneNumberAsync(Domain.Aggregates.Identity.User,System.String,System.String)
  name: UpdatePhoneNumberAsync(User, string, string)
  href: api/Application.Stores.UserWriteStore.html#Application_Stores_UserWriteStore_UpdatePhoneNumberAsync_Domain_Aggregates_Identity_User_System_String_System_String_
  commentId: M:Application.Stores.UserWriteStore.UpdatePhoneNumberAsync(Domain.Aggregates.Identity.User,System.String,System.String)
  name.vb: UpdatePhoneNumberAsync(User, String, String)
  fullName: Application.Stores.UserWriteStore.UpdatePhoneNumberAsync(Domain.Aggregates.Identity.User, string, string)
  fullName.vb: Application.Stores.UserWriteStore.UpdatePhoneNumberAsync(Domain.Aggregates.Identity.User, String, String)
  nameWithType: UserWriteStore.UpdatePhoneNumberAsync(User, string, string)
  nameWithType.vb: UserWriteStore.UpdatePhoneNumberAsync(User, String, String)
- uid: Application.Stores.UserWriteStore.UpdatePhoneNumberAsync*
  name: UpdatePhoneNumberAsync
  href: api/Application.Stores.UserWriteStore.html#Application_Stores_UserWriteStore_UpdatePhoneNumberAsync_
  commentId: Overload:Application.Stores.UserWriteStore.UpdatePhoneNumberAsync
  isSpec: "True"
  fullName: Application.Stores.UserWriteStore.UpdatePhoneNumberAsync
  nameWithType: UserWriteStore.UpdatePhoneNumberAsync
- uid: Application.Validators
  name: Application.Validators
  href: api/Application.Validators.html
  commentId: N:Application.Validators
  fullName: Application.Validators
  nameWithType: Application.Validators
- uid: Application.Validators.AddressValidator
  name: AddressValidator
  href: api/Application.Validators.AddressValidator.html
  commentId: T:Application.Validators.AddressValidator
  fullName: Application.Validators.AddressValidator
  nameWithType: AddressValidator
- uid: Application.Validators.AddressValidator.#ctor
  name: AddressValidator()
  href: api/Application.Validators.AddressValidator.html#Application_Validators_AddressValidator__ctor
  commentId: M:Application.Validators.AddressValidator.#ctor
  name.vb: New()
  fullName: Application.Validators.AddressValidator.AddressValidator()
  fullName.vb: Application.Validators.AddressValidator.New()
  nameWithType: AddressValidator.AddressValidator()
  nameWithType.vb: AddressValidator.New()
- uid: Application.Validators.AddressValidator.#ctor*
  name: AddressValidator
  href: api/Application.Validators.AddressValidator.html#Application_Validators_AddressValidator__ctor_
  commentId: Overload:Application.Validators.AddressValidator.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Application.Validators.AddressValidator.AddressValidator
  fullName.vb: Application.Validators.AddressValidator.New
  nameWithType: AddressValidator.AddressValidator
  nameWithType.vb: AddressValidator.New
- uid: Application.Validators.AuthorizeRequestValidator
  name: AuthorizeRequestValidator
  href: api/Application.Validators.AuthorizeRequestValidator.html
  commentId: T:Application.Validators.AuthorizeRequestValidator
  fullName: Application.Validators.AuthorizeRequestValidator
  nameWithType: AuthorizeRequestValidator
- uid: Application.Validators.AuthorizeRequestValidator.#ctor
  name: AuthorizeRequestValidator()
  href: api/Application.Validators.AuthorizeRequestValidator.html#Application_Validators_AuthorizeRequestValidator__ctor
  commentId: M:Application.Validators.AuthorizeRequestValidator.#ctor
  name.vb: New()
  fullName: Application.Validators.AuthorizeRequestValidator.AuthorizeRequestValidator()
  fullName.vb: Application.Validators.AuthorizeRequestValidator.New()
  nameWithType: AuthorizeRequestValidator.AuthorizeRequestValidator()
  nameWithType.vb: AuthorizeRequestValidator.New()
- uid: Application.Validators.AuthorizeRequestValidator.#ctor*
  name: AuthorizeRequestValidator
  href: api/Application.Validators.AuthorizeRequestValidator.html#Application_Validators_AuthorizeRequestValidator__ctor_
  commentId: Overload:Application.Validators.AuthorizeRequestValidator.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Application.Validators.AuthorizeRequestValidator.AuthorizeRequestValidator
  fullName.vb: Application.Validators.AuthorizeRequestValidator.New
  nameWithType: AuthorizeRequestValidator.AuthorizeRequestValidator
  nameWithType.vb: AuthorizeRequestValidator.New
- uid: Application.Validators.ConfirmEmailRequestValidator
  name: ConfirmEmailRequestValidator
  href: api/Application.Validators.ConfirmEmailRequestValidator.html
  commentId: T:Application.Validators.ConfirmEmailRequestValidator
  fullName: Application.Validators.ConfirmEmailRequestValidator
  nameWithType: ConfirmEmailRequestValidator
- uid: Application.Validators.ConfirmEmailRequestValidator.#ctor
  name: ConfirmEmailRequestValidator()
  href: api/Application.Validators.ConfirmEmailRequestValidator.html#Application_Validators_ConfirmEmailRequestValidator__ctor
  commentId: M:Application.Validators.ConfirmEmailRequestValidator.#ctor
  name.vb: New()
  fullName: Application.Validators.ConfirmEmailRequestValidator.ConfirmEmailRequestValidator()
  fullName.vb: Application.Validators.ConfirmEmailRequestValidator.New()
  nameWithType: ConfirmEmailRequestValidator.ConfirmEmailRequestValidator()
  nameWithType.vb: ConfirmEmailRequestValidator.New()
- uid: Application.Validators.ConfirmEmailRequestValidator.#ctor*
  name: ConfirmEmailRequestValidator
  href: api/Application.Validators.ConfirmEmailRequestValidator.html#Application_Validators_ConfirmEmailRequestValidator__ctor_
  commentId: Overload:Application.Validators.ConfirmEmailRequestValidator.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Application.Validators.ConfirmEmailRequestValidator.ConfirmEmailRequestValidator
  fullName.vb: Application.Validators.ConfirmEmailRequestValidator.New
  nameWithType: ConfirmEmailRequestValidator.ConfirmEmailRequestValidator
  nameWithType.vb: ConfirmEmailRequestValidator.New
- uid: Application.Validators.CreateApplicationRequestValidator
  name: CreateApplicationRequestValidator
  href: api/Application.Validators.CreateApplicationRequestValidator.html
  commentId: T:Application.Validators.CreateApplicationRequestValidator
  fullName: Application.Validators.CreateApplicationRequestValidator
  nameWithType: CreateApplicationRequestValidator
- uid: Application.Validators.CreateApplicationRequestValidator.#ctor
  name: CreateApplicationRequestValidator()
  href: api/Application.Validators.CreateApplicationRequestValidator.html#Application_Validators_CreateApplicationRequestValidator__ctor
  commentId: M:Application.Validators.CreateApplicationRequestValidator.#ctor
  name.vb: New()
  fullName: Application.Validators.CreateApplicationRequestValidator.CreateApplicationRequestValidator()
  fullName.vb: Application.Validators.CreateApplicationRequestValidator.New()
  nameWithType: CreateApplicationRequestValidator.CreateApplicationRequestValidator()
  nameWithType.vb: CreateApplicationRequestValidator.New()
- uid: Application.Validators.CreateApplicationRequestValidator.#ctor*
  name: CreateApplicationRequestValidator
  href: api/Application.Validators.CreateApplicationRequestValidator.html#Application_Validators_CreateApplicationRequestValidator__ctor_
  commentId: Overload:Application.Validators.CreateApplicationRequestValidator.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Application.Validators.CreateApplicationRequestValidator.CreateApplicationRequestValidator
  fullName.vb: Application.Validators.CreateApplicationRequestValidator.New
  nameWithType: CreateApplicationRequestValidator.CreateApplicationRequestValidator
  nameWithType.vb: CreateApplicationRequestValidator.New
- uid: Application.Validators.CreateApplicationSecretRequestValidator
  name: CreateApplicationSecretRequestValidator
  href: api/Application.Validators.CreateApplicationSecretRequestValidator.html
  commentId: T:Application.Validators.CreateApplicationSecretRequestValidator
  fullName: Application.Validators.CreateApplicationSecretRequestValidator
  nameWithType: CreateApplicationSecretRequestValidator
- uid: Application.Validators.CreateApplicationSecretRequestValidator.#ctor
  name: CreateApplicationSecretRequestValidator()
  href: api/Application.Validators.CreateApplicationSecretRequestValidator.html#Application_Validators_CreateApplicationSecretRequestValidator__ctor
  commentId: M:Application.Validators.CreateApplicationSecretRequestValidator.#ctor
  name.vb: New()
  fullName: Application.Validators.CreateApplicationSecretRequestValidator.CreateApplicationSecretRequestValidator()
  fullName.vb: Application.Validators.CreateApplicationSecretRequestValidator.New()
  nameWithType: CreateApplicationSecretRequestValidator.CreateApplicationSecretRequestValidator()
  nameWithType.vb: CreateApplicationSecretRequestValidator.New()
- uid: Application.Validators.CreateApplicationSecretRequestValidator.#ctor*
  name: CreateApplicationSecretRequestValidator
  href: api/Application.Validators.CreateApplicationSecretRequestValidator.html#Application_Validators_CreateApplicationSecretRequestValidator__ctor_
  commentId: Overload:Application.Validators.CreateApplicationSecretRequestValidator.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Application.Validators.CreateApplicationSecretRequestValidator.CreateApplicationSecretRequestValidator
  fullName.vb: Application.Validators.CreateApplicationSecretRequestValidator.New
  nameWithType: CreateApplicationSecretRequestValidator.CreateApplicationSecretRequestValidator
  nameWithType.vb: CreateApplicationSecretRequestValidator.New
- uid: Application.Validators.DeleteApplicationByNameRequestValidator
  name: DeleteApplicationByNameRequestValidator
  href: api/Application.Validators.DeleteApplicationByNameRequestValidator.html
  commentId: T:Application.Validators.DeleteApplicationByNameRequestValidator
  fullName: Application.Validators.DeleteApplicationByNameRequestValidator
  nameWithType: DeleteApplicationByNameRequestValidator
- uid: Application.Validators.DeleteApplicationByNameRequestValidator.#ctor
  name: DeleteApplicationByNameRequestValidator()
  href: api/Application.Validators.DeleteApplicationByNameRequestValidator.html#Application_Validators_DeleteApplicationByNameRequestValidator__ctor
  commentId: M:Application.Validators.DeleteApplicationByNameRequestValidator.#ctor
  name.vb: New()
  fullName: Application.Validators.DeleteApplicationByNameRequestValidator.DeleteApplicationByNameRequestValidator()
  fullName.vb: Application.Validators.DeleteApplicationByNameRequestValidator.New()
  nameWithType: DeleteApplicationByNameRequestValidator.DeleteApplicationByNameRequestValidator()
  nameWithType.vb: DeleteApplicationByNameRequestValidator.New()
- uid: Application.Validators.DeleteApplicationByNameRequestValidator.#ctor*
  name: DeleteApplicationByNameRequestValidator
  href: api/Application.Validators.DeleteApplicationByNameRequestValidator.html#Application_Validators_DeleteApplicationByNameRequestValidator__ctor_
  commentId: Overload:Application.Validators.DeleteApplicationByNameRequestValidator.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Application.Validators.DeleteApplicationByNameRequestValidator.DeleteApplicationByNameRequestValidator
  fullName.vb: Application.Validators.DeleteApplicationByNameRequestValidator.New
  nameWithType: DeleteApplicationByNameRequestValidator.DeleteApplicationByNameRequestValidator
  nameWithType.vb: DeleteApplicationByNameRequestValidator.New
- uid: Application.Validators.LoginRequestValidator
  name: LoginRequestValidator
  href: api/Application.Validators.LoginRequestValidator.html
  commentId: T:Application.Validators.LoginRequestValidator
  fullName: Application.Validators.LoginRequestValidator
  nameWithType: LoginRequestValidator
- uid: Application.Validators.LoginRequestValidator.#ctor
  name: LoginRequestValidator()
  href: api/Application.Validators.LoginRequestValidator.html#Application_Validators_LoginRequestValidator__ctor
  commentId: M:Application.Validators.LoginRequestValidator.#ctor
  name.vb: New()
  fullName: Application.Validators.LoginRequestValidator.LoginRequestValidator()
  fullName.vb: Application.Validators.LoginRequestValidator.New()
  nameWithType: LoginRequestValidator.LoginRequestValidator()
  nameWithType.vb: LoginRequestValidator.New()
- uid: Application.Validators.LoginRequestValidator.#ctor*
  name: LoginRequestValidator
  href: api/Application.Validators.LoginRequestValidator.html#Application_Validators_LoginRequestValidator__ctor_
  commentId: Overload:Application.Validators.LoginRequestValidator.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Application.Validators.LoginRequestValidator.LoginRequestValidator
  fullName.vb: Application.Validators.LoginRequestValidator.New
  nameWithType: LoginRequestValidator.LoginRequestValidator
  nameWithType.vb: LoginRequestValidator.New
- uid: Application.Validators.MultiFactorLoginRequestValidator
  name: MultiFactorLoginRequestValidator
  href: api/Application.Validators.MultiFactorLoginRequestValidator.html
  commentId: T:Application.Validators.MultiFactorLoginRequestValidator
  fullName: Application.Validators.MultiFactorLoginRequestValidator
  nameWithType: MultiFactorLoginRequestValidator
- uid: Application.Validators.MultiFactorLoginRequestValidator.#ctor
  name: MultiFactorLoginRequestValidator()
  href: api/Application.Validators.MultiFactorLoginRequestValidator.html#Application_Validators_MultiFactorLoginRequestValidator__ctor
  commentId: M:Application.Validators.MultiFactorLoginRequestValidator.#ctor
  name.vb: New()
  fullName: Application.Validators.MultiFactorLoginRequestValidator.MultiFactorLoginRequestValidator()
  fullName.vb: Application.Validators.MultiFactorLoginRequestValidator.New()
  nameWithType: MultiFactorLoginRequestValidator.MultiFactorLoginRequestValidator()
  nameWithType.vb: MultiFactorLoginRequestValidator.New()
- uid: Application.Validators.MultiFactorLoginRequestValidator.#ctor*
  name: MultiFactorLoginRequestValidator
  href: api/Application.Validators.MultiFactorLoginRequestValidator.html#Application_Validators_MultiFactorLoginRequestValidator__ctor_
  commentId: Overload:Application.Validators.MultiFactorLoginRequestValidator.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Application.Validators.MultiFactorLoginRequestValidator.MultiFactorLoginRequestValidator
  fullName.vb: Application.Validators.MultiFactorLoginRequestValidator.New
  nameWithType: MultiFactorLoginRequestValidator.MultiFactorLoginRequestValidator
  nameWithType.vb: MultiFactorLoginRequestValidator.New
- uid: Application.Validators.MultiFactorRecoveryCodeRedeemRequestValidator
  name: MultiFactorRecoveryCodeRedeemRequestValidator
  href: api/Application.Validators.MultiFactorRecoveryCodeRedeemRequestValidator.html
  commentId: T:Application.Validators.MultiFactorRecoveryCodeRedeemRequestValidator
  fullName: Application.Validators.MultiFactorRecoveryCodeRedeemRequestValidator
  nameWithType: MultiFactorRecoveryCodeRedeemRequestValidator
- uid: Application.Validators.MultiFactorRecoveryCodeRedeemRequestValidator.#ctor
  name: MultiFactorRecoveryCodeRedeemRequestValidator()
  href: api/Application.Validators.MultiFactorRecoveryCodeRedeemRequestValidator.html#Application_Validators_MultiFactorRecoveryCodeRedeemRequestValidator__ctor
  commentId: M:Application.Validators.MultiFactorRecoveryCodeRedeemRequestValidator.#ctor
  name.vb: New()
  fullName: Application.Validators.MultiFactorRecoveryCodeRedeemRequestValidator.MultiFactorRecoveryCodeRedeemRequestValidator()
  fullName.vb: Application.Validators.MultiFactorRecoveryCodeRedeemRequestValidator.New()
  nameWithType: MultiFactorRecoveryCodeRedeemRequestValidator.MultiFactorRecoveryCodeRedeemRequestValidator()
  nameWithType.vb: MultiFactorRecoveryCodeRedeemRequestValidator.New()
- uid: Application.Validators.MultiFactorRecoveryCodeRedeemRequestValidator.#ctor*
  name: MultiFactorRecoveryCodeRedeemRequestValidator
  href: api/Application.Validators.MultiFactorRecoveryCodeRedeemRequestValidator.html#Application_Validators_MultiFactorRecoveryCodeRedeemRequestValidator__ctor_
  commentId: Overload:Application.Validators.MultiFactorRecoveryCodeRedeemRequestValidator.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Application.Validators.MultiFactorRecoveryCodeRedeemRequestValidator.MultiFactorRecoveryCodeRedeemRequestValidator
  fullName.vb: Application.Validators.MultiFactorRecoveryCodeRedeemRequestValidator.New
  nameWithType: MultiFactorRecoveryCodeRedeemRequestValidator.MultiFactorRecoveryCodeRedeemRequestValidator
  nameWithType.vb: MultiFactorRecoveryCodeRedeemRequestValidator.New
- uid: Application.Validators.PasswordResetRequestValidator
  name: PasswordResetRequestValidator
  href: api/Application.Validators.PasswordResetRequestValidator.html
  commentId: T:Application.Validators.PasswordResetRequestValidator
  fullName: Application.Validators.PasswordResetRequestValidator
  nameWithType: PasswordResetRequestValidator
- uid: Application.Validators.PasswordResetRequestValidator.#ctor
  name: PasswordResetRequestValidator()
  href: api/Application.Validators.PasswordResetRequestValidator.html#Application_Validators_PasswordResetRequestValidator__ctor
  commentId: M:Application.Validators.PasswordResetRequestValidator.#ctor
  name.vb: New()
  fullName: Application.Validators.PasswordResetRequestValidator.PasswordResetRequestValidator()
  fullName.vb: Application.Validators.PasswordResetRequestValidator.New()
  nameWithType: PasswordResetRequestValidator.PasswordResetRequestValidator()
  nameWithType.vb: PasswordResetRequestValidator.New()
- uid: Application.Validators.PasswordResetRequestValidator.#ctor*
  name: PasswordResetRequestValidator
  href: api/Application.Validators.PasswordResetRequestValidator.html#Application_Validators_PasswordResetRequestValidator__ctor_
  commentId: Overload:Application.Validators.PasswordResetRequestValidator.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Application.Validators.PasswordResetRequestValidator.PasswordResetRequestValidator
  fullName.vb: Application.Validators.PasswordResetRequestValidator.New
  nameWithType: PasswordResetRequestValidator.PasswordResetRequestValidator
  nameWithType.vb: PasswordResetRequestValidator.New
- uid: Application.Validators.ReadApplicationByNameRequestValidator
  name: ReadApplicationByNameRequestValidator
  href: api/Application.Validators.ReadApplicationByNameRequestValidator.html
  commentId: T:Application.Validators.ReadApplicationByNameRequestValidator
  fullName: Application.Validators.ReadApplicationByNameRequestValidator
  nameWithType: ReadApplicationByNameRequestValidator
- uid: Application.Validators.ReadApplicationByNameRequestValidator.#ctor
  name: ReadApplicationByNameRequestValidator()
  href: api/Application.Validators.ReadApplicationByNameRequestValidator.html#Application_Validators_ReadApplicationByNameRequestValidator__ctor
  commentId: M:Application.Validators.ReadApplicationByNameRequestValidator.#ctor
  name.vb: New()
  fullName: Application.Validators.ReadApplicationByNameRequestValidator.ReadApplicationByNameRequestValidator()
  fullName.vb: Application.Validators.ReadApplicationByNameRequestValidator.New()
  nameWithType: ReadApplicationByNameRequestValidator.ReadApplicationByNameRequestValidator()
  nameWithType.vb: ReadApplicationByNameRequestValidator.New()
- uid: Application.Validators.ReadApplicationByNameRequestValidator.#ctor*
  name: ReadApplicationByNameRequestValidator
  href: api/Application.Validators.ReadApplicationByNameRequestValidator.html#Application_Validators_ReadApplicationByNameRequestValidator__ctor_
  commentId: Overload:Application.Validators.ReadApplicationByNameRequestValidator.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Application.Validators.ReadApplicationByNameRequestValidator.ReadApplicationByNameRequestValidator
  fullName.vb: Application.Validators.ReadApplicationByNameRequestValidator.New
  nameWithType: ReadApplicationByNameRequestValidator.ReadApplicationByNameRequestValidator
  nameWithType.vb: ReadApplicationByNameRequestValidator.New
- uid: Application.Validators.RegisterRequestValidator
  name: RegisterRequestValidator
  href: api/Application.Validators.RegisterRequestValidator.html
  commentId: T:Application.Validators.RegisterRequestValidator
  fullName: Application.Validators.RegisterRequestValidator
  nameWithType: RegisterRequestValidator
- uid: Application.Validators.RegisterRequestValidator.#ctor
  name: RegisterRequestValidator()
  href: api/Application.Validators.RegisterRequestValidator.html#Application_Validators_RegisterRequestValidator__ctor
  commentId: M:Application.Validators.RegisterRequestValidator.#ctor
  name.vb: New()
  fullName: Application.Validators.RegisterRequestValidator.RegisterRequestValidator()
  fullName.vb: Application.Validators.RegisterRequestValidator.New()
  nameWithType: RegisterRequestValidator.RegisterRequestValidator()
  nameWithType.vb: RegisterRequestValidator.New()
- uid: Application.Validators.RegisterRequestValidator.#ctor*
  name: RegisterRequestValidator
  href: api/Application.Validators.RegisterRequestValidator.html#Application_Validators_RegisterRequestValidator__ctor_
  commentId: Overload:Application.Validators.RegisterRequestValidator.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Application.Validators.RegisterRequestValidator.RegisterRequestValidator
  fullName.vb: Application.Validators.RegisterRequestValidator.New
  nameWithType: RegisterRequestValidator.RegisterRequestValidator
  nameWithType.vb: RegisterRequestValidator.New
- uid: Application.Validators.SendTokenRequestValidator
  name: SendTokenRequestValidator
  href: api/Application.Validators.SendTokenRequestValidator.html
  commentId: T:Application.Validators.SendTokenRequestValidator
  fullName: Application.Validators.SendTokenRequestValidator
  nameWithType: SendTokenRequestValidator
- uid: Application.Validators.SendTokenRequestValidator.#ctor
  name: SendTokenRequestValidator()
  href: api/Application.Validators.SendTokenRequestValidator.html#Application_Validators_SendTokenRequestValidator__ctor
  commentId: M:Application.Validators.SendTokenRequestValidator.#ctor
  name.vb: New()
  fullName: Application.Validators.SendTokenRequestValidator.SendTokenRequestValidator()
  fullName.vb: Application.Validators.SendTokenRequestValidator.New()
  nameWithType: SendTokenRequestValidator.SendTokenRequestValidator()
  nameWithType.vb: SendTokenRequestValidator.New()
- uid: Application.Validators.SendTokenRequestValidator.#ctor*
  name: SendTokenRequestValidator
  href: api/Application.Validators.SendTokenRequestValidator.html#Application_Validators_SendTokenRequestValidator__ctor_
  commentId: Overload:Application.Validators.SendTokenRequestValidator.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Application.Validators.SendTokenRequestValidator.SendTokenRequestValidator
  fullName.vb: Application.Validators.SendTokenRequestValidator.New
  nameWithType: SendTokenRequestValidator.SendTokenRequestValidator
  nameWithType.vb: SendTokenRequestValidator.New
- uid: Application.Validators.TokenRequestValidator
  name: TokenRequestValidator
  href: api/Application.Validators.TokenRequestValidator.html
  commentId: T:Application.Validators.TokenRequestValidator
  fullName: Application.Validators.TokenRequestValidator
  nameWithType: TokenRequestValidator
- uid: Application.Validators.TokenRequestValidator.#ctor
  name: TokenRequestValidator()
  href: api/Application.Validators.TokenRequestValidator.html#Application_Validators_TokenRequestValidator__ctor
  commentId: M:Application.Validators.TokenRequestValidator.#ctor
  name.vb: New()
  fullName: Application.Validators.TokenRequestValidator.TokenRequestValidator()
  fullName.vb: Application.Validators.TokenRequestValidator.New()
  nameWithType: TokenRequestValidator.TokenRequestValidator()
  nameWithType.vb: TokenRequestValidator.New()
- uid: Application.Validators.TokenRequestValidator.#ctor*
  name: TokenRequestValidator
  href: api/Application.Validators.TokenRequestValidator.html#Application_Validators_TokenRequestValidator__ctor_
  commentId: Overload:Application.Validators.TokenRequestValidator.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Application.Validators.TokenRequestValidator.TokenRequestValidator
  fullName.vb: Application.Validators.TokenRequestValidator.New
  nameWithType: TokenRequestValidator.TokenRequestValidator
  nameWithType.vb: TokenRequestValidator.New
- uid: Application.Validators.UpdateAddressRequestValidator
  name: UpdateAddressRequestValidator
  href: api/Application.Validators.UpdateAddressRequestValidator.html
  commentId: T:Application.Validators.UpdateAddressRequestValidator
  fullName: Application.Validators.UpdateAddressRequestValidator
  nameWithType: UpdateAddressRequestValidator
- uid: Application.Validators.UpdateAddressRequestValidator.#ctor
  name: UpdateAddressRequestValidator()
  href: api/Application.Validators.UpdateAddressRequestValidator.html#Application_Validators_UpdateAddressRequestValidator__ctor
  commentId: M:Application.Validators.UpdateAddressRequestValidator.#ctor
  name.vb: New()
  fullName: Application.Validators.UpdateAddressRequestValidator.UpdateAddressRequestValidator()
  fullName.vb: Application.Validators.UpdateAddressRequestValidator.New()
  nameWithType: UpdateAddressRequestValidator.UpdateAddressRequestValidator()
  nameWithType.vb: UpdateAddressRequestValidator.New()
- uid: Application.Validators.UpdateAddressRequestValidator.#ctor*
  name: UpdateAddressRequestValidator
  href: api/Application.Validators.UpdateAddressRequestValidator.html#Application_Validators_UpdateAddressRequestValidator__ctor_
  commentId: Overload:Application.Validators.UpdateAddressRequestValidator.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Application.Validators.UpdateAddressRequestValidator.UpdateAddressRequestValidator
  fullName.vb: Application.Validators.UpdateAddressRequestValidator.New
  nameWithType: UpdateAddressRequestValidator.UpdateAddressRequestValidator
  nameWithType.vb: UpdateAddressRequestValidator.New
- uid: Application.Validators.UpdateApplicationByNameRequestValidator
  name: UpdateApplicationByNameRequestValidator
  href: api/Application.Validators.UpdateApplicationByNameRequestValidator.html
  commentId: T:Application.Validators.UpdateApplicationByNameRequestValidator
  fullName: Application.Validators.UpdateApplicationByNameRequestValidator
  nameWithType: UpdateApplicationByNameRequestValidator
- uid: Application.Validators.UpdateApplicationByNameRequestValidator.#ctor
  name: UpdateApplicationByNameRequestValidator()
  href: api/Application.Validators.UpdateApplicationByNameRequestValidator.html#Application_Validators_UpdateApplicationByNameRequestValidator__ctor
  commentId: M:Application.Validators.UpdateApplicationByNameRequestValidator.#ctor
  name.vb: New()
  fullName: Application.Validators.UpdateApplicationByNameRequestValidator.UpdateApplicationByNameRequestValidator()
  fullName.vb: Application.Validators.UpdateApplicationByNameRequestValidator.New()
  nameWithType: UpdateApplicationByNameRequestValidator.UpdateApplicationByNameRequestValidator()
  nameWithType.vb: UpdateApplicationByNameRequestValidator.New()
- uid: Application.Validators.UpdateApplicationByNameRequestValidator.#ctor*
  name: UpdateApplicationByNameRequestValidator
  href: api/Application.Validators.UpdateApplicationByNameRequestValidator.html#Application_Validators_UpdateApplicationByNameRequestValidator__ctor_
  commentId: Overload:Application.Validators.UpdateApplicationByNameRequestValidator.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Application.Validators.UpdateApplicationByNameRequestValidator.UpdateApplicationByNameRequestValidator
  fullName.vb: Application.Validators.UpdateApplicationByNameRequestValidator.New
  nameWithType: UpdateApplicationByNameRequestValidator.UpdateApplicationByNameRequestValidator
  nameWithType.vb: UpdateApplicationByNameRequestValidator.New
- uid: Application.Validators.UpdateEmailRequestValidator
  name: UpdateEmailRequestValidator
  href: api/Application.Validators.UpdateEmailRequestValidator.html
  commentId: T:Application.Validators.UpdateEmailRequestValidator
  fullName: Application.Validators.UpdateEmailRequestValidator
  nameWithType: UpdateEmailRequestValidator
- uid: Application.Validators.UpdateEmailRequestValidator.#ctor
  name: UpdateEmailRequestValidator()
  href: api/Application.Validators.UpdateEmailRequestValidator.html#Application_Validators_UpdateEmailRequestValidator__ctor
  commentId: M:Application.Validators.UpdateEmailRequestValidator.#ctor
  name.vb: New()
  fullName: Application.Validators.UpdateEmailRequestValidator.UpdateEmailRequestValidator()
  fullName.vb: Application.Validators.UpdateEmailRequestValidator.New()
  nameWithType: UpdateEmailRequestValidator.UpdateEmailRequestValidator()
  nameWithType.vb: UpdateEmailRequestValidator.New()
- uid: Application.Validators.UpdateEmailRequestValidator.#ctor*
  name: UpdateEmailRequestValidator
  href: api/Application.Validators.UpdateEmailRequestValidator.html#Application_Validators_UpdateEmailRequestValidator__ctor_
  commentId: Overload:Application.Validators.UpdateEmailRequestValidator.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Application.Validators.UpdateEmailRequestValidator.UpdateEmailRequestValidator
  fullName.vb: Application.Validators.UpdateEmailRequestValidator.New
  nameWithType: UpdateEmailRequestValidator.UpdateEmailRequestValidator
  nameWithType.vb: UpdateEmailRequestValidator.New
- uid: Application.Validators.UpdatePhoneNumberRequestValidator
  name: UpdatePhoneNumberRequestValidator
  href: api/Application.Validators.UpdatePhoneNumberRequestValidator.html
  commentId: T:Application.Validators.UpdatePhoneNumberRequestValidator
  fullName: Application.Validators.UpdatePhoneNumberRequestValidator
  nameWithType: UpdatePhoneNumberRequestValidator
- uid: Application.Validators.UpdatePhoneNumberRequestValidator.#ctor
  name: UpdatePhoneNumberRequestValidator()
  href: api/Application.Validators.UpdatePhoneNumberRequestValidator.html#Application_Validators_UpdatePhoneNumberRequestValidator__ctor
  commentId: M:Application.Validators.UpdatePhoneNumberRequestValidator.#ctor
  name.vb: New()
  fullName: Application.Validators.UpdatePhoneNumberRequestValidator.UpdatePhoneNumberRequestValidator()
  fullName.vb: Application.Validators.UpdatePhoneNumberRequestValidator.New()
  nameWithType: UpdatePhoneNumberRequestValidator.UpdatePhoneNumberRequestValidator()
  nameWithType.vb: UpdatePhoneNumberRequestValidator.New()
- uid: Application.Validators.UpdatePhoneNumberRequestValidator.#ctor*
  name: UpdatePhoneNumberRequestValidator
  href: api/Application.Validators.UpdatePhoneNumberRequestValidator.html#Application_Validators_UpdatePhoneNumberRequestValidator__ctor_
  commentId: Overload:Application.Validators.UpdatePhoneNumberRequestValidator.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Application.Validators.UpdatePhoneNumberRequestValidator.UpdatePhoneNumberRequestValidator
  fullName.vb: Application.Validators.UpdatePhoneNumberRequestValidator.New
  nameWithType: UpdatePhoneNumberRequestValidator.UpdatePhoneNumberRequestValidator
  nameWithType.vb: UpdatePhoneNumberRequestValidator.New
- uid: Authentica.Common
  name: Authentica.Common
  href: api/Authentica.Common.html
  commentId: N:Authentica.Common
  fullName: Authentica.Common
  nameWithType: Authentica.Common
- uid: Authentica.Common.EmailMessage
  name: EmailMessage
  href: api/Authentica.Common.EmailMessage.html
  commentId: T:Authentica.Common.EmailMessage
  fullName: Authentica.Common.EmailMessage
  nameWithType: EmailMessage
- uid: Authentica.Common.EmailMessage.Code
  name: Code
  href: api/Authentica.Common.EmailMessage.html#Authentica_Common_EmailMessage_Code
  commentId: P:Authentica.Common.EmailMessage.Code
  fullName: Authentica.Common.EmailMessage.Code
  nameWithType: EmailMessage.Code
- uid: Authentica.Common.EmailMessage.Code*
  name: Code
  href: api/Authentica.Common.EmailMessage.html#Authentica_Common_EmailMessage_Code_
  commentId: Overload:Authentica.Common.EmailMessage.Code
  isSpec: "True"
  fullName: Authentica.Common.EmailMessage.Code
  nameWithType: EmailMessage.Code
- uid: Authentica.Common.EmailMessage.EmailAddress
  name: EmailAddress
  href: api/Authentica.Common.EmailMessage.html#Authentica_Common_EmailMessage_EmailAddress
  commentId: P:Authentica.Common.EmailMessage.EmailAddress
  fullName: Authentica.Common.EmailMessage.EmailAddress
  nameWithType: EmailMessage.EmailAddress
- uid: Authentica.Common.EmailMessage.EmailAddress*
  name: EmailAddress
  href: api/Authentica.Common.EmailMessage.html#Authentica_Common_EmailMessage_EmailAddress_
  commentId: Overload:Authentica.Common.EmailMessage.EmailAddress
  isSpec: "True"
  fullName: Authentica.Common.EmailMessage.EmailAddress
  nameWithType: EmailMessage.EmailAddress
- uid: Authentica.Common.EmailMessage.Type
  name: Type
  href: api/Authentica.Common.EmailMessage.html#Authentica_Common_EmailMessage_Type
  commentId: P:Authentica.Common.EmailMessage.Type
  fullName: Authentica.Common.EmailMessage.Type
  nameWithType: EmailMessage.Type
- uid: Authentica.Common.EmailMessage.Type*
  name: Type
  href: api/Authentica.Common.EmailMessage.html#Authentica_Common_EmailMessage_Type_
  commentId: Overload:Authentica.Common.EmailMessage.Type
  isSpec: "True"
  fullName: Authentica.Common.EmailMessage.Type
  nameWithType: EmailMessage.Type
- uid: Authentica.Common.EmailTokenConstants
  name: EmailTokenConstants
  href: api/Authentica.Common.EmailTokenConstants.html
  commentId: T:Authentica.Common.EmailTokenConstants
  fullName: Authentica.Common.EmailTokenConstants
  nameWithType: EmailTokenConstants
- uid: Authentica.Common.EmailTokenConstants.ConfirmEmail
  name: ConfirmEmail
  href: api/Authentica.Common.EmailTokenConstants.html#Authentica_Common_EmailTokenConstants_ConfirmEmail
  commentId: F:Authentica.Common.EmailTokenConstants.ConfirmEmail
  fullName: Authentica.Common.EmailTokenConstants.ConfirmEmail
  nameWithType: EmailTokenConstants.ConfirmEmail
- uid: Authentica.Common.EmailTokenConstants.MultiFactor
  name: MultiFactor
  href: api/Authentica.Common.EmailTokenConstants.html#Authentica_Common_EmailTokenConstants_MultiFactor
  commentId: F:Authentica.Common.EmailTokenConstants.MultiFactor
  fullName: Authentica.Common.EmailTokenConstants.MultiFactor
  nameWithType: EmailTokenConstants.MultiFactor
- uid: Authentica.Common.EmailTokenConstants.ResetPassword
  name: ResetPassword
  href: api/Authentica.Common.EmailTokenConstants.html#Authentica_Common_EmailTokenConstants_ResetPassword
  commentId: F:Authentica.Common.EmailTokenConstants.ResetPassword
  fullName: Authentica.Common.EmailTokenConstants.ResetPassword
  nameWithType: EmailTokenConstants.ResetPassword
- uid: Authentica.Common.EmailTokenConstants.UpdateEmail
  name: UpdateEmail
  href: api/Authentica.Common.EmailTokenConstants.html#Authentica_Common_EmailTokenConstants_UpdateEmail
  commentId: F:Authentica.Common.EmailTokenConstants.UpdateEmail
  fullName: Authentica.Common.EmailTokenConstants.UpdateEmail
  nameWithType: EmailTokenConstants.UpdateEmail
- uid: Authentica.Common.EmailTokenConstants.UpdatePhoneNumber
  name: UpdatePhoneNumber
  href: api/Authentica.Common.EmailTokenConstants.html#Authentica_Common_EmailTokenConstants_UpdatePhoneNumber
  commentId: F:Authentica.Common.EmailTokenConstants.UpdatePhoneNumber
  fullName: Authentica.Common.EmailTokenConstants.UpdatePhoneNumber
  nameWithType: EmailTokenConstants.UpdatePhoneNumber
- uid: Authentica.Common.FeatureFlagConstants
  name: FeatureFlagConstants
  href: api/Authentica.Common.FeatureFlagConstants.html
  commentId: T:Authentica.Common.FeatureFlagConstants
  fullName: Authentica.Common.FeatureFlagConstants
  nameWithType: FeatureFlagConstants
- uid: Authentica.Common.FeatureFlagConstants.AzApplicationInsights
  name: AzApplicationInsights
  href: api/Authentica.Common.FeatureFlagConstants.html#Authentica_Common_FeatureFlagConstants_AzApplicationInsights
  commentId: F:Authentica.Common.FeatureFlagConstants.AzApplicationInsights
  fullName: Authentica.Common.FeatureFlagConstants.AzApplicationInsights
  nameWithType: FeatureFlagConstants.AzApplicationInsights
- uid: Authentica.Common.FeatureFlagConstants.AzServiceBus
  name: AzServiceBus
  href: api/Authentica.Common.FeatureFlagConstants.html#Authentica_Common_FeatureFlagConstants_AzServiceBus
  commentId: F:Authentica.Common.FeatureFlagConstants.AzServiceBus
  fullName: Authentica.Common.FeatureFlagConstants.AzServiceBus
  nameWithType: FeatureFlagConstants.AzServiceBus
- uid: Authentica.Common.FeatureFlagConstants.Cache
  name: Cache
  href: api/Authentica.Common.FeatureFlagConstants.html#Authentica_Common_FeatureFlagConstants_Cache
  commentId: F:Authentica.Common.FeatureFlagConstants.Cache
  fullName: Authentica.Common.FeatureFlagConstants.Cache
  nameWithType: FeatureFlagConstants.Cache
- uid: Authentica.Common.FeatureFlagConstants.RabbitMq
  name: RabbitMq
  href: api/Authentica.Common.FeatureFlagConstants.html#Authentica_Common_FeatureFlagConstants_RabbitMq
  commentId: F:Authentica.Common.FeatureFlagConstants.RabbitMq
  fullName: Authentica.Common.FeatureFlagConstants.RabbitMq
  nameWithType: FeatureFlagConstants.RabbitMq
- uid: Authentica.Common.ServiceCollectionExtensions
  name: ServiceCollectionExtensions
  href: api/Authentica.Common.ServiceCollectionExtensions.html
  commentId: T:Authentica.Common.ServiceCollectionExtensions
  fullName: Authentica.Common.ServiceCollectionExtensions
  nameWithType: ServiceCollectionExtensions
- uid: Authentica.Common.ServiceCollectionExtensions.AddAzureAppInsights(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  name: AddAzureAppInsights(IServiceCollection)
  href: api/Authentica.Common.ServiceCollectionExtensions.html#Authentica_Common_ServiceCollectionExtensions_AddAzureAppInsights_Microsoft_Extensions_DependencyInjection_IServiceCollection_
  commentId: M:Authentica.Common.ServiceCollectionExtensions.AddAzureAppInsights(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  fullName: Authentica.Common.ServiceCollectionExtensions.AddAzureAppInsights(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  nameWithType: ServiceCollectionExtensions.AddAzureAppInsights(IServiceCollection)
- uid: Authentica.Common.ServiceCollectionExtensions.AddAzureAppInsights*
  name: AddAzureAppInsights
  href: api/Authentica.Common.ServiceCollectionExtensions.html#Authentica_Common_ServiceCollectionExtensions_AddAzureAppInsights_
  commentId: Overload:Authentica.Common.ServiceCollectionExtensions.AddAzureAppInsights
  isSpec: "True"
  fullName: Authentica.Common.ServiceCollectionExtensions.AddAzureAppInsights
  nameWithType: ServiceCollectionExtensions.AddAzureAppInsights
- uid: Authentica.Service.Identity
  name: Authentica.Service.Identity
  href: api/Authentica.Service.Identity.html
  commentId: N:Authentica.Service.Identity
  fullName: Authentica.Service.Identity
  nameWithType: Authentica.Service.Identity
- uid: Authentica.Service.Identity.Persistence.Migrations
  name: Authentica.Service.Identity.Persistence.Migrations
  href: api/Authentica.Service.Identity.Persistence.Migrations.html
  commentId: N:Authentica.Service.Identity.Persistence.Migrations
  fullName: Authentica.Service.Identity.Persistence.Migrations
  nameWithType: Authentica.Service.Identity.Persistence.Migrations
- uid: Authentica.Service.Identity.Persistence.Migrations.Initial
  name: Initial
  href: api/Authentica.Service.Identity.Persistence.Migrations.Initial.html
  commentId: T:Authentica.Service.Identity.Persistence.Migrations.Initial
  fullName: Authentica.Service.Identity.Persistence.Migrations.Initial
  nameWithType: Initial
- uid: Authentica.Service.Identity.Persistence.Migrations.Initial.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)
  name: BuildTargetModel(ModelBuilder)
  href: api/Authentica.Service.Identity.Persistence.Migrations.Initial.html#Authentica_Service_Identity_Persistence_Migrations_Initial_BuildTargetModel_Microsoft_EntityFrameworkCore_ModelBuilder_
  commentId: M:Authentica.Service.Identity.Persistence.Migrations.Initial.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)
  fullName: Authentica.Service.Identity.Persistence.Migrations.Initial.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)
  nameWithType: Initial.BuildTargetModel(ModelBuilder)
- uid: Authentica.Service.Identity.Persistence.Migrations.Initial.BuildTargetModel*
  name: BuildTargetModel
  href: api/Authentica.Service.Identity.Persistence.Migrations.Initial.html#Authentica_Service_Identity_Persistence_Migrations_Initial_BuildTargetModel_
  commentId: Overload:Authentica.Service.Identity.Persistence.Migrations.Initial.BuildTargetModel
  isSpec: "True"
  fullName: Authentica.Service.Identity.Persistence.Migrations.Initial.BuildTargetModel
  nameWithType: Initial.BuildTargetModel
- uid: Authentica.Service.Identity.Persistence.Migrations.Initial.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  name: Down(MigrationBuilder)
  href: api/Authentica.Service.Identity.Persistence.Migrations.Initial.html#Authentica_Service_Identity_Persistence_Migrations_Initial_Down_Microsoft_EntityFrameworkCore_Migrations_MigrationBuilder_
  commentId: M:Authentica.Service.Identity.Persistence.Migrations.Initial.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  fullName: Authentica.Service.Identity.Persistence.Migrations.Initial.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  nameWithType: Initial.Down(MigrationBuilder)
- uid: Authentica.Service.Identity.Persistence.Migrations.Initial.Down*
  name: Down
  href: api/Authentica.Service.Identity.Persistence.Migrations.Initial.html#Authentica_Service_Identity_Persistence_Migrations_Initial_Down_
  commentId: Overload:Authentica.Service.Identity.Persistence.Migrations.Initial.Down
  isSpec: "True"
  fullName: Authentica.Service.Identity.Persistence.Migrations.Initial.Down
  nameWithType: Initial.Down
- uid: Authentica.Service.Identity.Persistence.Migrations.Initial.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  name: Up(MigrationBuilder)
  href: api/Authentica.Service.Identity.Persistence.Migrations.Initial.html#Authentica_Service_Identity_Persistence_Migrations_Initial_Up_Microsoft_EntityFrameworkCore_Migrations_MigrationBuilder_
  commentId: M:Authentica.Service.Identity.Persistence.Migrations.Initial.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  fullName: Authentica.Service.Identity.Persistence.Migrations.Initial.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  nameWithType: Initial.Up(MigrationBuilder)
- uid: Authentica.Service.Identity.Persistence.Migrations.Initial.Up*
  name: Up
  href: api/Authentica.Service.Identity.Persistence.Migrations.Initial.html#Authentica_Service_Identity_Persistence_Migrations_Initial_Up_
  commentId: Overload:Authentica.Service.Identity.Persistence.Migrations.Initial.Up
  isSpec: "True"
  fullName: Authentica.Service.Identity.Persistence.Migrations.Initial.Up
  nameWithType: Initial.Up
- uid: Authentica.Service.Identity.Program
  name: Program
  href: api/Authentica.Service.Identity.Program.html
  commentId: T:Authentica.Service.Identity.Program
  fullName: Authentica.Service.Identity.Program
  nameWithType: Program
- uid: Authentica.Service.Identity.Program.Main(System.String[])
  name: Main(string[])
  href: api/Authentica.Service.Identity.Program.html#Authentica_Service_Identity_Program_Main_System_String___
  commentId: M:Authentica.Service.Identity.Program.Main(System.String[])
  name.vb: Main(String())
  fullName: Authentica.Service.Identity.Program.Main(string[])
  fullName.vb: Authentica.Service.Identity.Program.Main(String())
  nameWithType: Program.Main(string[])
  nameWithType.vb: Program.Main(String())
- uid: Authentica.Service.Identity.Program.Main*
  name: Main
  href: api/Authentica.Service.Identity.Program.html#Authentica_Service_Identity_Program_Main_
  commentId: Overload:Authentica.Service.Identity.Program.Main
  isSpec: "True"
  fullName: Authentica.Service.Identity.Program.Main
  nameWithType: Program.Main
- uid: Authentica.Service.Identity.Tests.IntegrationTests
  name: Authentica.Service.Identity.Tests.IntegrationTests
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.html
  commentId: N:Authentica.Service.Identity.Tests.IntegrationTests
  fullName: Authentica.Service.Identity.Tests.IntegrationTests
  nameWithType: Authentica.Service.Identity.Tests.IntegrationTests
- uid: Authentica.Service.Identity.Tests.IntegrationTests.AccountPurgeBackgroundServiceTests
  name: AccountPurgeBackgroundServiceTests
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.AccountPurgeBackgroundServiceTests.html
  commentId: T:Authentica.Service.Identity.Tests.IntegrationTests.AccountPurgeBackgroundServiceTests
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.AccountPurgeBackgroundServiceTests
  nameWithType: AccountPurgeBackgroundServiceTests
- uid: Authentica.Service.Identity.Tests.IntegrationTests.AccountPurgeBackgroundServiceTests.ExecuteAsync_DeletesOldUserAccountsAfterSevenYears
  name: ExecuteAsync_DeletesOldUserAccountsAfterSevenYears()
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.AccountPurgeBackgroundServiceTests.html#Authentica_Service_Identity_Tests_IntegrationTests_AccountPurgeBackgroundServiceTests_ExecuteAsync_DeletesOldUserAccountsAfterSevenYears
  commentId: M:Authentica.Service.Identity.Tests.IntegrationTests.AccountPurgeBackgroundServiceTests.ExecuteAsync_DeletesOldUserAccountsAfterSevenYears
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.AccountPurgeBackgroundServiceTests.ExecuteAsync_DeletesOldUserAccountsAfterSevenYears()
  nameWithType: AccountPurgeBackgroundServiceTests.ExecuteAsync_DeletesOldUserAccountsAfterSevenYears()
- uid: Authentica.Service.Identity.Tests.IntegrationTests.AccountPurgeBackgroundServiceTests.ExecuteAsync_DeletesOldUserAccountsAfterSevenYears*
  name: ExecuteAsync_DeletesOldUserAccountsAfterSevenYears
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.AccountPurgeBackgroundServiceTests.html#Authentica_Service_Identity_Tests_IntegrationTests_AccountPurgeBackgroundServiceTests_ExecuteAsync_DeletesOldUserAccountsAfterSevenYears_
  commentId: Overload:Authentica.Service.Identity.Tests.IntegrationTests.AccountPurgeBackgroundServiceTests.ExecuteAsync_DeletesOldUserAccountsAfterSevenYears
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.AccountPurgeBackgroundServiceTests.ExecuteAsync_DeletesOldUserAccountsAfterSevenYears
  nameWithType: AccountPurgeBackgroundServiceTests.ExecuteAsync_DeletesOldUserAccountsAfterSevenYears
- uid: Authentica.Service.Identity.Tests.IntegrationTests.AccountPurgeBackgroundServiceTests.ExecuteAsync_ThrowsException_WhenAccountPurgeFails
  name: ExecuteAsync_ThrowsException_WhenAccountPurgeFails()
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.AccountPurgeBackgroundServiceTests.html#Authentica_Service_Identity_Tests_IntegrationTests_AccountPurgeBackgroundServiceTests_ExecuteAsync_ThrowsException_WhenAccountPurgeFails
  commentId: M:Authentica.Service.Identity.Tests.IntegrationTests.AccountPurgeBackgroundServiceTests.ExecuteAsync_ThrowsException_WhenAccountPurgeFails
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.AccountPurgeBackgroundServiceTests.ExecuteAsync_ThrowsException_WhenAccountPurgeFails()
  nameWithType: AccountPurgeBackgroundServiceTests.ExecuteAsync_ThrowsException_WhenAccountPurgeFails()
- uid: Authentica.Service.Identity.Tests.IntegrationTests.AccountPurgeBackgroundServiceTests.ExecuteAsync_ThrowsException_WhenAccountPurgeFails*
  name: ExecuteAsync_ThrowsException_WhenAccountPurgeFails
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.AccountPurgeBackgroundServiceTests.html#Authentica_Service_Identity_Tests_IntegrationTests_AccountPurgeBackgroundServiceTests_ExecuteAsync_ThrowsException_WhenAccountPurgeFails_
  commentId: Overload:Authentica.Service.Identity.Tests.IntegrationTests.AccountPurgeBackgroundServiceTests.ExecuteAsync_ThrowsException_WhenAccountPurgeFails
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.AccountPurgeBackgroundServiceTests.ExecuteAsync_ThrowsException_WhenAccountPurgeFails
  nameWithType: AccountPurgeBackgroundServiceTests.ExecuteAsync_ThrowsException_WhenAccountPurgeFails
- uid: Authentica.Service.Identity.Tests.IntegrationTests.AccountPurgeBackgroundServiceTests.OneTimeSetup
  name: OneTimeSetup()
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.AccountPurgeBackgroundServiceTests.html#Authentica_Service_Identity_Tests_IntegrationTests_AccountPurgeBackgroundServiceTests_OneTimeSetup
  commentId: M:Authentica.Service.Identity.Tests.IntegrationTests.AccountPurgeBackgroundServiceTests.OneTimeSetup
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.AccountPurgeBackgroundServiceTests.OneTimeSetup()
  nameWithType: AccountPurgeBackgroundServiceTests.OneTimeSetup()
- uid: Authentica.Service.Identity.Tests.IntegrationTests.AccountPurgeBackgroundServiceTests.OneTimeSetup*
  name: OneTimeSetup
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.AccountPurgeBackgroundServiceTests.html#Authentica_Service_Identity_Tests_IntegrationTests_AccountPurgeBackgroundServiceTests_OneTimeSetup_
  commentId: Overload:Authentica.Service.Identity.Tests.IntegrationTests.AccountPurgeBackgroundServiceTests.OneTimeSetup
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.AccountPurgeBackgroundServiceTests.OneTimeSetup
  nameWithType: AccountPurgeBackgroundServiceTests.OneTimeSetup
- uid: Authentica.Service.Identity.Tests.IntegrationTests.AccountPurgeBackgroundServiceTests.OneTimeTearDown
  name: OneTimeTearDown()
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.AccountPurgeBackgroundServiceTests.html#Authentica_Service_Identity_Tests_IntegrationTests_AccountPurgeBackgroundServiceTests_OneTimeTearDown
  commentId: M:Authentica.Service.Identity.Tests.IntegrationTests.AccountPurgeBackgroundServiceTests.OneTimeTearDown
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.AccountPurgeBackgroundServiceTests.OneTimeTearDown()
  nameWithType: AccountPurgeBackgroundServiceTests.OneTimeTearDown()
- uid: Authentica.Service.Identity.Tests.IntegrationTests.AccountPurgeBackgroundServiceTests.OneTimeTearDown*
  name: OneTimeTearDown
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.AccountPurgeBackgroundServiceTests.html#Authentica_Service_Identity_Tests_IntegrationTests_AccountPurgeBackgroundServiceTests_OneTimeTearDown_
  commentId: Overload:Authentica.Service.Identity.Tests.IntegrationTests.AccountPurgeBackgroundServiceTests.OneTimeTearDown
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.AccountPurgeBackgroundServiceTests.OneTimeTearDown
  nameWithType: AccountPurgeBackgroundServiceTests.OneTimeTearDown
- uid: Authentica.Service.Identity.Tests.IntegrationTests.AccountPurgeExposeProtected
  name: AccountPurgeExposeProtected
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.AccountPurgeExposeProtected.html
  commentId: T:Authentica.Service.Identity.Tests.IntegrationTests.AccountPurgeExposeProtected
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.AccountPurgeExposeProtected
  nameWithType: AccountPurgeExposeProtected
- uid: Authentica.Service.Identity.Tests.IntegrationTests.AccountPurgeExposeProtected.#ctor(Microsoft.Extensions.DependencyInjection.IServiceScopeFactory,Microsoft.Extensions.Logging.ILogger{Application.BackgroundServices.AccountPurge},Application.Contracts.ITimer)
  name: AccountPurgeExposeProtected(IServiceScopeFactory, ILogger<AccountPurge>, ITimer)
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.AccountPurgeExposeProtected.html#Authentica_Service_Identity_Tests_IntegrationTests_AccountPurgeExposeProtected__ctor_Microsoft_Extensions_DependencyInjection_IServiceScopeFactory_Microsoft_Extensions_Logging_ILogger_Application_BackgroundServices_AccountPurge__Application_Contracts_ITimer_
  commentId: M:Authentica.Service.Identity.Tests.IntegrationTests.AccountPurgeExposeProtected.#ctor(Microsoft.Extensions.DependencyInjection.IServiceScopeFactory,Microsoft.Extensions.Logging.ILogger{Application.BackgroundServices.AccountPurge},Application.Contracts.ITimer)
  name.vb: New(IServiceScopeFactory, ILogger(Of AccountPurge), ITimer)
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.AccountPurgeExposeProtected.AccountPurgeExposeProtected(Microsoft.Extensions.DependencyInjection.IServiceScopeFactory, Microsoft.Extensions.Logging.ILogger<Application.BackgroundServices.AccountPurge>, Application.Contracts.ITimer)
  fullName.vb: Authentica.Service.Identity.Tests.IntegrationTests.AccountPurgeExposeProtected.New(Microsoft.Extensions.DependencyInjection.IServiceScopeFactory, Microsoft.Extensions.Logging.ILogger(Of Application.BackgroundServices.AccountPurge), Application.Contracts.ITimer)
  nameWithType: AccountPurgeExposeProtected.AccountPurgeExposeProtected(IServiceScopeFactory, ILogger<AccountPurge>, ITimer)
  nameWithType.vb: AccountPurgeExposeProtected.New(IServiceScopeFactory, ILogger(Of AccountPurge), ITimer)
- uid: Authentica.Service.Identity.Tests.IntegrationTests.AccountPurgeExposeProtected.#ctor*
  name: AccountPurgeExposeProtected
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.AccountPurgeExposeProtected.html#Authentica_Service_Identity_Tests_IntegrationTests_AccountPurgeExposeProtected__ctor_
  commentId: Overload:Authentica.Service.Identity.Tests.IntegrationTests.AccountPurgeExposeProtected.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.AccountPurgeExposeProtected.AccountPurgeExposeProtected
  fullName.vb: Authentica.Service.Identity.Tests.IntegrationTests.AccountPurgeExposeProtected.New
  nameWithType: AccountPurgeExposeProtected.AccountPurgeExposeProtected
  nameWithType.vb: AccountPurgeExposeProtected.New
- uid: Authentica.Service.Identity.Tests.IntegrationTests.AccountPurgeExposeProtected.ExecuteTaskAsync(System.Threading.CancellationToken)
  name: ExecuteTaskAsync(CancellationToken)
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.AccountPurgeExposeProtected.html#Authentica_Service_Identity_Tests_IntegrationTests_AccountPurgeExposeProtected_ExecuteTaskAsync_System_Threading_CancellationToken_
  commentId: M:Authentica.Service.Identity.Tests.IntegrationTests.AccountPurgeExposeProtected.ExecuteTaskAsync(System.Threading.CancellationToken)
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.AccountPurgeExposeProtected.ExecuteTaskAsync(System.Threading.CancellationToken)
  nameWithType: AccountPurgeExposeProtected.ExecuteTaskAsync(CancellationToken)
- uid: Authentica.Service.Identity.Tests.IntegrationTests.AccountPurgeExposeProtected.ExecuteTaskAsync*
  name: ExecuteTaskAsync
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.AccountPurgeExposeProtected.html#Authentica_Service_Identity_Tests_IntegrationTests_AccountPurgeExposeProtected_ExecuteTaskAsync_
  commentId: Overload:Authentica.Service.Identity.Tests.IntegrationTests.AccountPurgeExposeProtected.ExecuteTaskAsync
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.AccountPurgeExposeProtected.ExecuteTaskAsync
  nameWithType: AccountPurgeExposeProtected.ExecuteTaskAsync
- uid: Authentica.Service.Identity.Tests.IntegrationTests.ApplicationPurgeBackgroundServiceTests
  name: ApplicationPurgeBackgroundServiceTests
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.ApplicationPurgeBackgroundServiceTests.html
  commentId: T:Authentica.Service.Identity.Tests.IntegrationTests.ApplicationPurgeBackgroundServiceTests
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.ApplicationPurgeBackgroundServiceTests
  nameWithType: ApplicationPurgeBackgroundServiceTests
- uid: Authentica.Service.Identity.Tests.IntegrationTests.ApplicationPurgeBackgroundServiceTests.ExecuteAsync_DeletesOldUserApplicationsAfterSevenYears
  name: ExecuteAsync_DeletesOldUserApplicationsAfterSevenYears()
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.ApplicationPurgeBackgroundServiceTests.html#Authentica_Service_Identity_Tests_IntegrationTests_ApplicationPurgeBackgroundServiceTests_ExecuteAsync_DeletesOldUserApplicationsAfterSevenYears
  commentId: M:Authentica.Service.Identity.Tests.IntegrationTests.ApplicationPurgeBackgroundServiceTests.ExecuteAsync_DeletesOldUserApplicationsAfterSevenYears
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.ApplicationPurgeBackgroundServiceTests.ExecuteAsync_DeletesOldUserApplicationsAfterSevenYears()
  nameWithType: ApplicationPurgeBackgroundServiceTests.ExecuteAsync_DeletesOldUserApplicationsAfterSevenYears()
- uid: Authentica.Service.Identity.Tests.IntegrationTests.ApplicationPurgeBackgroundServiceTests.ExecuteAsync_DeletesOldUserApplicationsAfterSevenYears*
  name: ExecuteAsync_DeletesOldUserApplicationsAfterSevenYears
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.ApplicationPurgeBackgroundServiceTests.html#Authentica_Service_Identity_Tests_IntegrationTests_ApplicationPurgeBackgroundServiceTests_ExecuteAsync_DeletesOldUserApplicationsAfterSevenYears_
  commentId: Overload:Authentica.Service.Identity.Tests.IntegrationTests.ApplicationPurgeBackgroundServiceTests.ExecuteAsync_DeletesOldUserApplicationsAfterSevenYears
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.ApplicationPurgeBackgroundServiceTests.ExecuteAsync_DeletesOldUserApplicationsAfterSevenYears
  nameWithType: ApplicationPurgeBackgroundServiceTests.ExecuteAsync_DeletesOldUserApplicationsAfterSevenYears
- uid: Authentica.Service.Identity.Tests.IntegrationTests.ApplicationPurgeBackgroundServiceTests.ExecuteAsync_ThrowsException_WhenApplicationPurgeFails
  name: ExecuteAsync_ThrowsException_WhenApplicationPurgeFails()
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.ApplicationPurgeBackgroundServiceTests.html#Authentica_Service_Identity_Tests_IntegrationTests_ApplicationPurgeBackgroundServiceTests_ExecuteAsync_ThrowsException_WhenApplicationPurgeFails
  commentId: M:Authentica.Service.Identity.Tests.IntegrationTests.ApplicationPurgeBackgroundServiceTests.ExecuteAsync_ThrowsException_WhenApplicationPurgeFails
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.ApplicationPurgeBackgroundServiceTests.ExecuteAsync_ThrowsException_WhenApplicationPurgeFails()
  nameWithType: ApplicationPurgeBackgroundServiceTests.ExecuteAsync_ThrowsException_WhenApplicationPurgeFails()
- uid: Authentica.Service.Identity.Tests.IntegrationTests.ApplicationPurgeBackgroundServiceTests.ExecuteAsync_ThrowsException_WhenApplicationPurgeFails*
  name: ExecuteAsync_ThrowsException_WhenApplicationPurgeFails
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.ApplicationPurgeBackgroundServiceTests.html#Authentica_Service_Identity_Tests_IntegrationTests_ApplicationPurgeBackgroundServiceTests_ExecuteAsync_ThrowsException_WhenApplicationPurgeFails_
  commentId: Overload:Authentica.Service.Identity.Tests.IntegrationTests.ApplicationPurgeBackgroundServiceTests.ExecuteAsync_ThrowsException_WhenApplicationPurgeFails
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.ApplicationPurgeBackgroundServiceTests.ExecuteAsync_ThrowsException_WhenApplicationPurgeFails
  nameWithType: ApplicationPurgeBackgroundServiceTests.ExecuteAsync_ThrowsException_WhenApplicationPurgeFails
- uid: Authentica.Service.Identity.Tests.IntegrationTests.ApplicationPurgeBackgroundServiceTests.OneTimeSetup
  name: OneTimeSetup()
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.ApplicationPurgeBackgroundServiceTests.html#Authentica_Service_Identity_Tests_IntegrationTests_ApplicationPurgeBackgroundServiceTests_OneTimeSetup
  commentId: M:Authentica.Service.Identity.Tests.IntegrationTests.ApplicationPurgeBackgroundServiceTests.OneTimeSetup
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.ApplicationPurgeBackgroundServiceTests.OneTimeSetup()
  nameWithType: ApplicationPurgeBackgroundServiceTests.OneTimeSetup()
- uid: Authentica.Service.Identity.Tests.IntegrationTests.ApplicationPurgeBackgroundServiceTests.OneTimeSetup*
  name: OneTimeSetup
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.ApplicationPurgeBackgroundServiceTests.html#Authentica_Service_Identity_Tests_IntegrationTests_ApplicationPurgeBackgroundServiceTests_OneTimeSetup_
  commentId: Overload:Authentica.Service.Identity.Tests.IntegrationTests.ApplicationPurgeBackgroundServiceTests.OneTimeSetup
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.ApplicationPurgeBackgroundServiceTests.OneTimeSetup
  nameWithType: ApplicationPurgeBackgroundServiceTests.OneTimeSetup
- uid: Authentica.Service.Identity.Tests.IntegrationTests.ApplicationPurgeBackgroundServiceTests.OneTimeTearDown
  name: OneTimeTearDown()
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.ApplicationPurgeBackgroundServiceTests.html#Authentica_Service_Identity_Tests_IntegrationTests_ApplicationPurgeBackgroundServiceTests_OneTimeTearDown
  commentId: M:Authentica.Service.Identity.Tests.IntegrationTests.ApplicationPurgeBackgroundServiceTests.OneTimeTearDown
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.ApplicationPurgeBackgroundServiceTests.OneTimeTearDown()
  nameWithType: ApplicationPurgeBackgroundServiceTests.OneTimeTearDown()
- uid: Authentica.Service.Identity.Tests.IntegrationTests.ApplicationPurgeBackgroundServiceTests.OneTimeTearDown*
  name: OneTimeTearDown
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.ApplicationPurgeBackgroundServiceTests.html#Authentica_Service_Identity_Tests_IntegrationTests_ApplicationPurgeBackgroundServiceTests_OneTimeTearDown_
  commentId: Overload:Authentica.Service.Identity.Tests.IntegrationTests.ApplicationPurgeBackgroundServiceTests.OneTimeTearDown
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.ApplicationPurgeBackgroundServiceTests.OneTimeTearDown
  nameWithType: ApplicationPurgeBackgroundServiceTests.OneTimeTearDown
- uid: Authentica.Service.Identity.Tests.IntegrationTests.ApplicationPurgeExposeProtected
  name: ApplicationPurgeExposeProtected
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.ApplicationPurgeExposeProtected.html
  commentId: T:Authentica.Service.Identity.Tests.IntegrationTests.ApplicationPurgeExposeProtected
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.ApplicationPurgeExposeProtected
  nameWithType: ApplicationPurgeExposeProtected
- uid: Authentica.Service.Identity.Tests.IntegrationTests.ApplicationPurgeExposeProtected.#ctor(Microsoft.Extensions.DependencyInjection.IServiceScopeFactory,Microsoft.Extensions.Logging.ILogger{Application.BackgroundServices.ApplicationPurge},Application.Contracts.ITimer)
  name: ApplicationPurgeExposeProtected(IServiceScopeFactory, ILogger<ApplicationPurge>, ITimer)
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.ApplicationPurgeExposeProtected.html#Authentica_Service_Identity_Tests_IntegrationTests_ApplicationPurgeExposeProtected__ctor_Microsoft_Extensions_DependencyInjection_IServiceScopeFactory_Microsoft_Extensions_Logging_ILogger_Application_BackgroundServices_ApplicationPurge__Application_Contracts_ITimer_
  commentId: M:Authentica.Service.Identity.Tests.IntegrationTests.ApplicationPurgeExposeProtected.#ctor(Microsoft.Extensions.DependencyInjection.IServiceScopeFactory,Microsoft.Extensions.Logging.ILogger{Application.BackgroundServices.ApplicationPurge},Application.Contracts.ITimer)
  name.vb: New(IServiceScopeFactory, ILogger(Of ApplicationPurge), ITimer)
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.ApplicationPurgeExposeProtected.ApplicationPurgeExposeProtected(Microsoft.Extensions.DependencyInjection.IServiceScopeFactory, Microsoft.Extensions.Logging.ILogger<Application.BackgroundServices.ApplicationPurge>, Application.Contracts.ITimer)
  fullName.vb: Authentica.Service.Identity.Tests.IntegrationTests.ApplicationPurgeExposeProtected.New(Microsoft.Extensions.DependencyInjection.IServiceScopeFactory, Microsoft.Extensions.Logging.ILogger(Of Application.BackgroundServices.ApplicationPurge), Application.Contracts.ITimer)
  nameWithType: ApplicationPurgeExposeProtected.ApplicationPurgeExposeProtected(IServiceScopeFactory, ILogger<ApplicationPurge>, ITimer)
  nameWithType.vb: ApplicationPurgeExposeProtected.New(IServiceScopeFactory, ILogger(Of ApplicationPurge), ITimer)
- uid: Authentica.Service.Identity.Tests.IntegrationTests.ApplicationPurgeExposeProtected.#ctor*
  name: ApplicationPurgeExposeProtected
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.ApplicationPurgeExposeProtected.html#Authentica_Service_Identity_Tests_IntegrationTests_ApplicationPurgeExposeProtected__ctor_
  commentId: Overload:Authentica.Service.Identity.Tests.IntegrationTests.ApplicationPurgeExposeProtected.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.ApplicationPurgeExposeProtected.ApplicationPurgeExposeProtected
  fullName.vb: Authentica.Service.Identity.Tests.IntegrationTests.ApplicationPurgeExposeProtected.New
  nameWithType: ApplicationPurgeExposeProtected.ApplicationPurgeExposeProtected
  nameWithType.vb: ApplicationPurgeExposeProtected.New
- uid: Authentica.Service.Identity.Tests.IntegrationTests.ApplicationPurgeExposeProtected.ExecuteTaskAsync(System.Threading.CancellationToken)
  name: ExecuteTaskAsync(CancellationToken)
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.ApplicationPurgeExposeProtected.html#Authentica_Service_Identity_Tests_IntegrationTests_ApplicationPurgeExposeProtected_ExecuteTaskAsync_System_Threading_CancellationToken_
  commentId: M:Authentica.Service.Identity.Tests.IntegrationTests.ApplicationPurgeExposeProtected.ExecuteTaskAsync(System.Threading.CancellationToken)
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.ApplicationPurgeExposeProtected.ExecuteTaskAsync(System.Threading.CancellationToken)
  nameWithType: ApplicationPurgeExposeProtected.ExecuteTaskAsync(CancellationToken)
- uid: Authentica.Service.Identity.Tests.IntegrationTests.ApplicationPurgeExposeProtected.ExecuteTaskAsync*
  name: ExecuteTaskAsync
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.ApplicationPurgeExposeProtected.html#Authentica_Service_Identity_Tests_IntegrationTests_ApplicationPurgeExposeProtected_ExecuteTaskAsync_
  commentId: Overload:Authentica.Service.Identity.Tests.IntegrationTests.ApplicationPurgeExposeProtected.ExecuteTaskAsync
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.ApplicationPurgeExposeProtected.ExecuteTaskAsync
  nameWithType: ApplicationPurgeExposeProtected.ExecuteTaskAsync
- uid: Authentica.Service.Identity.Tests.IntegrationTests.CustomWebApplicationFactory`1
  name: CustomWebApplicationFactory<TProgram>
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.CustomWebApplicationFactory-1.html
  commentId: T:Authentica.Service.Identity.Tests.IntegrationTests.CustomWebApplicationFactory`1
  name.vb: CustomWebApplicationFactory(Of TProgram)
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.CustomWebApplicationFactory<TProgram>
  fullName.vb: Authentica.Service.Identity.Tests.IntegrationTests.CustomWebApplicationFactory(Of TProgram)
  nameWithType: CustomWebApplicationFactory<TProgram>
  nameWithType.vb: CustomWebApplicationFactory(Of TProgram)
- uid: Authentica.Service.Identity.Tests.IntegrationTests.CustomWebApplicationFactory`1.ConfigureClient(System.Net.Http.HttpClient)
  name: ConfigureClient(HttpClient)
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.CustomWebApplicationFactory-1.html#Authentica_Service_Identity_Tests_IntegrationTests_CustomWebApplicationFactory_1_ConfigureClient_System_Net_Http_HttpClient_
  commentId: M:Authentica.Service.Identity.Tests.IntegrationTests.CustomWebApplicationFactory`1.ConfigureClient(System.Net.Http.HttpClient)
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.CustomWebApplicationFactory<TProgram>.ConfigureClient(System.Net.Http.HttpClient)
  fullName.vb: Authentica.Service.Identity.Tests.IntegrationTests.CustomWebApplicationFactory(Of TProgram).ConfigureClient(System.Net.Http.HttpClient)
  nameWithType: CustomWebApplicationFactory<TProgram>.ConfigureClient(HttpClient)
  nameWithType.vb: CustomWebApplicationFactory(Of TProgram).ConfigureClient(HttpClient)
- uid: Authentica.Service.Identity.Tests.IntegrationTests.CustomWebApplicationFactory`1.ConfigureClient*
  name: ConfigureClient
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.CustomWebApplicationFactory-1.html#Authentica_Service_Identity_Tests_IntegrationTests_CustomWebApplicationFactory_1_ConfigureClient_
  commentId: Overload:Authentica.Service.Identity.Tests.IntegrationTests.CustomWebApplicationFactory`1.ConfigureClient
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.CustomWebApplicationFactory<TProgram>.ConfigureClient
  fullName.vb: Authentica.Service.Identity.Tests.IntegrationTests.CustomWebApplicationFactory(Of TProgram).ConfigureClient
  nameWithType: CustomWebApplicationFactory<TProgram>.ConfigureClient
  nameWithType.vb: CustomWebApplicationFactory(Of TProgram).ConfigureClient
- uid: Authentica.Service.Identity.Tests.IntegrationTests.CustomWebApplicationFactory`1.ConfigureWebHost(Microsoft.AspNetCore.Hosting.IWebHostBuilder)
  name: ConfigureWebHost(IWebHostBuilder)
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.CustomWebApplicationFactory-1.html#Authentica_Service_Identity_Tests_IntegrationTests_CustomWebApplicationFactory_1_ConfigureWebHost_Microsoft_AspNetCore_Hosting_IWebHostBuilder_
  commentId: M:Authentica.Service.Identity.Tests.IntegrationTests.CustomWebApplicationFactory`1.ConfigureWebHost(Microsoft.AspNetCore.Hosting.IWebHostBuilder)
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.CustomWebApplicationFactory<TProgram>.ConfigureWebHost(Microsoft.AspNetCore.Hosting.IWebHostBuilder)
  fullName.vb: Authentica.Service.Identity.Tests.IntegrationTests.CustomWebApplicationFactory(Of TProgram).ConfigureWebHost(Microsoft.AspNetCore.Hosting.IWebHostBuilder)
  nameWithType: CustomWebApplicationFactory<TProgram>.ConfigureWebHost(IWebHostBuilder)
  nameWithType.vb: CustomWebApplicationFactory(Of TProgram).ConfigureWebHost(IWebHostBuilder)
- uid: Authentica.Service.Identity.Tests.IntegrationTests.CustomWebApplicationFactory`1.ConfigureWebHost*
  name: ConfigureWebHost
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.CustomWebApplicationFactory-1.html#Authentica_Service_Identity_Tests_IntegrationTests_CustomWebApplicationFactory_1_ConfigureWebHost_
  commentId: Overload:Authentica.Service.Identity.Tests.IntegrationTests.CustomWebApplicationFactory`1.ConfigureWebHost
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.CustomWebApplicationFactory<TProgram>.ConfigureWebHost
  fullName.vb: Authentica.Service.Identity.Tests.IntegrationTests.CustomWebApplicationFactory(Of TProgram).ConfigureWebHost
  nameWithType: CustomWebApplicationFactory<TProgram>.ConfigureWebHost
  nameWithType.vb: CustomWebApplicationFactory(Of TProgram).ConfigureWebHost
- uid: Authentica.Service.Identity.Tests.IntegrationTests.CustomWebApplicationFactory`1.StartTestContainer
  name: StartTestContainer()
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.CustomWebApplicationFactory-1.html#Authentica_Service_Identity_Tests_IntegrationTests_CustomWebApplicationFactory_1_StartTestContainer
  commentId: M:Authentica.Service.Identity.Tests.IntegrationTests.CustomWebApplicationFactory`1.StartTestContainer
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.CustomWebApplicationFactory<TProgram>.StartTestContainer()
  fullName.vb: Authentica.Service.Identity.Tests.IntegrationTests.CustomWebApplicationFactory(Of TProgram).StartTestContainer()
  nameWithType: CustomWebApplicationFactory<TProgram>.StartTestContainer()
  nameWithType.vb: CustomWebApplicationFactory(Of TProgram).StartTestContainer()
- uid: Authentica.Service.Identity.Tests.IntegrationTests.CustomWebApplicationFactory`1.StartTestContainer*
  name: StartTestContainer
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.CustomWebApplicationFactory-1.html#Authentica_Service_Identity_Tests_IntegrationTests_CustomWebApplicationFactory_1_StartTestContainer_
  commentId: Overload:Authentica.Service.Identity.Tests.IntegrationTests.CustomWebApplicationFactory`1.StartTestContainer
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.CustomWebApplicationFactory<TProgram>.StartTestContainer
  fullName.vb: Authentica.Service.Identity.Tests.IntegrationTests.CustomWebApplicationFactory(Of TProgram).StartTestContainer
  nameWithType: CustomWebApplicationFactory<TProgram>.StartTestContainer
  nameWithType.vb: CustomWebApplicationFactory(Of TProgram).StartTestContainer
- uid: Authentica.Service.Identity.Tests.IntegrationTests.CustomWebApplicationFactory`1.StopTestContainer
  name: StopTestContainer()
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.CustomWebApplicationFactory-1.html#Authentica_Service_Identity_Tests_IntegrationTests_CustomWebApplicationFactory_1_StopTestContainer
  commentId: M:Authentica.Service.Identity.Tests.IntegrationTests.CustomWebApplicationFactory`1.StopTestContainer
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.CustomWebApplicationFactory<TProgram>.StopTestContainer()
  fullName.vb: Authentica.Service.Identity.Tests.IntegrationTests.CustomWebApplicationFactory(Of TProgram).StopTestContainer()
  nameWithType: CustomWebApplicationFactory<TProgram>.StopTestContainer()
  nameWithType.vb: CustomWebApplicationFactory(Of TProgram).StopTestContainer()
- uid: Authentica.Service.Identity.Tests.IntegrationTests.CustomWebApplicationFactory`1.StopTestContainer*
  name: StopTestContainer
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.CustomWebApplicationFactory-1.html#Authentica_Service_Identity_Tests_IntegrationTests_CustomWebApplicationFactory_1_StopTestContainer_
  commentId: Overload:Authentica.Service.Identity.Tests.IntegrationTests.CustomWebApplicationFactory`1.StopTestContainer
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.CustomWebApplicationFactory<TProgram>.StopTestContainer
  fullName.vb: Authentica.Service.Identity.Tests.IntegrationTests.CustomWebApplicationFactory(Of TProgram).StopTestContainer
  nameWithType: CustomWebApplicationFactory<TProgram>.StopTestContainer
  nameWithType.vb: CustomWebApplicationFactory(Of TProgram).StopTestContainer
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints
  name: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.html
  commentId: N:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints
  nameWithType: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.AddToRoleEndpointTests
  name: AddToRoleEndpointTests
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.AddToRoleEndpointTests.html
  commentId: T:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.AddToRoleEndpointTests
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.AddToRoleEndpointTests
  nameWithType: AddToRoleEndpointTests
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.AddToRoleEndpointTests.AddToRole_Returns200Ok_WhenSuccessfullyAddedUserToRole
  name: AddToRole_Returns200Ok_WhenSuccessfullyAddedUserToRole()
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.AddToRoleEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_AddToRoleEndpointTests_AddToRole_Returns200Ok_WhenSuccessfullyAddedUserToRole
  commentId: M:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.AddToRoleEndpointTests.AddToRole_Returns200Ok_WhenSuccessfullyAddedUserToRole
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.AddToRoleEndpointTests.AddToRole_Returns200Ok_WhenSuccessfullyAddedUserToRole()
  nameWithType: AddToRoleEndpointTests.AddToRole_Returns200Ok_WhenSuccessfullyAddedUserToRole()
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.AddToRoleEndpointTests.AddToRole_Returns200Ok_WhenSuccessfullyAddedUserToRole*
  name: AddToRole_Returns200Ok_WhenSuccessfullyAddedUserToRole
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.AddToRoleEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_AddToRoleEndpointTests_AddToRole_Returns200Ok_WhenSuccessfullyAddedUserToRole_
  commentId: Overload:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.AddToRoleEndpointTests.AddToRole_Returns200Ok_WhenSuccessfullyAddedUserToRole
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.AddToRoleEndpointTests.AddToRole_Returns200Ok_WhenSuccessfullyAddedUserToRole
  nameWithType: AddToRoleEndpointTests.AddToRole_Returns200Ok_WhenSuccessfullyAddedUserToRole
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.AddToRoleEndpointTests.AddToRole_Returns400BadRequest_WhenUnsuccessful
  name: AddToRole_Returns400BadRequest_WhenUnsuccessful()
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.AddToRoleEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_AddToRoleEndpointTests_AddToRole_Returns400BadRequest_WhenUnsuccessful
  commentId: M:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.AddToRoleEndpointTests.AddToRole_Returns400BadRequest_WhenUnsuccessful
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.AddToRoleEndpointTests.AddToRole_Returns400BadRequest_WhenUnsuccessful()
  nameWithType: AddToRoleEndpointTests.AddToRole_Returns400BadRequest_WhenUnsuccessful()
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.AddToRoleEndpointTests.AddToRole_Returns400BadRequest_WhenUnsuccessful*
  name: AddToRole_Returns400BadRequest_WhenUnsuccessful
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.AddToRoleEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_AddToRoleEndpointTests_AddToRole_Returns400BadRequest_WhenUnsuccessful_
  commentId: Overload:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.AddToRoleEndpointTests.AddToRole_Returns400BadRequest_WhenUnsuccessful
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.AddToRoleEndpointTests.AddToRole_Returns400BadRequest_WhenUnsuccessful
  nameWithType: AddToRoleEndpointTests.AddToRole_Returns400BadRequest_WhenUnsuccessful
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.AddToRoleEndpointTests.OneTimeSetup
  name: OneTimeSetup()
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.AddToRoleEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_AddToRoleEndpointTests_OneTimeSetup
  commentId: M:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.AddToRoleEndpointTests.OneTimeSetup
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.AddToRoleEndpointTests.OneTimeSetup()
  nameWithType: AddToRoleEndpointTests.OneTimeSetup()
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.AddToRoleEndpointTests.OneTimeSetup*
  name: OneTimeSetup
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.AddToRoleEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_AddToRoleEndpointTests_OneTimeSetup_
  commentId: Overload:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.AddToRoleEndpointTests.OneTimeSetup
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.AddToRoleEndpointTests.OneTimeSetup
  nameWithType: AddToRoleEndpointTests.OneTimeSetup
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.AddToRoleEndpointTests.OneTimeTearDown
  name: OneTimeTearDown()
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.AddToRoleEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_AddToRoleEndpointTests_OneTimeTearDown
  commentId: M:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.AddToRoleEndpointTests.OneTimeTearDown
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.AddToRoleEndpointTests.OneTimeTearDown()
  nameWithType: AddToRoleEndpointTests.OneTimeTearDown()
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.AddToRoleEndpointTests.OneTimeTearDown*
  name: OneTimeTearDown
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.AddToRoleEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_AddToRoleEndpointTests_OneTimeTearDown_
  commentId: Overload:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.AddToRoleEndpointTests.OneTimeTearDown
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.AddToRoleEndpointTests.OneTimeTearDown
  nameWithType: AddToRoleEndpointTests.OneTimeTearDown
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.AdminResetPasswordEndpointTests
  name: AdminResetPasswordEndpointTests
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.AdminResetPasswordEndpointTests.html
  commentId: T:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.AdminResetPasswordEndpointTests
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.AdminResetPasswordEndpointTests
  nameWithType: AdminResetPasswordEndpointTests
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.AdminResetPasswordEndpointTests.OneTimeSetup
  name: OneTimeSetup()
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.AdminResetPasswordEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_AdminResetPasswordEndpointTests_OneTimeSetup
  commentId: M:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.AdminResetPasswordEndpointTests.OneTimeSetup
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.AdminResetPasswordEndpointTests.OneTimeSetup()
  nameWithType: AdminResetPasswordEndpointTests.OneTimeSetup()
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.AdminResetPasswordEndpointTests.OneTimeSetup*
  name: OneTimeSetup
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.AdminResetPasswordEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_AdminResetPasswordEndpointTests_OneTimeSetup_
  commentId: Overload:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.AdminResetPasswordEndpointTests.OneTimeSetup
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.AdminResetPasswordEndpointTests.OneTimeSetup
  nameWithType: AdminResetPasswordEndpointTests.OneTimeSetup
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.AdminResetPasswordEndpointTests.OneTimeTearDown
  name: OneTimeTearDown()
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.AdminResetPasswordEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_AdminResetPasswordEndpointTests_OneTimeTearDown
  commentId: M:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.AdminResetPasswordEndpointTests.OneTimeTearDown
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.AdminResetPasswordEndpointTests.OneTimeTearDown()
  nameWithType: AdminResetPasswordEndpointTests.OneTimeTearDown()
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.AdminResetPasswordEndpointTests.OneTimeTearDown*
  name: OneTimeTearDown
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.AdminResetPasswordEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_AdminResetPasswordEndpointTests_OneTimeTearDown_
  commentId: Overload:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.AdminResetPasswordEndpointTests.OneTimeTearDown
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.AdminResetPasswordEndpointTests.OneTimeTearDown
  nameWithType: AdminResetPasswordEndpointTests.OneTimeTearDown
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.AdminResetPasswordEndpointTests.ResetPassword_Returns204NoContent_WhenResetIsSuccessful
  name: ResetPassword_Returns204NoContent_WhenResetIsSuccessful()
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.AdminResetPasswordEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_AdminResetPasswordEndpointTests_ResetPassword_Returns204NoContent_WhenResetIsSuccessful
  commentId: M:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.AdminResetPasswordEndpointTests.ResetPassword_Returns204NoContent_WhenResetIsSuccessful
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.AdminResetPasswordEndpointTests.ResetPassword_Returns204NoContent_WhenResetIsSuccessful()
  nameWithType: AdminResetPasswordEndpointTests.ResetPassword_Returns204NoContent_WhenResetIsSuccessful()
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.AdminResetPasswordEndpointTests.ResetPassword_Returns204NoContent_WhenResetIsSuccessful*
  name: ResetPassword_Returns204NoContent_WhenResetIsSuccessful
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.AdminResetPasswordEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_AdminResetPasswordEndpointTests_ResetPassword_Returns204NoContent_WhenResetIsSuccessful_
  commentId: Overload:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.AdminResetPasswordEndpointTests.ResetPassword_Returns204NoContent_WhenResetIsSuccessful
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.AdminResetPasswordEndpointTests.ResetPassword_Returns204NoContent_WhenResetIsSuccessful
  nameWithType: AdminResetPasswordEndpointTests.ResetPassword_Returns204NoContent_WhenResetIsSuccessful
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.AdminResetPasswordEndpointTests.ResetPassword_Returns400BadRequest_WhenUserIsNotFound
  name: ResetPassword_Returns400BadRequest_WhenUserIsNotFound()
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.AdminResetPasswordEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_AdminResetPasswordEndpointTests_ResetPassword_Returns400BadRequest_WhenUserIsNotFound
  commentId: M:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.AdminResetPasswordEndpointTests.ResetPassword_Returns400BadRequest_WhenUserIsNotFound
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.AdminResetPasswordEndpointTests.ResetPassword_Returns400BadRequest_WhenUserIsNotFound()
  nameWithType: AdminResetPasswordEndpointTests.ResetPassword_Returns400BadRequest_WhenUserIsNotFound()
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.AdminResetPasswordEndpointTests.ResetPassword_Returns400BadRequest_WhenUserIsNotFound*
  name: ResetPassword_Returns400BadRequest_WhenUserIsNotFound
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.AdminResetPasswordEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_AdminResetPasswordEndpointTests_ResetPassword_Returns400BadRequest_WhenUserIsNotFound_
  commentId: Overload:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.AdminResetPasswordEndpointTests.ResetPassword_Returns400BadRequest_WhenUserIsNotFound
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.AdminResetPasswordEndpointTests.ResetPassword_Returns400BadRequest_WhenUserIsNotFound
  nameWithType: AdminResetPasswordEndpointTests.ResetPassword_Returns400BadRequest_WhenUserIsNotFound
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.AuthorizeEndpointTests
  name: AuthorizeEndpointTests
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.AuthorizeEndpointTests.html
  commentId: T:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.AuthorizeEndpointTests
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.AuthorizeEndpointTests
  nameWithType: AuthorizeEndpointTests
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.AuthorizeEndpointTests.AuthorizeEndpoint_Returns302Found_WhenCodeIsRequestedForRegisteredApplication
  name: AuthorizeEndpoint_Returns302Found_WhenCodeIsRequestedForRegisteredApplication()
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.AuthorizeEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_AuthorizeEndpointTests_AuthorizeEndpoint_Returns302Found_WhenCodeIsRequestedForRegisteredApplication
  commentId: M:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.AuthorizeEndpointTests.AuthorizeEndpoint_Returns302Found_WhenCodeIsRequestedForRegisteredApplication
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.AuthorizeEndpointTests.AuthorizeEndpoint_Returns302Found_WhenCodeIsRequestedForRegisteredApplication()
  nameWithType: AuthorizeEndpointTests.AuthorizeEndpoint_Returns302Found_WhenCodeIsRequestedForRegisteredApplication()
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.AuthorizeEndpointTests.AuthorizeEndpoint_Returns302Found_WhenCodeIsRequestedForRegisteredApplication*
  name: AuthorizeEndpoint_Returns302Found_WhenCodeIsRequestedForRegisteredApplication
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.AuthorizeEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_AuthorizeEndpointTests_AuthorizeEndpoint_Returns302Found_WhenCodeIsRequestedForRegisteredApplication_
  commentId: Overload:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.AuthorizeEndpointTests.AuthorizeEndpoint_Returns302Found_WhenCodeIsRequestedForRegisteredApplication
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.AuthorizeEndpointTests.AuthorizeEndpoint_Returns302Found_WhenCodeIsRequestedForRegisteredApplication
  nameWithType: AuthorizeEndpointTests.AuthorizeEndpoint_Returns302Found_WhenCodeIsRequestedForRegisteredApplication
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.AuthorizeEndpointTests.OneTimeSetup
  name: OneTimeSetup()
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.AuthorizeEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_AuthorizeEndpointTests_OneTimeSetup
  commentId: M:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.AuthorizeEndpointTests.OneTimeSetup
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.AuthorizeEndpointTests.OneTimeSetup()
  nameWithType: AuthorizeEndpointTests.OneTimeSetup()
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.AuthorizeEndpointTests.OneTimeSetup*
  name: OneTimeSetup
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.AuthorizeEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_AuthorizeEndpointTests_OneTimeSetup_
  commentId: Overload:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.AuthorizeEndpointTests.OneTimeSetup
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.AuthorizeEndpointTests.OneTimeSetup
  nameWithType: AuthorizeEndpointTests.OneTimeSetup
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.AuthorizeEndpointTests.OneTimeTearDown
  name: OneTimeTearDown()
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.AuthorizeEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_AuthorizeEndpointTests_OneTimeTearDown
  commentId: M:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.AuthorizeEndpointTests.OneTimeTearDown
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.AuthorizeEndpointTests.OneTimeTearDown()
  nameWithType: AuthorizeEndpointTests.OneTimeTearDown()
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.AuthorizeEndpointTests.OneTimeTearDown*
  name: OneTimeTearDown
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.AuthorizeEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_AuthorizeEndpointTests_OneTimeTearDown_
  commentId: Overload:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.AuthorizeEndpointTests.OneTimeTearDown
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.AuthorizeEndpointTests.OneTimeTearDown
  nameWithType: AuthorizeEndpointTests.OneTimeTearDown
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ConfirmEmailEndpointTests
  name: ConfirmEmailEndpointTests
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ConfirmEmailEndpointTests.html
  commentId: T:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ConfirmEmailEndpointTests
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ConfirmEmailEndpointTests
  nameWithType: ConfirmEmailEndpointTests
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ConfirmEmailEndpointTests.ConfirmEmail_Returns200OK_WhenConfirmationIsSuccessful
  name: ConfirmEmail_Returns200OK_WhenConfirmationIsSuccessful()
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ConfirmEmailEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_ConfirmEmailEndpointTests_ConfirmEmail_Returns200OK_WhenConfirmationIsSuccessful
  commentId: M:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ConfirmEmailEndpointTests.ConfirmEmail_Returns200OK_WhenConfirmationIsSuccessful
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ConfirmEmailEndpointTests.ConfirmEmail_Returns200OK_WhenConfirmationIsSuccessful()
  nameWithType: ConfirmEmailEndpointTests.ConfirmEmail_Returns200OK_WhenConfirmationIsSuccessful()
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ConfirmEmailEndpointTests.ConfirmEmail_Returns200OK_WhenConfirmationIsSuccessful*
  name: ConfirmEmail_Returns200OK_WhenConfirmationIsSuccessful
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ConfirmEmailEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_ConfirmEmailEndpointTests_ConfirmEmail_Returns200OK_WhenConfirmationIsSuccessful_
  commentId: Overload:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ConfirmEmailEndpointTests.ConfirmEmail_Returns200OK_WhenConfirmationIsSuccessful
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ConfirmEmailEndpointTests.ConfirmEmail_Returns200OK_WhenConfirmationIsSuccessful
  nameWithType: ConfirmEmailEndpointTests.ConfirmEmail_Returns200OK_WhenConfirmationIsSuccessful
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ConfirmEmailEndpointTests.ConfirmEmail_Returns500InternalServerError_WhenErrorsAreReturned
  name: ConfirmEmail_Returns500InternalServerError_WhenErrorsAreReturned()
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ConfirmEmailEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_ConfirmEmailEndpointTests_ConfirmEmail_Returns500InternalServerError_WhenErrorsAreReturned
  commentId: M:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ConfirmEmailEndpointTests.ConfirmEmail_Returns500InternalServerError_WhenErrorsAreReturned
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ConfirmEmailEndpointTests.ConfirmEmail_Returns500InternalServerError_WhenErrorsAreReturned()
  nameWithType: ConfirmEmailEndpointTests.ConfirmEmail_Returns500InternalServerError_WhenErrorsAreReturned()
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ConfirmEmailEndpointTests.ConfirmEmail_Returns500InternalServerError_WhenErrorsAreReturned*
  name: ConfirmEmail_Returns500InternalServerError_WhenErrorsAreReturned
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ConfirmEmailEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_ConfirmEmailEndpointTests_ConfirmEmail_Returns500InternalServerError_WhenErrorsAreReturned_
  commentId: Overload:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ConfirmEmailEndpointTests.ConfirmEmail_Returns500InternalServerError_WhenErrorsAreReturned
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ConfirmEmailEndpointTests.ConfirmEmail_Returns500InternalServerError_WhenErrorsAreReturned
  nameWithType: ConfirmEmailEndpointTests.ConfirmEmail_Returns500InternalServerError_WhenErrorsAreReturned
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ConfirmEmailEndpointTests.OneTimeSetup
  name: OneTimeSetup()
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ConfirmEmailEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_ConfirmEmailEndpointTests_OneTimeSetup
  commentId: M:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ConfirmEmailEndpointTests.OneTimeSetup
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ConfirmEmailEndpointTests.OneTimeSetup()
  nameWithType: ConfirmEmailEndpointTests.OneTimeSetup()
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ConfirmEmailEndpointTests.OneTimeSetup*
  name: OneTimeSetup
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ConfirmEmailEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_ConfirmEmailEndpointTests_OneTimeSetup_
  commentId: Overload:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ConfirmEmailEndpointTests.OneTimeSetup
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ConfirmEmailEndpointTests.OneTimeSetup
  nameWithType: ConfirmEmailEndpointTests.OneTimeSetup
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ConfirmEmailEndpointTests.OneTimeTearDown
  name: OneTimeTearDown()
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ConfirmEmailEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_ConfirmEmailEndpointTests_OneTimeTearDown
  commentId: M:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ConfirmEmailEndpointTests.OneTimeTearDown
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ConfirmEmailEndpointTests.OneTimeTearDown()
  nameWithType: ConfirmEmailEndpointTests.OneTimeTearDown()
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ConfirmEmailEndpointTests.OneTimeTearDown*
  name: OneTimeTearDown
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ConfirmEmailEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_ConfirmEmailEndpointTests_OneTimeTearDown_
  commentId: Overload:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ConfirmEmailEndpointTests.OneTimeTearDown
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ConfirmEmailEndpointTests.OneTimeTearDown
  nameWithType: ConfirmEmailEndpointTests.OneTimeTearDown
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.CreateApplicationEndpointTests
  name: CreateApplicationEndpointTests
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.CreateApplicationEndpointTests.html
  commentId: T:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.CreateApplicationEndpointTests
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.CreateApplicationEndpointTests
  nameWithType: CreateApplicationEndpointTests
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.CreateApplicationEndpointTests.CreateApplication_Returns201Created_WhenSuccessful
  name: CreateApplication_Returns201Created_WhenSuccessful()
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.CreateApplicationEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_CreateApplicationEndpointTests_CreateApplication_Returns201Created_WhenSuccessful
  commentId: M:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.CreateApplicationEndpointTests.CreateApplication_Returns201Created_WhenSuccessful
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.CreateApplicationEndpointTests.CreateApplication_Returns201Created_WhenSuccessful()
  nameWithType: CreateApplicationEndpointTests.CreateApplication_Returns201Created_WhenSuccessful()
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.CreateApplicationEndpointTests.CreateApplication_Returns201Created_WhenSuccessful*
  name: CreateApplication_Returns201Created_WhenSuccessful
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.CreateApplicationEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_CreateApplicationEndpointTests_CreateApplication_Returns201Created_WhenSuccessful_
  commentId: Overload:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.CreateApplicationEndpointTests.CreateApplication_Returns201Created_WhenSuccessful
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.CreateApplicationEndpointTests.CreateApplication_Returns201Created_WhenSuccessful
  nameWithType: CreateApplicationEndpointTests.CreateApplication_Returns201Created_WhenSuccessful
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.CreateApplicationEndpointTests.CreateApplication_Returns400BadRequest_WhenApplicationExists
  name: CreateApplication_Returns400BadRequest_WhenApplicationExists()
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.CreateApplicationEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_CreateApplicationEndpointTests_CreateApplication_Returns400BadRequest_WhenApplicationExists
  commentId: M:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.CreateApplicationEndpointTests.CreateApplication_Returns400BadRequest_WhenApplicationExists
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.CreateApplicationEndpointTests.CreateApplication_Returns400BadRequest_WhenApplicationExists()
  nameWithType: CreateApplicationEndpointTests.CreateApplication_Returns400BadRequest_WhenApplicationExists()
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.CreateApplicationEndpointTests.CreateApplication_Returns400BadRequest_WhenApplicationExists*
  name: CreateApplication_Returns400BadRequest_WhenApplicationExists
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.CreateApplicationEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_CreateApplicationEndpointTests_CreateApplication_Returns400BadRequest_WhenApplicationExists_
  commentId: Overload:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.CreateApplicationEndpointTests.CreateApplication_Returns400BadRequest_WhenApplicationExists
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.CreateApplicationEndpointTests.CreateApplication_Returns400BadRequest_WhenApplicationExists
  nameWithType: CreateApplicationEndpointTests.CreateApplication_Returns400BadRequest_WhenApplicationExists
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.CreateApplicationEndpointTests.OneTimeSetup
  name: OneTimeSetup()
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.CreateApplicationEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_CreateApplicationEndpointTests_OneTimeSetup
  commentId: M:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.CreateApplicationEndpointTests.OneTimeSetup
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.CreateApplicationEndpointTests.OneTimeSetup()
  nameWithType: CreateApplicationEndpointTests.OneTimeSetup()
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.CreateApplicationEndpointTests.OneTimeSetup*
  name: OneTimeSetup
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.CreateApplicationEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_CreateApplicationEndpointTests_OneTimeSetup_
  commentId: Overload:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.CreateApplicationEndpointTests.OneTimeSetup
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.CreateApplicationEndpointTests.OneTimeSetup
  nameWithType: CreateApplicationEndpointTests.OneTimeSetup
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.CreateApplicationEndpointTests.OneTimeTearDown
  name: OneTimeTearDown()
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.CreateApplicationEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_CreateApplicationEndpointTests_OneTimeTearDown
  commentId: M:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.CreateApplicationEndpointTests.OneTimeTearDown
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.CreateApplicationEndpointTests.OneTimeTearDown()
  nameWithType: CreateApplicationEndpointTests.OneTimeTearDown()
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.CreateApplicationEndpointTests.OneTimeTearDown*
  name: OneTimeTearDown
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.CreateApplicationEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_CreateApplicationEndpointTests_OneTimeTearDown_
  commentId: Overload:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.CreateApplicationEndpointTests.OneTimeTearDown
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.CreateApplicationEndpointTests.OneTimeTearDown
  nameWithType: CreateApplicationEndpointTests.OneTimeTearDown
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.CreateApplicationSecretEndpointTests
  name: CreateApplicationSecretEndpointTests
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.CreateApplicationSecretEndpointTests.html
  commentId: T:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.CreateApplicationSecretEndpointTests
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.CreateApplicationSecretEndpointTests
  nameWithType: CreateApplicationSecretEndpointTests
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.CreateApplicationSecretEndpointTests.CreateApplication_Returns201Created_WhenRequestIsValid
  name: CreateApplication_Returns201Created_WhenRequestIsValid()
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.CreateApplicationSecretEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_CreateApplicationSecretEndpointTests_CreateApplication_Returns201Created_WhenRequestIsValid
  commentId: M:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.CreateApplicationSecretEndpointTests.CreateApplication_Returns201Created_WhenRequestIsValid
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.CreateApplicationSecretEndpointTests.CreateApplication_Returns201Created_WhenRequestIsValid()
  nameWithType: CreateApplicationSecretEndpointTests.CreateApplication_Returns201Created_WhenRequestIsValid()
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.CreateApplicationSecretEndpointTests.CreateApplication_Returns201Created_WhenRequestIsValid*
  name: CreateApplication_Returns201Created_WhenRequestIsValid
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.CreateApplicationSecretEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_CreateApplicationSecretEndpointTests_CreateApplication_Returns201Created_WhenRequestIsValid_
  commentId: Overload:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.CreateApplicationSecretEndpointTests.CreateApplication_Returns201Created_WhenRequestIsValid
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.CreateApplicationSecretEndpointTests.CreateApplication_Returns201Created_WhenRequestIsValid
  nameWithType: CreateApplicationSecretEndpointTests.CreateApplication_Returns201Created_WhenRequestIsValid
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.CreateApplicationSecretEndpointTests.OneTimeSetup
  name: OneTimeSetup()
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.CreateApplicationSecretEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_CreateApplicationSecretEndpointTests_OneTimeSetup
  commentId: M:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.CreateApplicationSecretEndpointTests.OneTimeSetup
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.CreateApplicationSecretEndpointTests.OneTimeSetup()
  nameWithType: CreateApplicationSecretEndpointTests.OneTimeSetup()
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.CreateApplicationSecretEndpointTests.OneTimeSetup*
  name: OneTimeSetup
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.CreateApplicationSecretEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_CreateApplicationSecretEndpointTests_OneTimeSetup_
  commentId: Overload:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.CreateApplicationSecretEndpointTests.OneTimeSetup
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.CreateApplicationSecretEndpointTests.OneTimeSetup
  nameWithType: CreateApplicationSecretEndpointTests.OneTimeSetup
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.CreateApplicationSecretEndpointTests.OneTimeTearDown
  name: OneTimeTearDown()
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.CreateApplicationSecretEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_CreateApplicationSecretEndpointTests_OneTimeTearDown
  commentId: M:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.CreateApplicationSecretEndpointTests.OneTimeTearDown
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.CreateApplicationSecretEndpointTests.OneTimeTearDown()
  nameWithType: CreateApplicationSecretEndpointTests.OneTimeTearDown()
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.CreateApplicationSecretEndpointTests.OneTimeTearDown*
  name: OneTimeTearDown
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.CreateApplicationSecretEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_CreateApplicationSecretEndpointTests_OneTimeTearDown_
  commentId: Overload:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.CreateApplicationSecretEndpointTests.OneTimeTearDown
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.CreateApplicationSecretEndpointTests.OneTimeTearDown
  nameWithType: CreateApplicationSecretEndpointTests.OneTimeTearDown
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.CreateDeviceCodeEndpointTests
  name: CreateDeviceCodeEndpointTests
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.CreateDeviceCodeEndpointTests.html
  commentId: T:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.CreateDeviceCodeEndpointTests
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.CreateDeviceCodeEndpointTests
  nameWithType: CreateDeviceCodeEndpointTests
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.CreateDeviceCodeEndpointTests.CreateDeviceCode_Returns200OK_WhenDeviceCodeIsCreatedSuccessfully
  name: CreateDeviceCode_Returns200OK_WhenDeviceCodeIsCreatedSuccessfully()
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.CreateDeviceCodeEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_CreateDeviceCodeEndpointTests_CreateDeviceCode_Returns200OK_WhenDeviceCodeIsCreatedSuccessfully
  commentId: M:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.CreateDeviceCodeEndpointTests.CreateDeviceCode_Returns200OK_WhenDeviceCodeIsCreatedSuccessfully
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.CreateDeviceCodeEndpointTests.CreateDeviceCode_Returns200OK_WhenDeviceCodeIsCreatedSuccessfully()
  nameWithType: CreateDeviceCodeEndpointTests.CreateDeviceCode_Returns200OK_WhenDeviceCodeIsCreatedSuccessfully()
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.CreateDeviceCodeEndpointTests.CreateDeviceCode_Returns200OK_WhenDeviceCodeIsCreatedSuccessfully*
  name: CreateDeviceCode_Returns200OK_WhenDeviceCodeIsCreatedSuccessfully
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.CreateDeviceCodeEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_CreateDeviceCodeEndpointTests_CreateDeviceCode_Returns200OK_WhenDeviceCodeIsCreatedSuccessfully_
  commentId: Overload:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.CreateDeviceCodeEndpointTests.CreateDeviceCode_Returns200OK_WhenDeviceCodeIsCreatedSuccessfully
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.CreateDeviceCodeEndpointTests.CreateDeviceCode_Returns200OK_WhenDeviceCodeIsCreatedSuccessfully
  nameWithType: CreateDeviceCodeEndpointTests.CreateDeviceCode_Returns200OK_WhenDeviceCodeIsCreatedSuccessfully
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.CreateDeviceCodeEndpointTests.OneTimeSetup
  name: OneTimeSetup()
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.CreateDeviceCodeEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_CreateDeviceCodeEndpointTests_OneTimeSetup
  commentId: M:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.CreateDeviceCodeEndpointTests.OneTimeSetup
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.CreateDeviceCodeEndpointTests.OneTimeSetup()
  nameWithType: CreateDeviceCodeEndpointTests.OneTimeSetup()
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.CreateDeviceCodeEndpointTests.OneTimeSetup*
  name: OneTimeSetup
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.CreateDeviceCodeEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_CreateDeviceCodeEndpointTests_OneTimeSetup_
  commentId: Overload:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.CreateDeviceCodeEndpointTests.OneTimeSetup
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.CreateDeviceCodeEndpointTests.OneTimeSetup
  nameWithType: CreateDeviceCodeEndpointTests.OneTimeSetup
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.CreateDeviceCodeEndpointTests.OneTimeTearDown
  name: OneTimeTearDown()
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.CreateDeviceCodeEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_CreateDeviceCodeEndpointTests_OneTimeTearDown
  commentId: M:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.CreateDeviceCodeEndpointTests.OneTimeTearDown
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.CreateDeviceCodeEndpointTests.OneTimeTearDown()
  nameWithType: CreateDeviceCodeEndpointTests.OneTimeTearDown()
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.CreateDeviceCodeEndpointTests.OneTimeTearDown*
  name: OneTimeTearDown
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.CreateDeviceCodeEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_CreateDeviceCodeEndpointTests_OneTimeTearDown_
  commentId: Overload:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.CreateDeviceCodeEndpointTests.OneTimeTearDown
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.CreateDeviceCodeEndpointTests.OneTimeTearDown
  nameWithType: CreateDeviceCodeEndpointTests.OneTimeTearDown
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.CreateRoleEndpointTests
  name: CreateRoleEndpointTests
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.CreateRoleEndpointTests.html
  commentId: T:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.CreateRoleEndpointTests
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.CreateRoleEndpointTests
  nameWithType: CreateRoleEndpointTests
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.CreateRoleEndpointTests.CreateRoleEndpoint_Returns201Created_WhenSuccessful
  name: CreateRoleEndpoint_Returns201Created_WhenSuccessful()
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.CreateRoleEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_CreateRoleEndpointTests_CreateRoleEndpoint_Returns201Created_WhenSuccessful
  commentId: M:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.CreateRoleEndpointTests.CreateRoleEndpoint_Returns201Created_WhenSuccessful
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.CreateRoleEndpointTests.CreateRoleEndpoint_Returns201Created_WhenSuccessful()
  nameWithType: CreateRoleEndpointTests.CreateRoleEndpoint_Returns201Created_WhenSuccessful()
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.CreateRoleEndpointTests.CreateRoleEndpoint_Returns201Created_WhenSuccessful*
  name: CreateRoleEndpoint_Returns201Created_WhenSuccessful
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.CreateRoleEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_CreateRoleEndpointTests_CreateRoleEndpoint_Returns201Created_WhenSuccessful_
  commentId: Overload:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.CreateRoleEndpointTests.CreateRoleEndpoint_Returns201Created_WhenSuccessful
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.CreateRoleEndpointTests.CreateRoleEndpoint_Returns201Created_WhenSuccessful
  nameWithType: CreateRoleEndpointTests.CreateRoleEndpoint_Returns201Created_WhenSuccessful
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.CreateRoleEndpointTests.OneTimeSetup
  name: OneTimeSetup()
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.CreateRoleEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_CreateRoleEndpointTests_OneTimeSetup
  commentId: M:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.CreateRoleEndpointTests.OneTimeSetup
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.CreateRoleEndpointTests.OneTimeSetup()
  nameWithType: CreateRoleEndpointTests.OneTimeSetup()
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.CreateRoleEndpointTests.OneTimeSetup*
  name: OneTimeSetup
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.CreateRoleEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_CreateRoleEndpointTests_OneTimeSetup_
  commentId: Overload:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.CreateRoleEndpointTests.OneTimeSetup
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.CreateRoleEndpointTests.OneTimeSetup
  nameWithType: CreateRoleEndpointTests.OneTimeSetup
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.CreateRoleEndpointTests.OneTimeTearDown
  name: OneTimeTearDown()
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.CreateRoleEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_CreateRoleEndpointTests_OneTimeTearDown
  commentId: M:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.CreateRoleEndpointTests.OneTimeTearDown
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.CreateRoleEndpointTests.OneTimeTearDown()
  nameWithType: CreateRoleEndpointTests.OneTimeTearDown()
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.CreateRoleEndpointTests.OneTimeTearDown*
  name: OneTimeTearDown
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.CreateRoleEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_CreateRoleEndpointTests_OneTimeTearDown_
  commentId: Overload:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.CreateRoleEndpointTests.OneTimeTearDown
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.CreateRoleEndpointTests.OneTimeTearDown
  nameWithType: CreateRoleEndpointTests.OneTimeTearDown
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.DeleteAccountEndpointTests
  name: DeleteAccountEndpointTests
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.DeleteAccountEndpointTests.html
  commentId: T:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.DeleteAccountEndpointTests
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.DeleteAccountEndpointTests
  nameWithType: DeleteAccountEndpointTests
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.DeleteAccountEndpointTests.DeleteAccount_Returns204NoContent_WhenSoftDeletionIsSuccessful
  name: DeleteAccount_Returns204NoContent_WhenSoftDeletionIsSuccessful()
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.DeleteAccountEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_DeleteAccountEndpointTests_DeleteAccount_Returns204NoContent_WhenSoftDeletionIsSuccessful
  commentId: M:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.DeleteAccountEndpointTests.DeleteAccount_Returns204NoContent_WhenSoftDeletionIsSuccessful
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.DeleteAccountEndpointTests.DeleteAccount_Returns204NoContent_WhenSoftDeletionIsSuccessful()
  nameWithType: DeleteAccountEndpointTests.DeleteAccount_Returns204NoContent_WhenSoftDeletionIsSuccessful()
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.DeleteAccountEndpointTests.DeleteAccount_Returns204NoContent_WhenSoftDeletionIsSuccessful*
  name: DeleteAccount_Returns204NoContent_WhenSoftDeletionIsSuccessful
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.DeleteAccountEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_DeleteAccountEndpointTests_DeleteAccount_Returns204NoContent_WhenSoftDeletionIsSuccessful_
  commentId: Overload:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.DeleteAccountEndpointTests.DeleteAccount_Returns204NoContent_WhenSoftDeletionIsSuccessful
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.DeleteAccountEndpointTests.DeleteAccount_Returns204NoContent_WhenSoftDeletionIsSuccessful
  nameWithType: DeleteAccountEndpointTests.DeleteAccount_Returns204NoContent_WhenSoftDeletionIsSuccessful
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.DeleteAccountEndpointTests.DeleteAccount_Returns500InternalServerError_WhenSoftDeletionFails
  name: DeleteAccount_Returns500InternalServerError_WhenSoftDeletionFails()
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.DeleteAccountEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_DeleteAccountEndpointTests_DeleteAccount_Returns500InternalServerError_WhenSoftDeletionFails
  commentId: M:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.DeleteAccountEndpointTests.DeleteAccount_Returns500InternalServerError_WhenSoftDeletionFails
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.DeleteAccountEndpointTests.DeleteAccount_Returns500InternalServerError_WhenSoftDeletionFails()
  nameWithType: DeleteAccountEndpointTests.DeleteAccount_Returns500InternalServerError_WhenSoftDeletionFails()
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.DeleteAccountEndpointTests.DeleteAccount_Returns500InternalServerError_WhenSoftDeletionFails*
  name: DeleteAccount_Returns500InternalServerError_WhenSoftDeletionFails
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.DeleteAccountEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_DeleteAccountEndpointTests_DeleteAccount_Returns500InternalServerError_WhenSoftDeletionFails_
  commentId: Overload:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.DeleteAccountEndpointTests.DeleteAccount_Returns500InternalServerError_WhenSoftDeletionFails
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.DeleteAccountEndpointTests.DeleteAccount_Returns500InternalServerError_WhenSoftDeletionFails
  nameWithType: DeleteAccountEndpointTests.DeleteAccount_Returns500InternalServerError_WhenSoftDeletionFails
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.DeleteAccountEndpointTests.OneTimeSetup
  name: OneTimeSetup()
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.DeleteAccountEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_DeleteAccountEndpointTests_OneTimeSetup
  commentId: M:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.DeleteAccountEndpointTests.OneTimeSetup
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.DeleteAccountEndpointTests.OneTimeSetup()
  nameWithType: DeleteAccountEndpointTests.OneTimeSetup()
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.DeleteAccountEndpointTests.OneTimeSetup*
  name: OneTimeSetup
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.DeleteAccountEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_DeleteAccountEndpointTests_OneTimeSetup_
  commentId: Overload:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.DeleteAccountEndpointTests.OneTimeSetup
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.DeleteAccountEndpointTests.OneTimeSetup
  nameWithType: DeleteAccountEndpointTests.OneTimeSetup
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.DeleteAccountEndpointTests.OneTimeTearDown
  name: OneTimeTearDown()
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.DeleteAccountEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_DeleteAccountEndpointTests_OneTimeTearDown
  commentId: M:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.DeleteAccountEndpointTests.OneTimeTearDown
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.DeleteAccountEndpointTests.OneTimeTearDown()
  nameWithType: DeleteAccountEndpointTests.OneTimeTearDown()
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.DeleteAccountEndpointTests.OneTimeTearDown*
  name: OneTimeTearDown
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.DeleteAccountEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_DeleteAccountEndpointTests_OneTimeTearDown_
  commentId: Overload:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.DeleteAccountEndpointTests.OneTimeTearDown
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.DeleteAccountEndpointTests.OneTimeTearDown
  nameWithType: DeleteAccountEndpointTests.OneTimeTearDown
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.DeleteApplicationEndpointTests
  name: DeleteApplicationEndpointTests
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.DeleteApplicationEndpointTests.html
  commentId: T:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.DeleteApplicationEndpointTests
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.DeleteApplicationEndpointTests
  nameWithType: DeleteApplicationEndpointTests
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.DeleteApplicationEndpointTests.DeleteApplication_Returns204NoContent_WhenRequestIsValid
  name: DeleteApplication_Returns204NoContent_WhenRequestIsValid()
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.DeleteApplicationEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_DeleteApplicationEndpointTests_DeleteApplication_Returns204NoContent_WhenRequestIsValid
  commentId: M:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.DeleteApplicationEndpointTests.DeleteApplication_Returns204NoContent_WhenRequestIsValid
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.DeleteApplicationEndpointTests.DeleteApplication_Returns204NoContent_WhenRequestIsValid()
  nameWithType: DeleteApplicationEndpointTests.DeleteApplication_Returns204NoContent_WhenRequestIsValid()
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.DeleteApplicationEndpointTests.DeleteApplication_Returns204NoContent_WhenRequestIsValid*
  name: DeleteApplication_Returns204NoContent_WhenRequestIsValid
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.DeleteApplicationEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_DeleteApplicationEndpointTests_DeleteApplication_Returns204NoContent_WhenRequestIsValid_
  commentId: Overload:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.DeleteApplicationEndpointTests.DeleteApplication_Returns204NoContent_WhenRequestIsValid
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.DeleteApplicationEndpointTests.DeleteApplication_Returns204NoContent_WhenRequestIsValid
  nameWithType: DeleteApplicationEndpointTests.DeleteApplication_Returns204NoContent_WhenRequestIsValid
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.DeleteApplicationEndpointTests.DeleteApplication_Returns400BadRequest_WhenApplicationIsNotFound
  name: DeleteApplication_Returns400BadRequest_WhenApplicationIsNotFound()
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.DeleteApplicationEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_DeleteApplicationEndpointTests_DeleteApplication_Returns400BadRequest_WhenApplicationIsNotFound
  commentId: M:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.DeleteApplicationEndpointTests.DeleteApplication_Returns400BadRequest_WhenApplicationIsNotFound
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.DeleteApplicationEndpointTests.DeleteApplication_Returns400BadRequest_WhenApplicationIsNotFound()
  nameWithType: DeleteApplicationEndpointTests.DeleteApplication_Returns400BadRequest_WhenApplicationIsNotFound()
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.DeleteApplicationEndpointTests.DeleteApplication_Returns400BadRequest_WhenApplicationIsNotFound*
  name: DeleteApplication_Returns400BadRequest_WhenApplicationIsNotFound
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.DeleteApplicationEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_DeleteApplicationEndpointTests_DeleteApplication_Returns400BadRequest_WhenApplicationIsNotFound_
  commentId: Overload:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.DeleteApplicationEndpointTests.DeleteApplication_Returns400BadRequest_WhenApplicationIsNotFound
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.DeleteApplicationEndpointTests.DeleteApplication_Returns400BadRequest_WhenApplicationIsNotFound
  nameWithType: DeleteApplicationEndpointTests.DeleteApplication_Returns400BadRequest_WhenApplicationIsNotFound
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.DeleteApplicationEndpointTests.DeleteApplication_Returns500InternalServerError_WhenApplicationIsNotFound
  name: DeleteApplication_Returns500InternalServerError_WhenApplicationIsNotFound()
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.DeleteApplicationEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_DeleteApplicationEndpointTests_DeleteApplication_Returns500InternalServerError_WhenApplicationIsNotFound
  commentId: M:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.DeleteApplicationEndpointTests.DeleteApplication_Returns500InternalServerError_WhenApplicationIsNotFound
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.DeleteApplicationEndpointTests.DeleteApplication_Returns500InternalServerError_WhenApplicationIsNotFound()
  nameWithType: DeleteApplicationEndpointTests.DeleteApplication_Returns500InternalServerError_WhenApplicationIsNotFound()
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.DeleteApplicationEndpointTests.DeleteApplication_Returns500InternalServerError_WhenApplicationIsNotFound*
  name: DeleteApplication_Returns500InternalServerError_WhenApplicationIsNotFound
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.DeleteApplicationEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_DeleteApplicationEndpointTests_DeleteApplication_Returns500InternalServerError_WhenApplicationIsNotFound_
  commentId: Overload:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.DeleteApplicationEndpointTests.DeleteApplication_Returns500InternalServerError_WhenApplicationIsNotFound
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.DeleteApplicationEndpointTests.DeleteApplication_Returns500InternalServerError_WhenApplicationIsNotFound
  nameWithType: DeleteApplicationEndpointTests.DeleteApplication_Returns500InternalServerError_WhenApplicationIsNotFound
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.DeleteApplicationEndpointTests.OneTimeSetup
  name: OneTimeSetup()
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.DeleteApplicationEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_DeleteApplicationEndpointTests_OneTimeSetup
  commentId: M:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.DeleteApplicationEndpointTests.OneTimeSetup
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.DeleteApplicationEndpointTests.OneTimeSetup()
  nameWithType: DeleteApplicationEndpointTests.OneTimeSetup()
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.DeleteApplicationEndpointTests.OneTimeSetup*
  name: OneTimeSetup
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.DeleteApplicationEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_DeleteApplicationEndpointTests_OneTimeSetup_
  commentId: Overload:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.DeleteApplicationEndpointTests.OneTimeSetup
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.DeleteApplicationEndpointTests.OneTimeSetup
  nameWithType: DeleteApplicationEndpointTests.OneTimeSetup
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.DeleteApplicationEndpointTests.OneTimeTearDown
  name: OneTimeTearDown()
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.DeleteApplicationEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_DeleteApplicationEndpointTests_OneTimeTearDown
  commentId: M:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.DeleteApplicationEndpointTests.OneTimeTearDown
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.DeleteApplicationEndpointTests.OneTimeTearDown()
  nameWithType: DeleteApplicationEndpointTests.OneTimeTearDown()
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.DeleteApplicationEndpointTests.OneTimeTearDown*
  name: OneTimeTearDown
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.DeleteApplicationEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_DeleteApplicationEndpointTests_OneTimeTearDown_
  commentId: Overload:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.DeleteApplicationEndpointTests.OneTimeTearDown
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.DeleteApplicationEndpointTests.OneTimeTearDown
  nameWithType: DeleteApplicationEndpointTests.OneTimeTearDown
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.DeleteRoleEndpointTests
  name: DeleteRoleEndpointTests
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.DeleteRoleEndpointTests.html
  commentId: T:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.DeleteRoleEndpointTests
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.DeleteRoleEndpointTests
  nameWithType: DeleteRoleEndpointTests
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.DeleteRoleEndpointTests.DeleteRole_Returns204NoContent_WhenSoftDeleteIsSuccessful
  name: DeleteRole_Returns204NoContent_WhenSoftDeleteIsSuccessful()
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.DeleteRoleEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_DeleteRoleEndpointTests_DeleteRole_Returns204NoContent_WhenSoftDeleteIsSuccessful
  commentId: M:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.DeleteRoleEndpointTests.DeleteRole_Returns204NoContent_WhenSoftDeleteIsSuccessful
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.DeleteRoleEndpointTests.DeleteRole_Returns204NoContent_WhenSoftDeleteIsSuccessful()
  nameWithType: DeleteRoleEndpointTests.DeleteRole_Returns204NoContent_WhenSoftDeleteIsSuccessful()
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.DeleteRoleEndpointTests.DeleteRole_Returns204NoContent_WhenSoftDeleteIsSuccessful*
  name: DeleteRole_Returns204NoContent_WhenSoftDeleteIsSuccessful
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.DeleteRoleEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_DeleteRoleEndpointTests_DeleteRole_Returns204NoContent_WhenSoftDeleteIsSuccessful_
  commentId: Overload:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.DeleteRoleEndpointTests.DeleteRole_Returns204NoContent_WhenSoftDeleteIsSuccessful
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.DeleteRoleEndpointTests.DeleteRole_Returns204NoContent_WhenSoftDeleteIsSuccessful
  nameWithType: DeleteRoleEndpointTests.DeleteRole_Returns204NoContent_WhenSoftDeleteIsSuccessful
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.DeleteRoleEndpointTests.DeleteRole_Returns400BadRequest_WhenRoleIsNotFound
  name: DeleteRole_Returns400BadRequest_WhenRoleIsNotFound()
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.DeleteRoleEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_DeleteRoleEndpointTests_DeleteRole_Returns400BadRequest_WhenRoleIsNotFound
  commentId: M:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.DeleteRoleEndpointTests.DeleteRole_Returns400BadRequest_WhenRoleIsNotFound
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.DeleteRoleEndpointTests.DeleteRole_Returns400BadRequest_WhenRoleIsNotFound()
  nameWithType: DeleteRoleEndpointTests.DeleteRole_Returns400BadRequest_WhenRoleIsNotFound()
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.DeleteRoleEndpointTests.DeleteRole_Returns400BadRequest_WhenRoleIsNotFound*
  name: DeleteRole_Returns400BadRequest_WhenRoleIsNotFound
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.DeleteRoleEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_DeleteRoleEndpointTests_DeleteRole_Returns400BadRequest_WhenRoleIsNotFound_
  commentId: Overload:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.DeleteRoleEndpointTests.DeleteRole_Returns400BadRequest_WhenRoleIsNotFound
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.DeleteRoleEndpointTests.DeleteRole_Returns400BadRequest_WhenRoleIsNotFound
  nameWithType: DeleteRoleEndpointTests.DeleteRole_Returns400BadRequest_WhenRoleIsNotFound
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.DeleteRoleEndpointTests.OneTimeSetup
  name: OneTimeSetup()
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.DeleteRoleEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_DeleteRoleEndpointTests_OneTimeSetup
  commentId: M:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.DeleteRoleEndpointTests.OneTimeSetup
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.DeleteRoleEndpointTests.OneTimeSetup()
  nameWithType: DeleteRoleEndpointTests.OneTimeSetup()
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.DeleteRoleEndpointTests.OneTimeSetup*
  name: OneTimeSetup
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.DeleteRoleEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_DeleteRoleEndpointTests_OneTimeSetup_
  commentId: Overload:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.DeleteRoleEndpointTests.OneTimeSetup
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.DeleteRoleEndpointTests.OneTimeSetup
  nameWithType: DeleteRoleEndpointTests.OneTimeSetup
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.DeleteRoleEndpointTests.OneTimeTearDown
  name: OneTimeTearDown()
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.DeleteRoleEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_DeleteRoleEndpointTests_OneTimeTearDown
  commentId: M:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.DeleteRoleEndpointTests.OneTimeTearDown
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.DeleteRoleEndpointTests.OneTimeTearDown()
  nameWithType: DeleteRoleEndpointTests.OneTimeTearDown()
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.DeleteRoleEndpointTests.OneTimeTearDown*
  name: OneTimeTearDown
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.DeleteRoleEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_DeleteRoleEndpointTests_OneTimeTearDown_
  commentId: Overload:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.DeleteRoleEndpointTests.OneTimeTearDown
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.DeleteRoleEndpointTests.OneTimeTearDown
  nameWithType: DeleteRoleEndpointTests.OneTimeTearDown
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.DisableMultiFactorEndpointTests
  name: DisableMultiFactorEndpointTests
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.DisableMultiFactorEndpointTests.html
  commentId: T:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.DisableMultiFactorEndpointTests
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.DisableMultiFactorEndpointTests
  nameWithType: DisableMultiFactorEndpointTests
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.DisableMultiFactorEndpointTests.DisableMultiFactor_Returns200OK_WhenSuccessful
  name: DisableMultiFactor_Returns200OK_WhenSuccessful()
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.DisableMultiFactorEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_DisableMultiFactorEndpointTests_DisableMultiFactor_Returns200OK_WhenSuccessful
  commentId: M:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.DisableMultiFactorEndpointTests.DisableMultiFactor_Returns200OK_WhenSuccessful
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.DisableMultiFactorEndpointTests.DisableMultiFactor_Returns200OK_WhenSuccessful()
  nameWithType: DisableMultiFactorEndpointTests.DisableMultiFactor_Returns200OK_WhenSuccessful()
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.DisableMultiFactorEndpointTests.DisableMultiFactor_Returns200OK_WhenSuccessful*
  name: DisableMultiFactor_Returns200OK_WhenSuccessful
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.DisableMultiFactorEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_DisableMultiFactorEndpointTests_DisableMultiFactor_Returns200OK_WhenSuccessful_
  commentId: Overload:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.DisableMultiFactorEndpointTests.DisableMultiFactor_Returns200OK_WhenSuccessful
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.DisableMultiFactorEndpointTests.DisableMultiFactor_Returns200OK_WhenSuccessful
  nameWithType: DisableMultiFactorEndpointTests.DisableMultiFactor_Returns200OK_WhenSuccessful
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.DisableMultiFactorEndpointTests.DisableMultiFactor_Returns400BadRequest_WhenUserIsNotFound
  name: DisableMultiFactor_Returns400BadRequest_WhenUserIsNotFound()
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.DisableMultiFactorEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_DisableMultiFactorEndpointTests_DisableMultiFactor_Returns400BadRequest_WhenUserIsNotFound
  commentId: M:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.DisableMultiFactorEndpointTests.DisableMultiFactor_Returns400BadRequest_WhenUserIsNotFound
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.DisableMultiFactorEndpointTests.DisableMultiFactor_Returns400BadRequest_WhenUserIsNotFound()
  nameWithType: DisableMultiFactorEndpointTests.DisableMultiFactor_Returns400BadRequest_WhenUserIsNotFound()
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.DisableMultiFactorEndpointTests.DisableMultiFactor_Returns400BadRequest_WhenUserIsNotFound*
  name: DisableMultiFactor_Returns400BadRequest_WhenUserIsNotFound
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.DisableMultiFactorEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_DisableMultiFactorEndpointTests_DisableMultiFactor_Returns400BadRequest_WhenUserIsNotFound_
  commentId: Overload:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.DisableMultiFactorEndpointTests.DisableMultiFactor_Returns400BadRequest_WhenUserIsNotFound
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.DisableMultiFactorEndpointTests.DisableMultiFactor_Returns400BadRequest_WhenUserIsNotFound
  nameWithType: DisableMultiFactorEndpointTests.DisableMultiFactor_Returns400BadRequest_WhenUserIsNotFound
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.DisableMultiFactorEndpointTests.OneTimeSetup
  name: OneTimeSetup()
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.DisableMultiFactorEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_DisableMultiFactorEndpointTests_OneTimeSetup
  commentId: M:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.DisableMultiFactorEndpointTests.OneTimeSetup
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.DisableMultiFactorEndpointTests.OneTimeSetup()
  nameWithType: DisableMultiFactorEndpointTests.OneTimeSetup()
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.DisableMultiFactorEndpointTests.OneTimeSetup*
  name: OneTimeSetup
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.DisableMultiFactorEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_DisableMultiFactorEndpointTests_OneTimeSetup_
  commentId: Overload:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.DisableMultiFactorEndpointTests.OneTimeSetup
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.DisableMultiFactorEndpointTests.OneTimeSetup
  nameWithType: DisableMultiFactorEndpointTests.OneTimeSetup
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.DisableMultiFactorEndpointTests.OneTimeTearDown
  name: OneTimeTearDown()
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.DisableMultiFactorEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_DisableMultiFactorEndpointTests_OneTimeTearDown
  commentId: M:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.DisableMultiFactorEndpointTests.OneTimeTearDown
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.DisableMultiFactorEndpointTests.OneTimeTearDown()
  nameWithType: DisableMultiFactorEndpointTests.OneTimeTearDown()
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.DisableMultiFactorEndpointTests.OneTimeTearDown*
  name: OneTimeTearDown
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.DisableMultiFactorEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_DisableMultiFactorEndpointTests_OneTimeTearDown_
  commentId: Overload:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.DisableMultiFactorEndpointTests.OneTimeTearDown
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.DisableMultiFactorEndpointTests.OneTimeTearDown
  nameWithType: DisableMultiFactorEndpointTests.OneTimeTearDown
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.LoginEndpointTests
  name: LoginEndpointTests
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.LoginEndpointTests.html
  commentId: T:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.LoginEndpointTests
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.LoginEndpointTests
  nameWithType: LoginEndpointTests
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.LoginEndpointTests.LoginEndpoint_Returns200OK_WhenLoginIsSuccessful
  name: LoginEndpoint_Returns200OK_WhenLoginIsSuccessful()
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.LoginEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_LoginEndpointTests_LoginEndpoint_Returns200OK_WhenLoginIsSuccessful
  commentId: M:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.LoginEndpointTests.LoginEndpoint_Returns200OK_WhenLoginIsSuccessful
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.LoginEndpointTests.LoginEndpoint_Returns200OK_WhenLoginIsSuccessful()
  nameWithType: LoginEndpointTests.LoginEndpoint_Returns200OK_WhenLoginIsSuccessful()
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.LoginEndpointTests.LoginEndpoint_Returns200OK_WhenLoginIsSuccessful*
  name: LoginEndpoint_Returns200OK_WhenLoginIsSuccessful
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.LoginEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_LoginEndpointTests_LoginEndpoint_Returns200OK_WhenLoginIsSuccessful_
  commentId: Overload:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.LoginEndpointTests.LoginEndpoint_Returns200OK_WhenLoginIsSuccessful
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.LoginEndpointTests.LoginEndpoint_Returns200OK_WhenLoginIsSuccessful
  nameWithType: LoginEndpointTests.LoginEndpoint_Returns200OK_WhenLoginIsSuccessful
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.LoginEndpointTests.LoginEndpoint_Returns200OK_WhenMultiFactorIsRequired
  name: LoginEndpoint_Returns200OK_WhenMultiFactorIsRequired()
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.LoginEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_LoginEndpointTests_LoginEndpoint_Returns200OK_WhenMultiFactorIsRequired
  commentId: M:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.LoginEndpointTests.LoginEndpoint_Returns200OK_WhenMultiFactorIsRequired
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.LoginEndpointTests.LoginEndpoint_Returns200OK_WhenMultiFactorIsRequired()
  nameWithType: LoginEndpointTests.LoginEndpoint_Returns200OK_WhenMultiFactorIsRequired()
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.LoginEndpointTests.LoginEndpoint_Returns200OK_WhenMultiFactorIsRequired*
  name: LoginEndpoint_Returns200OK_WhenMultiFactorIsRequired
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.LoginEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_LoginEndpointTests_LoginEndpoint_Returns200OK_WhenMultiFactorIsRequired_
  commentId: Overload:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.LoginEndpointTests.LoginEndpoint_Returns200OK_WhenMultiFactorIsRequired
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.LoginEndpointTests.LoginEndpoint_Returns200OK_WhenMultiFactorIsRequired
  nameWithType: LoginEndpointTests.LoginEndpoint_Returns200OK_WhenMultiFactorIsRequired
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.LoginEndpointTests.LoginEndpoint_Returns400BadRequest_WhenUserIsNotFound
  name: LoginEndpoint_Returns400BadRequest_WhenUserIsNotFound()
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.LoginEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_LoginEndpointTests_LoginEndpoint_Returns400BadRequest_WhenUserIsNotFound
  commentId: M:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.LoginEndpointTests.LoginEndpoint_Returns400BadRequest_WhenUserIsNotFound
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.LoginEndpointTests.LoginEndpoint_Returns400BadRequest_WhenUserIsNotFound()
  nameWithType: LoginEndpointTests.LoginEndpoint_Returns400BadRequest_WhenUserIsNotFound()
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.LoginEndpointTests.LoginEndpoint_Returns400BadRequest_WhenUserIsNotFound*
  name: LoginEndpoint_Returns400BadRequest_WhenUserIsNotFound
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.LoginEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_LoginEndpointTests_LoginEndpoint_Returns400BadRequest_WhenUserIsNotFound_
  commentId: Overload:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.LoginEndpointTests.LoginEndpoint_Returns400BadRequest_WhenUserIsNotFound
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.LoginEndpointTests.LoginEndpoint_Returns400BadRequest_WhenUserIsNotFound
  nameWithType: LoginEndpointTests.LoginEndpoint_Returns400BadRequest_WhenUserIsNotFound
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.LoginEndpointTests.LoginEndpoint_Returns401Unauthorized_WhenLoginFails
  name: LoginEndpoint_Returns401Unauthorized_WhenLoginFails()
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.LoginEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_LoginEndpointTests_LoginEndpoint_Returns401Unauthorized_WhenLoginFails
  commentId: M:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.LoginEndpointTests.LoginEndpoint_Returns401Unauthorized_WhenLoginFails
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.LoginEndpointTests.LoginEndpoint_Returns401Unauthorized_WhenLoginFails()
  nameWithType: LoginEndpointTests.LoginEndpoint_Returns401Unauthorized_WhenLoginFails()
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.LoginEndpointTests.LoginEndpoint_Returns401Unauthorized_WhenLoginFails*
  name: LoginEndpoint_Returns401Unauthorized_WhenLoginFails
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.LoginEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_LoginEndpointTests_LoginEndpoint_Returns401Unauthorized_WhenLoginFails_
  commentId: Overload:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.LoginEndpointTests.LoginEndpoint_Returns401Unauthorized_WhenLoginFails
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.LoginEndpointTests.LoginEndpoint_Returns401Unauthorized_WhenLoginFails
  nameWithType: LoginEndpointTests.LoginEndpoint_Returns401Unauthorized_WhenLoginFails
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.LoginEndpointTests.OneTimeSetup
  name: OneTimeSetup()
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.LoginEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_LoginEndpointTests_OneTimeSetup
  commentId: M:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.LoginEndpointTests.OneTimeSetup
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.LoginEndpointTests.OneTimeSetup()
  nameWithType: LoginEndpointTests.OneTimeSetup()
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.LoginEndpointTests.OneTimeSetup*
  name: OneTimeSetup
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.LoginEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_LoginEndpointTests_OneTimeSetup_
  commentId: Overload:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.LoginEndpointTests.OneTimeSetup
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.LoginEndpointTests.OneTimeSetup
  nameWithType: LoginEndpointTests.OneTimeSetup
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.LoginEndpointTests.OneTimeTearDown
  name: OneTimeTearDown()
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.LoginEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_LoginEndpointTests_OneTimeTearDown
  commentId: M:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.LoginEndpointTests.OneTimeTearDown
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.LoginEndpointTests.OneTimeTearDown()
  nameWithType: LoginEndpointTests.OneTimeTearDown()
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.LoginEndpointTests.OneTimeTearDown*
  name: OneTimeTearDown
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.LoginEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_LoginEndpointTests_OneTimeTearDown_
  commentId: Overload:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.LoginEndpointTests.OneTimeTearDown
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.LoginEndpointTests.OneTimeTearDown
  nameWithType: LoginEndpointTests.OneTimeTearDown
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.LogoutEndpointTests
  name: LogoutEndpointTests
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.LogoutEndpointTests.html
  commentId: T:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.LogoutEndpointTests
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.LogoutEndpointTests
  nameWithType: LogoutEndpointTests
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.LogoutEndpointTests.Logout_Returns204NoContent_WhenSignOutIsSuccessful
  name: Logout_Returns204NoContent_WhenSignOutIsSuccessful()
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.LogoutEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_LogoutEndpointTests_Logout_Returns204NoContent_WhenSignOutIsSuccessful
  commentId: M:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.LogoutEndpointTests.Logout_Returns204NoContent_WhenSignOutIsSuccessful
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.LogoutEndpointTests.Logout_Returns204NoContent_WhenSignOutIsSuccessful()
  nameWithType: LogoutEndpointTests.Logout_Returns204NoContent_WhenSignOutIsSuccessful()
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.LogoutEndpointTests.Logout_Returns204NoContent_WhenSignOutIsSuccessful*
  name: Logout_Returns204NoContent_WhenSignOutIsSuccessful
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.LogoutEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_LogoutEndpointTests_Logout_Returns204NoContent_WhenSignOutIsSuccessful_
  commentId: Overload:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.LogoutEndpointTests.Logout_Returns204NoContent_WhenSignOutIsSuccessful
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.LogoutEndpointTests.Logout_Returns204NoContent_WhenSignOutIsSuccessful
  nameWithType: LogoutEndpointTests.Logout_Returns204NoContent_WhenSignOutIsSuccessful
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.LogoutEndpointTests.OneTimeSetup
  name: OneTimeSetup()
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.LogoutEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_LogoutEndpointTests_OneTimeSetup
  commentId: M:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.LogoutEndpointTests.OneTimeSetup
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.LogoutEndpointTests.OneTimeSetup()
  nameWithType: LogoutEndpointTests.OneTimeSetup()
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.LogoutEndpointTests.OneTimeSetup*
  name: OneTimeSetup
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.LogoutEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_LogoutEndpointTests_OneTimeSetup_
  commentId: Overload:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.LogoutEndpointTests.OneTimeSetup
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.LogoutEndpointTests.OneTimeSetup
  nameWithType: LogoutEndpointTests.OneTimeSetup
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.LogoutEndpointTests.OneTimeTearDown
  name: OneTimeTearDown()
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.LogoutEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_LogoutEndpointTests_OneTimeTearDown
  commentId: M:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.LogoutEndpointTests.OneTimeTearDown
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.LogoutEndpointTests.OneTimeTearDown()
  nameWithType: LogoutEndpointTests.OneTimeTearDown()
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.LogoutEndpointTests.OneTimeTearDown*
  name: OneTimeTearDown
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.LogoutEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_LogoutEndpointTests_OneTimeTearDown_
  commentId: Overload:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.LogoutEndpointTests.OneTimeTearDown
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.LogoutEndpointTests.OneTimeTearDown
  nameWithType: LogoutEndpointTests.OneTimeTearDown
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorLoginEndpointTests
  name: MultiFactorLoginEndpointTests
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorLoginEndpointTests.html
  commentId: T:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorLoginEndpointTests
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorLoginEndpointTests
  nameWithType: MultiFactorLoginEndpointTests
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorLoginEndpointTests.MultiFactorLogin_Returns200OK_WhenLoginIsSuccessful
  name: MultiFactorLogin_Returns200OK_WhenLoginIsSuccessful()
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorLoginEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_MultiFactorLoginEndpointTests_MultiFactorLogin_Returns200OK_WhenLoginIsSuccessful
  commentId: M:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorLoginEndpointTests.MultiFactorLogin_Returns200OK_WhenLoginIsSuccessful
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorLoginEndpointTests.MultiFactorLogin_Returns200OK_WhenLoginIsSuccessful()
  nameWithType: MultiFactorLoginEndpointTests.MultiFactorLogin_Returns200OK_WhenLoginIsSuccessful()
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorLoginEndpointTests.MultiFactorLogin_Returns200OK_WhenLoginIsSuccessful*
  name: MultiFactorLogin_Returns200OK_WhenLoginIsSuccessful
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorLoginEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_MultiFactorLoginEndpointTests_MultiFactorLogin_Returns200OK_WhenLoginIsSuccessful_
  commentId: Overload:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorLoginEndpointTests.MultiFactorLogin_Returns200OK_WhenLoginIsSuccessful
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorLoginEndpointTests.MultiFactorLogin_Returns200OK_WhenLoginIsSuccessful
  nameWithType: MultiFactorLoginEndpointTests.MultiFactorLogin_Returns200OK_WhenLoginIsSuccessful
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorLoginEndpointTests.MultiFactorLogin_Returns400BadRequest_WhenUserIsNotFound
  name: MultiFactorLogin_Returns400BadRequest_WhenUserIsNotFound()
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorLoginEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_MultiFactorLoginEndpointTests_MultiFactorLogin_Returns400BadRequest_WhenUserIsNotFound
  commentId: M:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorLoginEndpointTests.MultiFactorLogin_Returns400BadRequest_WhenUserIsNotFound
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorLoginEndpointTests.MultiFactorLogin_Returns400BadRequest_WhenUserIsNotFound()
  nameWithType: MultiFactorLoginEndpointTests.MultiFactorLogin_Returns400BadRequest_WhenUserIsNotFound()
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorLoginEndpointTests.MultiFactorLogin_Returns400BadRequest_WhenUserIsNotFound*
  name: MultiFactorLogin_Returns400BadRequest_WhenUserIsNotFound
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorLoginEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_MultiFactorLoginEndpointTests_MultiFactorLogin_Returns400BadRequest_WhenUserIsNotFound_
  commentId: Overload:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorLoginEndpointTests.MultiFactorLogin_Returns400BadRequest_WhenUserIsNotFound
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorLoginEndpointTests.MultiFactorLogin_Returns400BadRequest_WhenUserIsNotFound
  nameWithType: MultiFactorLoginEndpointTests.MultiFactorLogin_Returns400BadRequest_WhenUserIsNotFound
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorLoginEndpointTests.MultiFactorLogin_Returns401Unauthorized_WhenLoginIsUnsuccessful
  name: MultiFactorLogin_Returns401Unauthorized_WhenLoginIsUnsuccessful()
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorLoginEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_MultiFactorLoginEndpointTests_MultiFactorLogin_Returns401Unauthorized_WhenLoginIsUnsuccessful
  commentId: M:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorLoginEndpointTests.MultiFactorLogin_Returns401Unauthorized_WhenLoginIsUnsuccessful
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorLoginEndpointTests.MultiFactorLogin_Returns401Unauthorized_WhenLoginIsUnsuccessful()
  nameWithType: MultiFactorLoginEndpointTests.MultiFactorLogin_Returns401Unauthorized_WhenLoginIsUnsuccessful()
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorLoginEndpointTests.MultiFactorLogin_Returns401Unauthorized_WhenLoginIsUnsuccessful*
  name: MultiFactorLogin_Returns401Unauthorized_WhenLoginIsUnsuccessful
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorLoginEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_MultiFactorLoginEndpointTests_MultiFactorLogin_Returns401Unauthorized_WhenLoginIsUnsuccessful_
  commentId: Overload:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorLoginEndpointTests.MultiFactorLogin_Returns401Unauthorized_WhenLoginIsUnsuccessful
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorLoginEndpointTests.MultiFactorLogin_Returns401Unauthorized_WhenLoginIsUnsuccessful
  nameWithType: MultiFactorLoginEndpointTests.MultiFactorLogin_Returns401Unauthorized_WhenLoginIsUnsuccessful
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorLoginEndpointTests.MultiFactorLogin_Returns401Unauthorized_WhenMFAIsNotEnabledSuccessfully
  name: MultiFactorLogin_Returns401Unauthorized_WhenMFAIsNotEnabledSuccessfully()
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorLoginEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_MultiFactorLoginEndpointTests_MultiFactorLogin_Returns401Unauthorized_WhenMFAIsNotEnabledSuccessfully
  commentId: M:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorLoginEndpointTests.MultiFactorLogin_Returns401Unauthorized_WhenMFAIsNotEnabledSuccessfully
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorLoginEndpointTests.MultiFactorLogin_Returns401Unauthorized_WhenMFAIsNotEnabledSuccessfully()
  nameWithType: MultiFactorLoginEndpointTests.MultiFactorLogin_Returns401Unauthorized_WhenMFAIsNotEnabledSuccessfully()
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorLoginEndpointTests.MultiFactorLogin_Returns401Unauthorized_WhenMFAIsNotEnabledSuccessfully*
  name: MultiFactorLogin_Returns401Unauthorized_WhenMFAIsNotEnabledSuccessfully
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorLoginEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_MultiFactorLoginEndpointTests_MultiFactorLogin_Returns401Unauthorized_WhenMFAIsNotEnabledSuccessfully_
  commentId: Overload:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorLoginEndpointTests.MultiFactorLogin_Returns401Unauthorized_WhenMFAIsNotEnabledSuccessfully
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorLoginEndpointTests.MultiFactorLogin_Returns401Unauthorized_WhenMFAIsNotEnabledSuccessfully
  nameWithType: MultiFactorLoginEndpointTests.MultiFactorLogin_Returns401Unauthorized_WhenMFAIsNotEnabledSuccessfully
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorLoginEndpointTests.OneTimeSetup
  name: OneTimeSetup()
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorLoginEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_MultiFactorLoginEndpointTests_OneTimeSetup
  commentId: M:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorLoginEndpointTests.OneTimeSetup
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorLoginEndpointTests.OneTimeSetup()
  nameWithType: MultiFactorLoginEndpointTests.OneTimeSetup()
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorLoginEndpointTests.OneTimeSetup*
  name: OneTimeSetup
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorLoginEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_MultiFactorLoginEndpointTests_OneTimeSetup_
  commentId: Overload:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorLoginEndpointTests.OneTimeSetup
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorLoginEndpointTests.OneTimeSetup
  nameWithType: MultiFactorLoginEndpointTests.OneTimeSetup
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorLoginEndpointTests.OneTimeTearDown
  name: OneTimeTearDown()
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorLoginEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_MultiFactorLoginEndpointTests_OneTimeTearDown
  commentId: M:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorLoginEndpointTests.OneTimeTearDown
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorLoginEndpointTests.OneTimeTearDown()
  nameWithType: MultiFactorLoginEndpointTests.OneTimeTearDown()
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorLoginEndpointTests.OneTimeTearDown*
  name: OneTimeTearDown
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorLoginEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_MultiFactorLoginEndpointTests_OneTimeTearDown_
  commentId: Overload:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorLoginEndpointTests.OneTimeTearDown
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorLoginEndpointTests.OneTimeTearDown
  nameWithType: MultiFactorLoginEndpointTests.OneTimeTearDown
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorManageAuthenticatorEndpointTests
  name: MultiFactorManageAuthenticatorEndpointTests
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorManageAuthenticatorEndpointTests.html
  commentId: T:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorManageAuthenticatorEndpointTests
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorManageAuthenticatorEndpointTests
  nameWithType: MultiFactorManageAuthenticatorEndpointTests
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorManageAuthenticatorEndpointTests.MultiFactorManageAuthenticator_Returns200OK_WhenSuccessfullyEnabled
  name: MultiFactorManageAuthenticator_Returns200OK_WhenSuccessfullyEnabled()
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorManageAuthenticatorEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_MultiFactorManageAuthenticatorEndpointTests_MultiFactorManageAuthenticator_Returns200OK_WhenSuccessfullyEnabled
  commentId: M:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorManageAuthenticatorEndpointTests.MultiFactorManageAuthenticator_Returns200OK_WhenSuccessfullyEnabled
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorManageAuthenticatorEndpointTests.MultiFactorManageAuthenticator_Returns200OK_WhenSuccessfullyEnabled()
  nameWithType: MultiFactorManageAuthenticatorEndpointTests.MultiFactorManageAuthenticator_Returns200OK_WhenSuccessfullyEnabled()
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorManageAuthenticatorEndpointTests.MultiFactorManageAuthenticator_Returns200OK_WhenSuccessfullyEnabled*
  name: MultiFactorManageAuthenticator_Returns200OK_WhenSuccessfullyEnabled
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorManageAuthenticatorEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_MultiFactorManageAuthenticatorEndpointTests_MultiFactorManageAuthenticator_Returns200OK_WhenSuccessfullyEnabled_
  commentId: Overload:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorManageAuthenticatorEndpointTests.MultiFactorManageAuthenticator_Returns200OK_WhenSuccessfullyEnabled
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorManageAuthenticatorEndpointTests.MultiFactorManageAuthenticator_Returns200OK_WhenSuccessfullyEnabled
  nameWithType: MultiFactorManageAuthenticatorEndpointTests.MultiFactorManageAuthenticator_Returns200OK_WhenSuccessfullyEnabled
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorManageAuthenticatorEndpointTests.OneTimeSetup
  name: OneTimeSetup()
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorManageAuthenticatorEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_MultiFactorManageAuthenticatorEndpointTests_OneTimeSetup
  commentId: M:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorManageAuthenticatorEndpointTests.OneTimeSetup
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorManageAuthenticatorEndpointTests.OneTimeSetup()
  nameWithType: MultiFactorManageAuthenticatorEndpointTests.OneTimeSetup()
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorManageAuthenticatorEndpointTests.OneTimeSetup*
  name: OneTimeSetup
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorManageAuthenticatorEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_MultiFactorManageAuthenticatorEndpointTests_OneTimeSetup_
  commentId: Overload:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorManageAuthenticatorEndpointTests.OneTimeSetup
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorManageAuthenticatorEndpointTests.OneTimeSetup
  nameWithType: MultiFactorManageAuthenticatorEndpointTests.OneTimeSetup
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorManageAuthenticatorEndpointTests.OneTimeTearDown
  name: OneTimeTearDown()
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorManageAuthenticatorEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_MultiFactorManageAuthenticatorEndpointTests_OneTimeTearDown
  commentId: M:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorManageAuthenticatorEndpointTests.OneTimeTearDown
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorManageAuthenticatorEndpointTests.OneTimeTearDown()
  nameWithType: MultiFactorManageAuthenticatorEndpointTests.OneTimeTearDown()
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorManageAuthenticatorEndpointTests.OneTimeTearDown*
  name: OneTimeTearDown
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorManageAuthenticatorEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_MultiFactorManageAuthenticatorEndpointTests_OneTimeTearDown_
  commentId: Overload:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorManageAuthenticatorEndpointTests.OneTimeTearDown
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorManageAuthenticatorEndpointTests.OneTimeTearDown
  nameWithType: MultiFactorManageAuthenticatorEndpointTests.OneTimeTearDown
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorManageEndpointTests
  name: MultiFactorManageEndpointTests
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorManageEndpointTests.html
  commentId: T:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorManageEndpointTests
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorManageEndpointTests
  nameWithType: MultiFactorManageEndpointTests
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorManageEndpointTests.MultiFactorManage_Returns204NoContent_WhenMultiFactorIsEnabledSuccessfully
  name: MultiFactorManage_Returns204NoContent_WhenMultiFactorIsEnabledSuccessfully()
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorManageEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_MultiFactorManageEndpointTests_MultiFactorManage_Returns204NoContent_WhenMultiFactorIsEnabledSuccessfully
  commentId: M:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorManageEndpointTests.MultiFactorManage_Returns204NoContent_WhenMultiFactorIsEnabledSuccessfully
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorManageEndpointTests.MultiFactorManage_Returns204NoContent_WhenMultiFactorIsEnabledSuccessfully()
  nameWithType: MultiFactorManageEndpointTests.MultiFactorManage_Returns204NoContent_WhenMultiFactorIsEnabledSuccessfully()
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorManageEndpointTests.MultiFactorManage_Returns204NoContent_WhenMultiFactorIsEnabledSuccessfully*
  name: MultiFactorManage_Returns204NoContent_WhenMultiFactorIsEnabledSuccessfully
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorManageEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_MultiFactorManageEndpointTests_MultiFactorManage_Returns204NoContent_WhenMultiFactorIsEnabledSuccessfully_
  commentId: Overload:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorManageEndpointTests.MultiFactorManage_Returns204NoContent_WhenMultiFactorIsEnabledSuccessfully
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorManageEndpointTests.MultiFactorManage_Returns204NoContent_WhenMultiFactorIsEnabledSuccessfully
  nameWithType: MultiFactorManageEndpointTests.MultiFactorManage_Returns204NoContent_WhenMultiFactorIsEnabledSuccessfully
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorManageEndpointTests.MultiFactorManage_ReturnsBadRequest_WhenUserIsNotFound
  name: MultiFactorManage_ReturnsBadRequest_WhenUserIsNotFound()
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorManageEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_MultiFactorManageEndpointTests_MultiFactorManage_ReturnsBadRequest_WhenUserIsNotFound
  commentId: M:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorManageEndpointTests.MultiFactorManage_ReturnsBadRequest_WhenUserIsNotFound
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorManageEndpointTests.MultiFactorManage_ReturnsBadRequest_WhenUserIsNotFound()
  nameWithType: MultiFactorManageEndpointTests.MultiFactorManage_ReturnsBadRequest_WhenUserIsNotFound()
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorManageEndpointTests.MultiFactorManage_ReturnsBadRequest_WhenUserIsNotFound*
  name: MultiFactorManage_ReturnsBadRequest_WhenUserIsNotFound
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorManageEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_MultiFactorManageEndpointTests_MultiFactorManage_ReturnsBadRequest_WhenUserIsNotFound_
  commentId: Overload:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorManageEndpointTests.MultiFactorManage_ReturnsBadRequest_WhenUserIsNotFound
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorManageEndpointTests.MultiFactorManage_ReturnsBadRequest_WhenUserIsNotFound
  nameWithType: MultiFactorManageEndpointTests.MultiFactorManage_ReturnsBadRequest_WhenUserIsNotFound
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorManageEndpointTests.OneTimeSetup
  name: OneTimeSetup()
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorManageEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_MultiFactorManageEndpointTests_OneTimeSetup
  commentId: M:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorManageEndpointTests.OneTimeSetup
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorManageEndpointTests.OneTimeSetup()
  nameWithType: MultiFactorManageEndpointTests.OneTimeSetup()
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorManageEndpointTests.OneTimeSetup*
  name: OneTimeSetup
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorManageEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_MultiFactorManageEndpointTests_OneTimeSetup_
  commentId: Overload:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorManageEndpointTests.OneTimeSetup
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorManageEndpointTests.OneTimeSetup
  nameWithType: MultiFactorManageEndpointTests.OneTimeSetup
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorManageEndpointTests.OneTimeTearDown
  name: OneTimeTearDown()
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorManageEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_MultiFactorManageEndpointTests_OneTimeTearDown
  commentId: M:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorManageEndpointTests.OneTimeTearDown
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorManageEndpointTests.OneTimeTearDown()
  nameWithType: MultiFactorManageEndpointTests.OneTimeTearDown()
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorManageEndpointTests.OneTimeTearDown*
  name: OneTimeTearDown
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorManageEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_MultiFactorManageEndpointTests_OneTimeTearDown_
  commentId: Overload:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorManageEndpointTests.OneTimeTearDown
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorManageEndpointTests.OneTimeTearDown
  nameWithType: MultiFactorManageEndpointTests.OneTimeTearDown
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorRecoveryCodesEndpointTests
  name: MultiFactorRecoveryCodesEndpointTests
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorRecoveryCodesEndpointTests.html
  commentId: T:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorRecoveryCodesEndpointTests
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorRecoveryCodesEndpointTests
  nameWithType: MultiFactorRecoveryCodesEndpointTests
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorRecoveryCodesEndpointTests.MultiFactorRecoveryCodes_Returns200OK_WhenRecoveryCodesAreGeneratedSuccessfully
  name: MultiFactorRecoveryCodes_Returns200OK_WhenRecoveryCodesAreGeneratedSuccessfully()
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorRecoveryCodesEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_MultiFactorRecoveryCodesEndpointTests_MultiFactorRecoveryCodes_Returns200OK_WhenRecoveryCodesAreGeneratedSuccessfully
  commentId: M:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorRecoveryCodesEndpointTests.MultiFactorRecoveryCodes_Returns200OK_WhenRecoveryCodesAreGeneratedSuccessfully
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorRecoveryCodesEndpointTests.MultiFactorRecoveryCodes_Returns200OK_WhenRecoveryCodesAreGeneratedSuccessfully()
  nameWithType: MultiFactorRecoveryCodesEndpointTests.MultiFactorRecoveryCodes_Returns200OK_WhenRecoveryCodesAreGeneratedSuccessfully()
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorRecoveryCodesEndpointTests.MultiFactorRecoveryCodes_Returns200OK_WhenRecoveryCodesAreGeneratedSuccessfully*
  name: MultiFactorRecoveryCodes_Returns200OK_WhenRecoveryCodesAreGeneratedSuccessfully
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorRecoveryCodesEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_MultiFactorRecoveryCodesEndpointTests_MultiFactorRecoveryCodes_Returns200OK_WhenRecoveryCodesAreGeneratedSuccessfully_
  commentId: Overload:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorRecoveryCodesEndpointTests.MultiFactorRecoveryCodes_Returns200OK_WhenRecoveryCodesAreGeneratedSuccessfully
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorRecoveryCodesEndpointTests.MultiFactorRecoveryCodes_Returns200OK_WhenRecoveryCodesAreGeneratedSuccessfully
  nameWithType: MultiFactorRecoveryCodesEndpointTests.MultiFactorRecoveryCodes_Returns200OK_WhenRecoveryCodesAreGeneratedSuccessfully
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorRecoveryCodesEndpointTests.OneTimeSetup
  name: OneTimeSetup()
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorRecoveryCodesEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_MultiFactorRecoveryCodesEndpointTests_OneTimeSetup
  commentId: M:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorRecoveryCodesEndpointTests.OneTimeSetup
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorRecoveryCodesEndpointTests.OneTimeSetup()
  nameWithType: MultiFactorRecoveryCodesEndpointTests.OneTimeSetup()
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorRecoveryCodesEndpointTests.OneTimeSetup*
  name: OneTimeSetup
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorRecoveryCodesEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_MultiFactorRecoveryCodesEndpointTests_OneTimeSetup_
  commentId: Overload:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorRecoveryCodesEndpointTests.OneTimeSetup
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorRecoveryCodesEndpointTests.OneTimeSetup
  nameWithType: MultiFactorRecoveryCodesEndpointTests.OneTimeSetup
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorRecoveryCodesEndpointTests.OneTimeTearDown
  name: OneTimeTearDown()
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorRecoveryCodesEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_MultiFactorRecoveryCodesEndpointTests_OneTimeTearDown
  commentId: M:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorRecoveryCodesEndpointTests.OneTimeTearDown
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorRecoveryCodesEndpointTests.OneTimeTearDown()
  nameWithType: MultiFactorRecoveryCodesEndpointTests.OneTimeTearDown()
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorRecoveryCodesEndpointTests.OneTimeTearDown*
  name: OneTimeTearDown
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorRecoveryCodesEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_MultiFactorRecoveryCodesEndpointTests_OneTimeTearDown_
  commentId: Overload:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorRecoveryCodesEndpointTests.OneTimeTearDown
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorRecoveryCodesEndpointTests.OneTimeTearDown
  nameWithType: MultiFactorRecoveryCodesEndpointTests.OneTimeTearDown
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorRecoveryCodesRedeemEndpointTests
  name: MultiFactorRecoveryCodesRedeemEndpointTests
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorRecoveryCodesRedeemEndpointTests.html
  commentId: T:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorRecoveryCodesRedeemEndpointTests
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorRecoveryCodesRedeemEndpointTests
  nameWithType: MultiFactorRecoveryCodesRedeemEndpointTests
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorRecoveryCodesRedeemEndpointTests.MultiFactorRecoveryReedem_Returns200OK_WhenRedeemIsSuccessful
  name: MultiFactorRecoveryReedem_Returns200OK_WhenRedeemIsSuccessful()
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorRecoveryCodesRedeemEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_MultiFactorRecoveryCodesRedeemEndpointTests_MultiFactorRecoveryReedem_Returns200OK_WhenRedeemIsSuccessful
  commentId: M:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorRecoveryCodesRedeemEndpointTests.MultiFactorRecoveryReedem_Returns200OK_WhenRedeemIsSuccessful
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorRecoveryCodesRedeemEndpointTests.MultiFactorRecoveryReedem_Returns200OK_WhenRedeemIsSuccessful()
  nameWithType: MultiFactorRecoveryCodesRedeemEndpointTests.MultiFactorRecoveryReedem_Returns200OK_WhenRedeemIsSuccessful()
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorRecoveryCodesRedeemEndpointTests.MultiFactorRecoveryReedem_Returns200OK_WhenRedeemIsSuccessful*
  name: MultiFactorRecoveryReedem_Returns200OK_WhenRedeemIsSuccessful
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorRecoveryCodesRedeemEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_MultiFactorRecoveryCodesRedeemEndpointTests_MultiFactorRecoveryReedem_Returns200OK_WhenRedeemIsSuccessful_
  commentId: Overload:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorRecoveryCodesRedeemEndpointTests.MultiFactorRecoveryReedem_Returns200OK_WhenRedeemIsSuccessful
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorRecoveryCodesRedeemEndpointTests.MultiFactorRecoveryReedem_Returns200OK_WhenRedeemIsSuccessful
  nameWithType: MultiFactorRecoveryCodesRedeemEndpointTests.MultiFactorRecoveryReedem_Returns200OK_WhenRedeemIsSuccessful
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorRecoveryCodesRedeemEndpointTests.MultiFactorRecoveryReedem_Returns400BadRequest_WhenRedeemIsUnsuccessful
  name: MultiFactorRecoveryReedem_Returns400BadRequest_WhenRedeemIsUnsuccessful()
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorRecoveryCodesRedeemEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_MultiFactorRecoveryCodesRedeemEndpointTests_MultiFactorRecoveryReedem_Returns400BadRequest_WhenRedeemIsUnsuccessful
  commentId: M:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorRecoveryCodesRedeemEndpointTests.MultiFactorRecoveryReedem_Returns400BadRequest_WhenRedeemIsUnsuccessful
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorRecoveryCodesRedeemEndpointTests.MultiFactorRecoveryReedem_Returns400BadRequest_WhenRedeemIsUnsuccessful()
  nameWithType: MultiFactorRecoveryCodesRedeemEndpointTests.MultiFactorRecoveryReedem_Returns400BadRequest_WhenRedeemIsUnsuccessful()
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorRecoveryCodesRedeemEndpointTests.MultiFactorRecoveryReedem_Returns400BadRequest_WhenRedeemIsUnsuccessful*
  name: MultiFactorRecoveryReedem_Returns400BadRequest_WhenRedeemIsUnsuccessful
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorRecoveryCodesRedeemEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_MultiFactorRecoveryCodesRedeemEndpointTests_MultiFactorRecoveryReedem_Returns400BadRequest_WhenRedeemIsUnsuccessful_
  commentId: Overload:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorRecoveryCodesRedeemEndpointTests.MultiFactorRecoveryReedem_Returns400BadRequest_WhenRedeemIsUnsuccessful
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorRecoveryCodesRedeemEndpointTests.MultiFactorRecoveryReedem_Returns400BadRequest_WhenRedeemIsUnsuccessful
  nameWithType: MultiFactorRecoveryCodesRedeemEndpointTests.MultiFactorRecoveryReedem_Returns400BadRequest_WhenRedeemIsUnsuccessful
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorRecoveryCodesRedeemEndpointTests.OneTimeSetup
  name: OneTimeSetup()
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorRecoveryCodesRedeemEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_MultiFactorRecoveryCodesRedeemEndpointTests_OneTimeSetup
  commentId: M:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorRecoveryCodesRedeemEndpointTests.OneTimeSetup
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorRecoveryCodesRedeemEndpointTests.OneTimeSetup()
  nameWithType: MultiFactorRecoveryCodesRedeemEndpointTests.OneTimeSetup()
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorRecoveryCodesRedeemEndpointTests.OneTimeSetup*
  name: OneTimeSetup
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorRecoveryCodesRedeemEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_MultiFactorRecoveryCodesRedeemEndpointTests_OneTimeSetup_
  commentId: Overload:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorRecoveryCodesRedeemEndpointTests.OneTimeSetup
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorRecoveryCodesRedeemEndpointTests.OneTimeSetup
  nameWithType: MultiFactorRecoveryCodesRedeemEndpointTests.OneTimeSetup
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorRecoveryCodesRedeemEndpointTests.OneTimeTearDown
  name: OneTimeTearDown()
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorRecoveryCodesRedeemEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_MultiFactorRecoveryCodesRedeemEndpointTests_OneTimeTearDown
  commentId: M:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorRecoveryCodesRedeemEndpointTests.OneTimeTearDown
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorRecoveryCodesRedeemEndpointTests.OneTimeTearDown()
  nameWithType: MultiFactorRecoveryCodesRedeemEndpointTests.OneTimeTearDown()
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorRecoveryCodesRedeemEndpointTests.OneTimeTearDown*
  name: OneTimeTearDown
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorRecoveryCodesRedeemEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_MultiFactorRecoveryCodesRedeemEndpointTests_OneTimeTearDown_
  commentId: Overload:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorRecoveryCodesRedeemEndpointTests.OneTimeTearDown
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.MultiFactorRecoveryCodesRedeemEndpointTests.OneTimeTearDown
  nameWithType: MultiFactorRecoveryCodesRedeemEndpointTests.OneTimeTearDown
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadAllActivitiesEndpointTests
  name: ReadAllActivitiesEndpointTests
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadAllActivitiesEndpointTests.html
  commentId: T:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadAllActivitiesEndpointTests
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadAllActivitiesEndpointTests
  nameWithType: ReadAllActivitiesEndpointTests
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadAllActivitiesEndpointTests.OneTimeSetup
  name: OneTimeSetup()
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadAllActivitiesEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_ReadAllActivitiesEndpointTests_OneTimeSetup
  commentId: M:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadAllActivitiesEndpointTests.OneTimeSetup
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadAllActivitiesEndpointTests.OneTimeSetup()
  nameWithType: ReadAllActivitiesEndpointTests.OneTimeSetup()
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadAllActivitiesEndpointTests.OneTimeSetup*
  name: OneTimeSetup
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadAllActivitiesEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_ReadAllActivitiesEndpointTests_OneTimeSetup_
  commentId: Overload:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadAllActivitiesEndpointTests.OneTimeSetup
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadAllActivitiesEndpointTests.OneTimeSetup
  nameWithType: ReadAllActivitiesEndpointTests.OneTimeSetup
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadAllActivitiesEndpointTests.OneTimeTearDown
  name: OneTimeTearDown()
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadAllActivitiesEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_ReadAllActivitiesEndpointTests_OneTimeTearDown
  commentId: M:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadAllActivitiesEndpointTests.OneTimeTearDown
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadAllActivitiesEndpointTests.OneTimeTearDown()
  nameWithType: ReadAllActivitiesEndpointTests.OneTimeTearDown()
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadAllActivitiesEndpointTests.OneTimeTearDown*
  name: OneTimeTearDown
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadAllActivitiesEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_ReadAllActivitiesEndpointTests_OneTimeTearDown_
  commentId: Overload:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadAllActivitiesEndpointTests.OneTimeTearDown
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadAllActivitiesEndpointTests.OneTimeTearDown
  nameWithType: ReadAllActivitiesEndpointTests.OneTimeTearDown
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadAllActivitiesEndpointTests.ReadAllActivities_Returns200OK_WhenSuccessful
  name: ReadAllActivities_Returns200OK_WhenSuccessful()
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadAllActivitiesEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_ReadAllActivitiesEndpointTests_ReadAllActivities_Returns200OK_WhenSuccessful
  commentId: M:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadAllActivitiesEndpointTests.ReadAllActivities_Returns200OK_WhenSuccessful
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadAllActivitiesEndpointTests.ReadAllActivities_Returns200OK_WhenSuccessful()
  nameWithType: ReadAllActivitiesEndpointTests.ReadAllActivities_Returns200OK_WhenSuccessful()
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadAllActivitiesEndpointTests.ReadAllActivities_Returns200OK_WhenSuccessful*
  name: ReadAllActivities_Returns200OK_WhenSuccessful
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadAllActivitiesEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_ReadAllActivitiesEndpointTests_ReadAllActivities_Returns200OK_WhenSuccessful_
  commentId: Overload:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadAllActivitiesEndpointTests.ReadAllActivities_Returns200OK_WhenSuccessful
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadAllActivitiesEndpointTests.ReadAllActivities_Returns200OK_WhenSuccessful
  nameWithType: ReadAllActivitiesEndpointTests.ReadAllActivities_Returns200OK_WhenSuccessful
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadAllApplicationsEndpointTests
  name: ReadAllApplicationsEndpointTests
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadAllApplicationsEndpointTests.html
  commentId: T:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadAllApplicationsEndpointTests
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadAllApplicationsEndpointTests
  nameWithType: ReadAllApplicationsEndpointTests
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadAllApplicationsEndpointTests.GetAllApplications_Returns200OK_WhenSuccessful
  name: GetAllApplications_Returns200OK_WhenSuccessful()
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadAllApplicationsEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_ReadAllApplicationsEndpointTests_GetAllApplications_Returns200OK_WhenSuccessful
  commentId: M:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadAllApplicationsEndpointTests.GetAllApplications_Returns200OK_WhenSuccessful
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadAllApplicationsEndpointTests.GetAllApplications_Returns200OK_WhenSuccessful()
  nameWithType: ReadAllApplicationsEndpointTests.GetAllApplications_Returns200OK_WhenSuccessful()
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadAllApplicationsEndpointTests.GetAllApplications_Returns200OK_WhenSuccessful*
  name: GetAllApplications_Returns200OK_WhenSuccessful
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadAllApplicationsEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_ReadAllApplicationsEndpointTests_GetAllApplications_Returns200OK_WhenSuccessful_
  commentId: Overload:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadAllApplicationsEndpointTests.GetAllApplications_Returns200OK_WhenSuccessful
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadAllApplicationsEndpointTests.GetAllApplications_Returns200OK_WhenSuccessful
  nameWithType: ReadAllApplicationsEndpointTests.GetAllApplications_Returns200OK_WhenSuccessful
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadAllApplicationsEndpointTests.OneTimeSetup
  name: OneTimeSetup()
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadAllApplicationsEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_ReadAllApplicationsEndpointTests_OneTimeSetup
  commentId: M:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadAllApplicationsEndpointTests.OneTimeSetup
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadAllApplicationsEndpointTests.OneTimeSetup()
  nameWithType: ReadAllApplicationsEndpointTests.OneTimeSetup()
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadAllApplicationsEndpointTests.OneTimeSetup*
  name: OneTimeSetup
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadAllApplicationsEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_ReadAllApplicationsEndpointTests_OneTimeSetup_
  commentId: Overload:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadAllApplicationsEndpointTests.OneTimeSetup
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadAllApplicationsEndpointTests.OneTimeSetup
  nameWithType: ReadAllApplicationsEndpointTests.OneTimeSetup
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadAllApplicationsEndpointTests.OneTimeTearDown
  name: OneTimeTearDown()
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadAllApplicationsEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_ReadAllApplicationsEndpointTests_OneTimeTearDown
  commentId: M:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadAllApplicationsEndpointTests.OneTimeTearDown
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadAllApplicationsEndpointTests.OneTimeTearDown()
  nameWithType: ReadAllApplicationsEndpointTests.OneTimeTearDown()
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadAllApplicationsEndpointTests.OneTimeTearDown*
  name: OneTimeTearDown
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadAllApplicationsEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_ReadAllApplicationsEndpointTests_OneTimeTearDown_
  commentId: Overload:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadAllApplicationsEndpointTests.OneTimeTearDown
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadAllApplicationsEndpointTests.OneTimeTearDown
  nameWithType: ReadAllApplicationsEndpointTests.OneTimeTearDown
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadAllUsersEndpointTests
  name: ReadAllUsersEndpointTests
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadAllUsersEndpointTests.html
  commentId: T:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadAllUsersEndpointTests
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadAllUsersEndpointTests
  nameWithType: ReadAllUsersEndpointTests
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadAllUsersEndpointTests.GetAllUsers_Returns200OK_WhenSuccessful
  name: GetAllUsers_Returns200OK_WhenSuccessful()
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadAllUsersEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_ReadAllUsersEndpointTests_GetAllUsers_Returns200OK_WhenSuccessful
  commentId: M:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadAllUsersEndpointTests.GetAllUsers_Returns200OK_WhenSuccessful
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadAllUsersEndpointTests.GetAllUsers_Returns200OK_WhenSuccessful()
  nameWithType: ReadAllUsersEndpointTests.GetAllUsers_Returns200OK_WhenSuccessful()
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadAllUsersEndpointTests.GetAllUsers_Returns200OK_WhenSuccessful*
  name: GetAllUsers_Returns200OK_WhenSuccessful
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadAllUsersEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_ReadAllUsersEndpointTests_GetAllUsers_Returns200OK_WhenSuccessful_
  commentId: Overload:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadAllUsersEndpointTests.GetAllUsers_Returns200OK_WhenSuccessful
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadAllUsersEndpointTests.GetAllUsers_Returns200OK_WhenSuccessful
  nameWithType: ReadAllUsersEndpointTests.GetAllUsers_Returns200OK_WhenSuccessful
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadAllUsersEndpointTests.OneTimeSetup
  name: OneTimeSetup()
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadAllUsersEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_ReadAllUsersEndpointTests_OneTimeSetup
  commentId: M:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadAllUsersEndpointTests.OneTimeSetup
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadAllUsersEndpointTests.OneTimeSetup()
  nameWithType: ReadAllUsersEndpointTests.OneTimeSetup()
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadAllUsersEndpointTests.OneTimeSetup*
  name: OneTimeSetup
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadAllUsersEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_ReadAllUsersEndpointTests_OneTimeSetup_
  commentId: Overload:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadAllUsersEndpointTests.OneTimeSetup
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadAllUsersEndpointTests.OneTimeSetup
  nameWithType: ReadAllUsersEndpointTests.OneTimeSetup
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadAllUsersEndpointTests.OneTimeTearDown
  name: OneTimeTearDown()
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadAllUsersEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_ReadAllUsersEndpointTests_OneTimeTearDown
  commentId: M:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadAllUsersEndpointTests.OneTimeTearDown
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadAllUsersEndpointTests.OneTimeTearDown()
  nameWithType: ReadAllUsersEndpointTests.OneTimeTearDown()
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadAllUsersEndpointTests.OneTimeTearDown*
  name: OneTimeTearDown
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadAllUsersEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_ReadAllUsersEndpointTests_OneTimeTearDown_
  commentId: Overload:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadAllUsersEndpointTests.OneTimeTearDown
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadAllUsersEndpointTests.OneTimeTearDown
  nameWithType: ReadAllUsersEndpointTests.OneTimeTearDown
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadApplicationByNameEndpointTests
  name: ReadApplicationByNameEndpointTests
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadApplicationByNameEndpointTests.html
  commentId: T:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadApplicationByNameEndpointTests
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadApplicationByNameEndpointTests
  nameWithType: ReadApplicationByNameEndpointTests
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadApplicationByNameEndpointTests.OneTimeSetup
  name: OneTimeSetup()
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadApplicationByNameEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_ReadApplicationByNameEndpointTests_OneTimeSetup
  commentId: M:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadApplicationByNameEndpointTests.OneTimeSetup
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadApplicationByNameEndpointTests.OneTimeSetup()
  nameWithType: ReadApplicationByNameEndpointTests.OneTimeSetup()
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadApplicationByNameEndpointTests.OneTimeSetup*
  name: OneTimeSetup
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadApplicationByNameEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_ReadApplicationByNameEndpointTests_OneTimeSetup_
  commentId: Overload:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadApplicationByNameEndpointTests.OneTimeSetup
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadApplicationByNameEndpointTests.OneTimeSetup
  nameWithType: ReadApplicationByNameEndpointTests.OneTimeSetup
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadApplicationByNameEndpointTests.OneTimeTearDown
  name: OneTimeTearDown()
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadApplicationByNameEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_ReadApplicationByNameEndpointTests_OneTimeTearDown
  commentId: M:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadApplicationByNameEndpointTests.OneTimeTearDown
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadApplicationByNameEndpointTests.OneTimeTearDown()
  nameWithType: ReadApplicationByNameEndpointTests.OneTimeTearDown()
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadApplicationByNameEndpointTests.OneTimeTearDown*
  name: OneTimeTearDown
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadApplicationByNameEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_ReadApplicationByNameEndpointTests_OneTimeTearDown_
  commentId: Overload:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadApplicationByNameEndpointTests.OneTimeTearDown
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadApplicationByNameEndpointTests.OneTimeTearDown
  nameWithType: ReadApplicationByNameEndpointTests.OneTimeTearDown
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadApplicationByNameEndpointTests.ReadApplicationByName_Returns200Ok_WhenRequestIsValid
  name: ReadApplicationByName_Returns200Ok_WhenRequestIsValid()
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadApplicationByNameEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_ReadApplicationByNameEndpointTests_ReadApplicationByName_Returns200Ok_WhenRequestIsValid
  commentId: M:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadApplicationByNameEndpointTests.ReadApplicationByName_Returns200Ok_WhenRequestIsValid
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadApplicationByNameEndpointTests.ReadApplicationByName_Returns200Ok_WhenRequestIsValid()
  nameWithType: ReadApplicationByNameEndpointTests.ReadApplicationByName_Returns200Ok_WhenRequestIsValid()
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadApplicationByNameEndpointTests.ReadApplicationByName_Returns200Ok_WhenRequestIsValid*
  name: ReadApplicationByName_Returns200Ok_WhenRequestIsValid
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadApplicationByNameEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_ReadApplicationByNameEndpointTests_ReadApplicationByName_Returns200Ok_WhenRequestIsValid_
  commentId: Overload:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadApplicationByNameEndpointTests.ReadApplicationByName_Returns200Ok_WhenRequestIsValid
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadApplicationByNameEndpointTests.ReadApplicationByName_Returns200Ok_WhenRequestIsValid
  nameWithType: ReadApplicationByNameEndpointTests.ReadApplicationByName_Returns200Ok_WhenRequestIsValid
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadApplicationByNameEndpointTests.ReadApplicationByName_Returns400BadRequest_WhenApplicationIsNotFound
  name: ReadApplicationByName_Returns400BadRequest_WhenApplicationIsNotFound()
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadApplicationByNameEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_ReadApplicationByNameEndpointTests_ReadApplicationByName_Returns400BadRequest_WhenApplicationIsNotFound
  commentId: M:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadApplicationByNameEndpointTests.ReadApplicationByName_Returns400BadRequest_WhenApplicationIsNotFound
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadApplicationByNameEndpointTests.ReadApplicationByName_Returns400BadRequest_WhenApplicationIsNotFound()
  nameWithType: ReadApplicationByNameEndpointTests.ReadApplicationByName_Returns400BadRequest_WhenApplicationIsNotFound()
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadApplicationByNameEndpointTests.ReadApplicationByName_Returns400BadRequest_WhenApplicationIsNotFound*
  name: ReadApplicationByName_Returns400BadRequest_WhenApplicationIsNotFound
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadApplicationByNameEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_ReadApplicationByNameEndpointTests_ReadApplicationByName_Returns400BadRequest_WhenApplicationIsNotFound_
  commentId: Overload:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadApplicationByNameEndpointTests.ReadApplicationByName_Returns400BadRequest_WhenApplicationIsNotFound
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadApplicationByNameEndpointTests.ReadApplicationByName_Returns400BadRequest_WhenApplicationIsNotFound
  nameWithType: ReadApplicationByNameEndpointTests.ReadApplicationByName_Returns400BadRequest_WhenApplicationIsNotFound
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadApplicationsEndpointTests
  name: ReadApplicationsEndpointTests
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadApplicationsEndpointTests.html
  commentId: T:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadApplicationsEndpointTests
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadApplicationsEndpointTests
  nameWithType: ReadApplicationsEndpointTests
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadApplicationsEndpointTests.OneTimeSetup
  name: OneTimeSetup()
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadApplicationsEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_ReadApplicationsEndpointTests_OneTimeSetup
  commentId: M:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadApplicationsEndpointTests.OneTimeSetup
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadApplicationsEndpointTests.OneTimeSetup()
  nameWithType: ReadApplicationsEndpointTests.OneTimeSetup()
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadApplicationsEndpointTests.OneTimeSetup*
  name: OneTimeSetup
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadApplicationsEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_ReadApplicationsEndpointTests_OneTimeSetup_
  commentId: Overload:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadApplicationsEndpointTests.OneTimeSetup
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadApplicationsEndpointTests.OneTimeSetup
  nameWithType: ReadApplicationsEndpointTests.OneTimeSetup
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadApplicationsEndpointTests.OneTimeTearDown
  name: OneTimeTearDown()
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadApplicationsEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_ReadApplicationsEndpointTests_OneTimeTearDown
  commentId: M:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadApplicationsEndpointTests.OneTimeTearDown
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadApplicationsEndpointTests.OneTimeTearDown()
  nameWithType: ReadApplicationsEndpointTests.OneTimeTearDown()
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadApplicationsEndpointTests.OneTimeTearDown*
  name: OneTimeTearDown
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadApplicationsEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_ReadApplicationsEndpointTests_OneTimeTearDown_
  commentId: Overload:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadApplicationsEndpointTests.OneTimeTearDown
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadApplicationsEndpointTests.OneTimeTearDown
  nameWithType: ReadApplicationsEndpointTests.OneTimeTearDown
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadApplicationsEndpointTests.ReadApplications_Returns200Ok_WhenRequestIsValid
  name: ReadApplications_Returns200Ok_WhenRequestIsValid()
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadApplicationsEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_ReadApplicationsEndpointTests_ReadApplications_Returns200Ok_WhenRequestIsValid
  commentId: M:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadApplicationsEndpointTests.ReadApplications_Returns200Ok_WhenRequestIsValid
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadApplicationsEndpointTests.ReadApplications_Returns200Ok_WhenRequestIsValid()
  nameWithType: ReadApplicationsEndpointTests.ReadApplications_Returns200Ok_WhenRequestIsValid()
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadApplicationsEndpointTests.ReadApplications_Returns200Ok_WhenRequestIsValid*
  name: ReadApplications_Returns200Ok_WhenRequestIsValid
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadApplicationsEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_ReadApplicationsEndpointTests_ReadApplications_Returns200Ok_WhenRequestIsValid_
  commentId: Overload:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadApplicationsEndpointTests.ReadApplications_Returns200Ok_WhenRequestIsValid
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadApplicationsEndpointTests.ReadApplications_Returns200Ok_WhenRequestIsValid
  nameWithType: ReadApplicationsEndpointTests.ReadApplications_Returns200Ok_WhenRequestIsValid
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadApplicationsEndpointTests.ReadApplications_ReturnsBadRequest_WhenUserIsNotFound
  name: ReadApplications_ReturnsBadRequest_WhenUserIsNotFound()
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadApplicationsEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_ReadApplicationsEndpointTests_ReadApplications_ReturnsBadRequest_WhenUserIsNotFound
  commentId: M:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadApplicationsEndpointTests.ReadApplications_ReturnsBadRequest_WhenUserIsNotFound
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadApplicationsEndpointTests.ReadApplications_ReturnsBadRequest_WhenUserIsNotFound()
  nameWithType: ReadApplicationsEndpointTests.ReadApplications_ReturnsBadRequest_WhenUserIsNotFound()
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadApplicationsEndpointTests.ReadApplications_ReturnsBadRequest_WhenUserIsNotFound*
  name: ReadApplications_ReturnsBadRequest_WhenUserIsNotFound
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadApplicationsEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_ReadApplicationsEndpointTests_ReadApplications_ReturnsBadRequest_WhenUserIsNotFound_
  commentId: Overload:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadApplicationsEndpointTests.ReadApplications_ReturnsBadRequest_WhenUserIsNotFound
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadApplicationsEndpointTests.ReadApplications_ReturnsBadRequest_WhenUserIsNotFound
  nameWithType: ReadApplicationsEndpointTests.ReadApplications_ReturnsBadRequest_WhenUserIsNotFound
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadRolesEndpointTests
  name: ReadRolesEndpointTests
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadRolesEndpointTests.html
  commentId: T:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadRolesEndpointTests
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadRolesEndpointTests
  nameWithType: ReadRolesEndpointTests
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadRolesEndpointTests.GetRoles_Returns200Ok_WithListOfRoles
  name: GetRoles_Returns200Ok_WithListOfRoles()
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadRolesEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_ReadRolesEndpointTests_GetRoles_Returns200Ok_WithListOfRoles
  commentId: M:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadRolesEndpointTests.GetRoles_Returns200Ok_WithListOfRoles
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadRolesEndpointTests.GetRoles_Returns200Ok_WithListOfRoles()
  nameWithType: ReadRolesEndpointTests.GetRoles_Returns200Ok_WithListOfRoles()
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadRolesEndpointTests.GetRoles_Returns200Ok_WithListOfRoles*
  name: GetRoles_Returns200Ok_WithListOfRoles
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadRolesEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_ReadRolesEndpointTests_GetRoles_Returns200Ok_WithListOfRoles_
  commentId: Overload:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadRolesEndpointTests.GetRoles_Returns200Ok_WithListOfRoles
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadRolesEndpointTests.GetRoles_Returns200Ok_WithListOfRoles
  nameWithType: ReadRolesEndpointTests.GetRoles_Returns200Ok_WithListOfRoles
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadRolesEndpointTests.OneTimeSetup
  name: OneTimeSetup()
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadRolesEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_ReadRolesEndpointTests_OneTimeSetup
  commentId: M:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadRolesEndpointTests.OneTimeSetup
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadRolesEndpointTests.OneTimeSetup()
  nameWithType: ReadRolesEndpointTests.OneTimeSetup()
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadRolesEndpointTests.OneTimeSetup*
  name: OneTimeSetup
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadRolesEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_ReadRolesEndpointTests_OneTimeSetup_
  commentId: Overload:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadRolesEndpointTests.OneTimeSetup
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadRolesEndpointTests.OneTimeSetup
  nameWithType: ReadRolesEndpointTests.OneTimeSetup
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadRolesEndpointTests.OneTimeTearDown
  name: OneTimeTearDown()
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadRolesEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_ReadRolesEndpointTests_OneTimeTearDown
  commentId: M:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadRolesEndpointTests.OneTimeTearDown
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadRolesEndpointTests.OneTimeTearDown()
  nameWithType: ReadRolesEndpointTests.OneTimeTearDown()
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadRolesEndpointTests.OneTimeTearDown*
  name: OneTimeTearDown
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadRolesEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_ReadRolesEndpointTests_OneTimeTearDown_
  commentId: Overload:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadRolesEndpointTests.OneTimeTearDown
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ReadRolesEndpointTests.OneTimeTearDown
  nameWithType: ReadRolesEndpointTests.OneTimeTearDown
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.RegisterAdminEndpointTests
  name: RegisterAdminEndpointTests
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.RegisterAdminEndpointTests.html
  commentId: T:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.RegisterAdminEndpointTests
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.RegisterAdminEndpointTests
  nameWithType: RegisterAdminEndpointTests
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.RegisterAdminEndpointTests.OneTimeSetup
  name: OneTimeSetup()
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.RegisterAdminEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_RegisterAdminEndpointTests_OneTimeSetup
  commentId: M:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.RegisterAdminEndpointTests.OneTimeSetup
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.RegisterAdminEndpointTests.OneTimeSetup()
  nameWithType: RegisterAdminEndpointTests.OneTimeSetup()
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.RegisterAdminEndpointTests.OneTimeSetup*
  name: OneTimeSetup
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.RegisterAdminEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_RegisterAdminEndpointTests_OneTimeSetup_
  commentId: Overload:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.RegisterAdminEndpointTests.OneTimeSetup
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.RegisterAdminEndpointTests.OneTimeSetup
  nameWithType: RegisterAdminEndpointTests.OneTimeSetup
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.RegisterAdminEndpointTests.OneTimeTearDown
  name: OneTimeTearDown()
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.RegisterAdminEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_RegisterAdminEndpointTests_OneTimeTearDown
  commentId: M:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.RegisterAdminEndpointTests.OneTimeTearDown
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.RegisterAdminEndpointTests.OneTimeTearDown()
  nameWithType: RegisterAdminEndpointTests.OneTimeTearDown()
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.RegisterAdminEndpointTests.OneTimeTearDown*
  name: OneTimeTearDown
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.RegisterAdminEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_RegisterAdminEndpointTests_OneTimeTearDown_
  commentId: Overload:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.RegisterAdminEndpointTests.OneTimeTearDown
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.RegisterAdminEndpointTests.OneTimeTearDown
  nameWithType: RegisterAdminEndpointTests.OneTimeTearDown
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.RegisterAdminEndpointTests.RegisterAdmin_Returns201Created_WhenRegisterIsSuccessful
  name: RegisterAdmin_Returns201Created_WhenRegisterIsSuccessful()
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.RegisterAdminEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_RegisterAdminEndpointTests_RegisterAdmin_Returns201Created_WhenRegisterIsSuccessful
  commentId: M:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.RegisterAdminEndpointTests.RegisterAdmin_Returns201Created_WhenRegisterIsSuccessful
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.RegisterAdminEndpointTests.RegisterAdmin_Returns201Created_WhenRegisterIsSuccessful()
  nameWithType: RegisterAdminEndpointTests.RegisterAdmin_Returns201Created_WhenRegisterIsSuccessful()
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.RegisterAdminEndpointTests.RegisterAdmin_Returns201Created_WhenRegisterIsSuccessful*
  name: RegisterAdmin_Returns201Created_WhenRegisterIsSuccessful
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.RegisterAdminEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_RegisterAdminEndpointTests_RegisterAdmin_Returns201Created_WhenRegisterIsSuccessful_
  commentId: Overload:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.RegisterAdminEndpointTests.RegisterAdmin_Returns201Created_WhenRegisterIsSuccessful
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.RegisterAdminEndpointTests.RegisterAdmin_Returns201Created_WhenRegisterIsSuccessful
  nameWithType: RegisterAdminEndpointTests.RegisterAdmin_Returns201Created_WhenRegisterIsSuccessful
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.RegisterAdminEndpointTests.RegisterAdmin_Returns500InternalServerError_WhenRegisterFails
  name: RegisterAdmin_Returns500InternalServerError_WhenRegisterFails()
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.RegisterAdminEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_RegisterAdminEndpointTests_RegisterAdmin_Returns500InternalServerError_WhenRegisterFails
  commentId: M:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.RegisterAdminEndpointTests.RegisterAdmin_Returns500InternalServerError_WhenRegisterFails
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.RegisterAdminEndpointTests.RegisterAdmin_Returns500InternalServerError_WhenRegisterFails()
  nameWithType: RegisterAdminEndpointTests.RegisterAdmin_Returns500InternalServerError_WhenRegisterFails()
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.RegisterAdminEndpointTests.RegisterAdmin_Returns500InternalServerError_WhenRegisterFails*
  name: RegisterAdmin_Returns500InternalServerError_WhenRegisterFails
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.RegisterAdminEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_RegisterAdminEndpointTests_RegisterAdmin_Returns500InternalServerError_WhenRegisterFails_
  commentId: Overload:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.RegisterAdminEndpointTests.RegisterAdmin_Returns500InternalServerError_WhenRegisterFails
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.RegisterAdminEndpointTests.RegisterAdmin_Returns500InternalServerError_WhenRegisterFails
  nameWithType: RegisterAdminEndpointTests.RegisterAdmin_Returns500InternalServerError_WhenRegisterFails
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.RegisterEndpointTests
  name: RegisterEndpointTests
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.RegisterEndpointTests.html
  commentId: T:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.RegisterEndpointTests
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.RegisterEndpointTests
  nameWithType: RegisterEndpointTests
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.RegisterEndpointTests.OneTimeSetup
  name: OneTimeSetup()
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.RegisterEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_RegisterEndpointTests_OneTimeSetup
  commentId: M:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.RegisterEndpointTests.OneTimeSetup
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.RegisterEndpointTests.OneTimeSetup()
  nameWithType: RegisterEndpointTests.OneTimeSetup()
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.RegisterEndpointTests.OneTimeSetup*
  name: OneTimeSetup
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.RegisterEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_RegisterEndpointTests_OneTimeSetup_
  commentId: Overload:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.RegisterEndpointTests.OneTimeSetup
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.RegisterEndpointTests.OneTimeSetup
  nameWithType: RegisterEndpointTests.OneTimeSetup
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.RegisterEndpointTests.OneTimeTearDown
  name: OneTimeTearDown()
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.RegisterEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_RegisterEndpointTests_OneTimeTearDown
  commentId: M:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.RegisterEndpointTests.OneTimeTearDown
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.RegisterEndpointTests.OneTimeTearDown()
  nameWithType: RegisterEndpointTests.OneTimeTearDown()
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.RegisterEndpointTests.OneTimeTearDown*
  name: OneTimeTearDown
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.RegisterEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_RegisterEndpointTests_OneTimeTearDown_
  commentId: Overload:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.RegisterEndpointTests.OneTimeTearDown
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.RegisterEndpointTests.OneTimeTearDown
  nameWithType: RegisterEndpointTests.OneTimeTearDown
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.RegisterEndpointTests.Register_Returns201Created_WhenUserRegistrationIsSuccessful
  name: Register_Returns201Created_WhenUserRegistrationIsSuccessful()
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.RegisterEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_RegisterEndpointTests_Register_Returns201Created_WhenUserRegistrationIsSuccessful
  commentId: M:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.RegisterEndpointTests.Register_Returns201Created_WhenUserRegistrationIsSuccessful
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.RegisterEndpointTests.Register_Returns201Created_WhenUserRegistrationIsSuccessful()
  nameWithType: RegisterEndpointTests.Register_Returns201Created_WhenUserRegistrationIsSuccessful()
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.RegisterEndpointTests.Register_Returns201Created_WhenUserRegistrationIsSuccessful*
  name: Register_Returns201Created_WhenUserRegistrationIsSuccessful
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.RegisterEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_RegisterEndpointTests_Register_Returns201Created_WhenUserRegistrationIsSuccessful_
  commentId: Overload:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.RegisterEndpointTests.Register_Returns201Created_WhenUserRegistrationIsSuccessful
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.RegisterEndpointTests.Register_Returns201Created_WhenUserRegistrationIsSuccessful
  nameWithType: RegisterEndpointTests.Register_Returns201Created_WhenUserRegistrationIsSuccessful
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.RegisterEndpointTests.Register_Returns409Conflict_WhenUserIsAlreadyRegistered
  name: Register_Returns409Conflict_WhenUserIsAlreadyRegistered()
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.RegisterEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_RegisterEndpointTests_Register_Returns409Conflict_WhenUserIsAlreadyRegistered
  commentId: M:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.RegisterEndpointTests.Register_Returns409Conflict_WhenUserIsAlreadyRegistered
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.RegisterEndpointTests.Register_Returns409Conflict_WhenUserIsAlreadyRegistered()
  nameWithType: RegisterEndpointTests.Register_Returns409Conflict_WhenUserIsAlreadyRegistered()
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.RegisterEndpointTests.Register_Returns409Conflict_WhenUserIsAlreadyRegistered*
  name: Register_Returns409Conflict_WhenUserIsAlreadyRegistered
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.RegisterEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_RegisterEndpointTests_Register_Returns409Conflict_WhenUserIsAlreadyRegistered_
  commentId: Overload:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.RegisterEndpointTests.Register_Returns409Conflict_WhenUserIsAlreadyRegistered
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.RegisterEndpointTests.Register_Returns409Conflict_WhenUserIsAlreadyRegistered
  nameWithType: RegisterEndpointTests.Register_Returns409Conflict_WhenUserIsAlreadyRegistered
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.RegisterEndpointTests.Register_Returns500InternalServerError_WhenCreateFails
  name: Register_Returns500InternalServerError_WhenCreateFails()
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.RegisterEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_RegisterEndpointTests_Register_Returns500InternalServerError_WhenCreateFails
  commentId: M:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.RegisterEndpointTests.Register_Returns500InternalServerError_WhenCreateFails
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.RegisterEndpointTests.Register_Returns500InternalServerError_WhenCreateFails()
  nameWithType: RegisterEndpointTests.Register_Returns500InternalServerError_WhenCreateFails()
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.RegisterEndpointTests.Register_Returns500InternalServerError_WhenCreateFails*
  name: Register_Returns500InternalServerError_WhenCreateFails
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.RegisterEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_RegisterEndpointTests_Register_Returns500InternalServerError_WhenCreateFails_
  commentId: Overload:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.RegisterEndpointTests.Register_Returns500InternalServerError_WhenCreateFails
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.RegisterEndpointTests.Register_Returns500InternalServerError_WhenCreateFails
  nameWithType: RegisterEndpointTests.Register_Returns500InternalServerError_WhenCreateFails
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ResetPasswordEndpointTests
  name: ResetPasswordEndpointTests
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ResetPasswordEndpointTests.html
  commentId: T:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ResetPasswordEndpointTests
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ResetPasswordEndpointTests
  nameWithType: ResetPasswordEndpointTests
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ResetPasswordEndpointTests.OneTimeSetup
  name: OneTimeSetup()
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ResetPasswordEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_ResetPasswordEndpointTests_OneTimeSetup
  commentId: M:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ResetPasswordEndpointTests.OneTimeSetup
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ResetPasswordEndpointTests.OneTimeSetup()
  nameWithType: ResetPasswordEndpointTests.OneTimeSetup()
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ResetPasswordEndpointTests.OneTimeSetup*
  name: OneTimeSetup
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ResetPasswordEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_ResetPasswordEndpointTests_OneTimeSetup_
  commentId: Overload:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ResetPasswordEndpointTests.OneTimeSetup
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ResetPasswordEndpointTests.OneTimeSetup
  nameWithType: ResetPasswordEndpointTests.OneTimeSetup
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ResetPasswordEndpointTests.OneTimeTearDown
  name: OneTimeTearDown()
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ResetPasswordEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_ResetPasswordEndpointTests_OneTimeTearDown
  commentId: M:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ResetPasswordEndpointTests.OneTimeTearDown
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ResetPasswordEndpointTests.OneTimeTearDown()
  nameWithType: ResetPasswordEndpointTests.OneTimeTearDown()
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ResetPasswordEndpointTests.OneTimeTearDown*
  name: OneTimeTearDown
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ResetPasswordEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_ResetPasswordEndpointTests_OneTimeTearDown_
  commentId: Overload:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ResetPasswordEndpointTests.OneTimeTearDown
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ResetPasswordEndpointTests.OneTimeTearDown
  nameWithType: ResetPasswordEndpointTests.OneTimeTearDown
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ResetPasswordEndpointTests.ResetPassword_Returns204NoContent_WhenResetIsSucessful
  name: ResetPassword_Returns204NoContent_WhenResetIsSucessful()
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ResetPasswordEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_ResetPasswordEndpointTests_ResetPassword_Returns204NoContent_WhenResetIsSucessful
  commentId: M:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ResetPasswordEndpointTests.ResetPassword_Returns204NoContent_WhenResetIsSucessful
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ResetPasswordEndpointTests.ResetPassword_Returns204NoContent_WhenResetIsSucessful()
  nameWithType: ResetPasswordEndpointTests.ResetPassword_Returns204NoContent_WhenResetIsSucessful()
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ResetPasswordEndpointTests.ResetPassword_Returns204NoContent_WhenResetIsSucessful*
  name: ResetPassword_Returns204NoContent_WhenResetIsSucessful
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ResetPasswordEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_ResetPasswordEndpointTests_ResetPassword_Returns204NoContent_WhenResetIsSucessful_
  commentId: Overload:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ResetPasswordEndpointTests.ResetPassword_Returns204NoContent_WhenResetIsSucessful
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ResetPasswordEndpointTests.ResetPassword_Returns204NoContent_WhenResetIsSucessful
  nameWithType: ResetPasswordEndpointTests.ResetPassword_Returns204NoContent_WhenResetIsSucessful
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ResetPasswordEndpointTests.ResetPassword_Returns500InternalServerError_WhenResetIsUnsucessful
  name: ResetPassword_Returns500InternalServerError_WhenResetIsUnsucessful()
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ResetPasswordEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_ResetPasswordEndpointTests_ResetPassword_Returns500InternalServerError_WhenResetIsUnsucessful
  commentId: M:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ResetPasswordEndpointTests.ResetPassword_Returns500InternalServerError_WhenResetIsUnsucessful
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ResetPasswordEndpointTests.ResetPassword_Returns500InternalServerError_WhenResetIsUnsucessful()
  nameWithType: ResetPasswordEndpointTests.ResetPassword_Returns500InternalServerError_WhenResetIsUnsucessful()
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ResetPasswordEndpointTests.ResetPassword_Returns500InternalServerError_WhenResetIsUnsucessful*
  name: ResetPassword_Returns500InternalServerError_WhenResetIsUnsucessful
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ResetPasswordEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_ResetPasswordEndpointTests_ResetPassword_Returns500InternalServerError_WhenResetIsUnsucessful_
  commentId: Overload:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ResetPasswordEndpointTests.ResetPassword_Returns500InternalServerError_WhenResetIsUnsucessful
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.ResetPasswordEndpointTests.ResetPassword_Returns500InternalServerError_WhenResetIsUnsucessful
  nameWithType: ResetPasswordEndpointTests.ResetPassword_Returns500InternalServerError_WhenResetIsUnsucessful
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.SendTokenEndpointTests
  name: SendTokenEndpointTests
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.SendTokenEndpointTests.html
  commentId: T:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.SendTokenEndpointTests
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.SendTokenEndpointTests
  nameWithType: SendTokenEndpointTests
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.SendTokenEndpointTests.OneTimeSetup
  name: OneTimeSetup()
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.SendTokenEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_SendTokenEndpointTests_OneTimeSetup
  commentId: M:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.SendTokenEndpointTests.OneTimeSetup
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.SendTokenEndpointTests.OneTimeSetup()
  nameWithType: SendTokenEndpointTests.OneTimeSetup()
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.SendTokenEndpointTests.OneTimeSetup*
  name: OneTimeSetup
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.SendTokenEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_SendTokenEndpointTests_OneTimeSetup_
  commentId: Overload:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.SendTokenEndpointTests.OneTimeSetup
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.SendTokenEndpointTests.OneTimeSetup
  nameWithType: SendTokenEndpointTests.OneTimeSetup
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.SendTokenEndpointTests.OneTimeTearDown
  name: OneTimeTearDown()
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.SendTokenEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_SendTokenEndpointTests_OneTimeTearDown
  commentId: M:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.SendTokenEndpointTests.OneTimeTearDown
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.SendTokenEndpointTests.OneTimeTearDown()
  nameWithType: SendTokenEndpointTests.OneTimeTearDown()
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.SendTokenEndpointTests.OneTimeTearDown*
  name: OneTimeTearDown
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.SendTokenEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_SendTokenEndpointTests_OneTimeTearDown_
  commentId: Overload:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.SendTokenEndpointTests.OneTimeTearDown
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.SendTokenEndpointTests.OneTimeTearDown
  nameWithType: SendTokenEndpointTests.OneTimeTearDown
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.SendTokenEndpointTests.SendTokenEndpoint_ReturnsOK_ForDifferentTokenTypes(System.String)
  name: SendTokenEndpoint_ReturnsOK_ForDifferentTokenTypes(string)
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.SendTokenEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_SendTokenEndpointTests_SendTokenEndpoint_ReturnsOK_ForDifferentTokenTypes_System_String_
  commentId: M:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.SendTokenEndpointTests.SendTokenEndpoint_ReturnsOK_ForDifferentTokenTypes(System.String)
  name.vb: SendTokenEndpoint_ReturnsOK_ForDifferentTokenTypes(String)
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.SendTokenEndpointTests.SendTokenEndpoint_ReturnsOK_ForDifferentTokenTypes(string)
  fullName.vb: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.SendTokenEndpointTests.SendTokenEndpoint_ReturnsOK_ForDifferentTokenTypes(String)
  nameWithType: SendTokenEndpointTests.SendTokenEndpoint_ReturnsOK_ForDifferentTokenTypes(string)
  nameWithType.vb: SendTokenEndpointTests.SendTokenEndpoint_ReturnsOK_ForDifferentTokenTypes(String)
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.SendTokenEndpointTests.SendTokenEndpoint_ReturnsOK_ForDifferentTokenTypes*
  name: SendTokenEndpoint_ReturnsOK_ForDifferentTokenTypes
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.SendTokenEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_SendTokenEndpointTests_SendTokenEndpoint_ReturnsOK_ForDifferentTokenTypes_
  commentId: Overload:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.SendTokenEndpointTests.SendTokenEndpoint_ReturnsOK_ForDifferentTokenTypes
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.SendTokenEndpointTests.SendTokenEndpoint_ReturnsOK_ForDifferentTokenTypes
  nameWithType: SendTokenEndpointTests.SendTokenEndpoint_ReturnsOK_ForDifferentTokenTypes
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.TokenEndpointTests
  name: TokenEndpointTests
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.TokenEndpointTests.html
  commentId: T:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.TokenEndpointTests
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.TokenEndpointTests
  nameWithType: TokenEndpointTests
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.TokenEndpointTests.OneTimeSetup
  name: OneTimeSetup()
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.TokenEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_TokenEndpointTests_OneTimeSetup
  commentId: M:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.TokenEndpointTests.OneTimeSetup
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.TokenEndpointTests.OneTimeSetup()
  nameWithType: TokenEndpointTests.OneTimeSetup()
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.TokenEndpointTests.OneTimeSetup*
  name: OneTimeSetup
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.TokenEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_TokenEndpointTests_OneTimeSetup_
  commentId: Overload:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.TokenEndpointTests.OneTimeSetup
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.TokenEndpointTests.OneTimeSetup
  nameWithType: TokenEndpointTests.OneTimeSetup
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.TokenEndpointTests.OneTimeTearDown
  name: OneTimeTearDown()
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.TokenEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_TokenEndpointTests_OneTimeTearDown
  commentId: M:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.TokenEndpointTests.OneTimeTearDown
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.TokenEndpointTests.OneTimeTearDown()
  nameWithType: TokenEndpointTests.OneTimeTearDown()
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.TokenEndpointTests.OneTimeTearDown*
  name: OneTimeTearDown
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.TokenEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_TokenEndpointTests_OneTimeTearDown_
  commentId: Overload:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.TokenEndpointTests.OneTimeTearDown
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.TokenEndpointTests.OneTimeTearDown
  nameWithType: TokenEndpointTests.OneTimeTearDown
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.TokenEndpointTests.TokenEndpoint_ReturnsOK_WhenClientCredentialsAreUsed
  name: TokenEndpoint_ReturnsOK_WhenClientCredentialsAreUsed()
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.TokenEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_TokenEndpointTests_TokenEndpoint_ReturnsOK_WhenClientCredentialsAreUsed
  commentId: M:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.TokenEndpointTests.TokenEndpoint_ReturnsOK_WhenClientCredentialsAreUsed
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.TokenEndpointTests.TokenEndpoint_ReturnsOK_WhenClientCredentialsAreUsed()
  nameWithType: TokenEndpointTests.TokenEndpoint_ReturnsOK_WhenClientCredentialsAreUsed()
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.TokenEndpointTests.TokenEndpoint_ReturnsOK_WhenClientCredentialsAreUsed*
  name: TokenEndpoint_ReturnsOK_WhenClientCredentialsAreUsed
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.TokenEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_TokenEndpointTests_TokenEndpoint_ReturnsOK_WhenClientCredentialsAreUsed_
  commentId: Overload:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.TokenEndpointTests.TokenEndpoint_ReturnsOK_WhenClientCredentialsAreUsed
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.TokenEndpointTests.TokenEndpoint_ReturnsOK_WhenClientCredentialsAreUsed
  nameWithType: TokenEndpointTests.TokenEndpoint_ReturnsOK_WhenClientCredentialsAreUsed
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.TokenEndpointTests.TokenEndpoint_ReturnsOK_WhenCodeIsUsed
  name: TokenEndpoint_ReturnsOK_WhenCodeIsUsed()
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.TokenEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_TokenEndpointTests_TokenEndpoint_ReturnsOK_WhenCodeIsUsed
  commentId: M:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.TokenEndpointTests.TokenEndpoint_ReturnsOK_WhenCodeIsUsed
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.TokenEndpointTests.TokenEndpoint_ReturnsOK_WhenCodeIsUsed()
  nameWithType: TokenEndpointTests.TokenEndpoint_ReturnsOK_WhenCodeIsUsed()
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.TokenEndpointTests.TokenEndpoint_ReturnsOK_WhenCodeIsUsed*
  name: TokenEndpoint_ReturnsOK_WhenCodeIsUsed
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.TokenEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_TokenEndpointTests_TokenEndpoint_ReturnsOK_WhenCodeIsUsed_
  commentId: Overload:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.TokenEndpointTests.TokenEndpoint_ReturnsOK_WhenCodeIsUsed
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.TokenEndpointTests.TokenEndpoint_ReturnsOK_WhenCodeIsUsed
  nameWithType: TokenEndpointTests.TokenEndpoint_ReturnsOK_WhenCodeIsUsed
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.TokenEndpointTests.TokenEndpoint_ReturnsOK_WhenRefreshTokenIsUsed
  name: TokenEndpoint_ReturnsOK_WhenRefreshTokenIsUsed()
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.TokenEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_TokenEndpointTests_TokenEndpoint_ReturnsOK_WhenRefreshTokenIsUsed
  commentId: M:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.TokenEndpointTests.TokenEndpoint_ReturnsOK_WhenRefreshTokenIsUsed
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.TokenEndpointTests.TokenEndpoint_ReturnsOK_WhenRefreshTokenIsUsed()
  nameWithType: TokenEndpointTests.TokenEndpoint_ReturnsOK_WhenRefreshTokenIsUsed()
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.TokenEndpointTests.TokenEndpoint_ReturnsOK_WhenRefreshTokenIsUsed*
  name: TokenEndpoint_ReturnsOK_WhenRefreshTokenIsUsed
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.TokenEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_TokenEndpointTests_TokenEndpoint_ReturnsOK_WhenRefreshTokenIsUsed_
  commentId: Overload:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.TokenEndpointTests.TokenEndpoint_ReturnsOK_WhenRefreshTokenIsUsed
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.TokenEndpointTests.TokenEndpoint_ReturnsOK_WhenRefreshTokenIsUsed
  nameWithType: TokenEndpointTests.TokenEndpoint_ReturnsOK_WhenRefreshTokenIsUsed
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdateAddressEndpointTests
  name: UpdateAddressEndpointTests
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdateAddressEndpointTests.html
  commentId: T:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdateAddressEndpointTests
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdateAddressEndpointTests
  nameWithType: UpdateAddressEndpointTests
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdateAddressEndpointTests.OneTimeSetup
  name: OneTimeSetup()
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdateAddressEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_UpdateAddressEndpointTests_OneTimeSetup
  commentId: M:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdateAddressEndpointTests.OneTimeSetup
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdateAddressEndpointTests.OneTimeSetup()
  nameWithType: UpdateAddressEndpointTests.OneTimeSetup()
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdateAddressEndpointTests.OneTimeSetup*
  name: OneTimeSetup
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdateAddressEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_UpdateAddressEndpointTests_OneTimeSetup_
  commentId: Overload:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdateAddressEndpointTests.OneTimeSetup
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdateAddressEndpointTests.OneTimeSetup
  nameWithType: UpdateAddressEndpointTests.OneTimeSetup
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdateAddressEndpointTests.OneTimeTearDown
  name: OneTimeTearDown()
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdateAddressEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_UpdateAddressEndpointTests_OneTimeTearDown
  commentId: M:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdateAddressEndpointTests.OneTimeTearDown
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdateAddressEndpointTests.OneTimeTearDown()
  nameWithType: UpdateAddressEndpointTests.OneTimeTearDown()
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdateAddressEndpointTests.OneTimeTearDown*
  name: OneTimeTearDown
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdateAddressEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_UpdateAddressEndpointTests_OneTimeTearDown_
  commentId: Overload:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdateAddressEndpointTests.OneTimeTearDown
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdateAddressEndpointTests.OneTimeTearDown
  nameWithType: UpdateAddressEndpointTests.OneTimeTearDown
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdateAddressEndpointTests.UpdateAddress_Returns200OK_WhenUpdateIsSuccessful
  name: UpdateAddress_Returns200OK_WhenUpdateIsSuccessful()
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdateAddressEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_UpdateAddressEndpointTests_UpdateAddress_Returns200OK_WhenUpdateIsSuccessful
  commentId: M:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdateAddressEndpointTests.UpdateAddress_Returns200OK_WhenUpdateIsSuccessful
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdateAddressEndpointTests.UpdateAddress_Returns200OK_WhenUpdateIsSuccessful()
  nameWithType: UpdateAddressEndpointTests.UpdateAddress_Returns200OK_WhenUpdateIsSuccessful()
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdateAddressEndpointTests.UpdateAddress_Returns200OK_WhenUpdateIsSuccessful*
  name: UpdateAddress_Returns200OK_WhenUpdateIsSuccessful
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdateAddressEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_UpdateAddressEndpointTests_UpdateAddress_Returns200OK_WhenUpdateIsSuccessful_
  commentId: Overload:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdateAddressEndpointTests.UpdateAddress_Returns200OK_WhenUpdateIsSuccessful
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdateAddressEndpointTests.UpdateAddress_Returns200OK_WhenUpdateIsSuccessful
  nameWithType: UpdateAddressEndpointTests.UpdateAddress_Returns200OK_WhenUpdateIsSuccessful
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdateApplicationByNameEndpointTests
  name: UpdateApplicationByNameEndpointTests
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdateApplicationByNameEndpointTests.html
  commentId: T:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdateApplicationByNameEndpointTests
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdateApplicationByNameEndpointTests
  nameWithType: UpdateApplicationByNameEndpointTests
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdateApplicationByNameEndpointTests.OneTimeSetup
  name: OneTimeSetup()
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdateApplicationByNameEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_UpdateApplicationByNameEndpointTests_OneTimeSetup
  commentId: M:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdateApplicationByNameEndpointTests.OneTimeSetup
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdateApplicationByNameEndpointTests.OneTimeSetup()
  nameWithType: UpdateApplicationByNameEndpointTests.OneTimeSetup()
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdateApplicationByNameEndpointTests.OneTimeSetup*
  name: OneTimeSetup
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdateApplicationByNameEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_UpdateApplicationByNameEndpointTests_OneTimeSetup_
  commentId: Overload:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdateApplicationByNameEndpointTests.OneTimeSetup
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdateApplicationByNameEndpointTests.OneTimeSetup
  nameWithType: UpdateApplicationByNameEndpointTests.OneTimeSetup
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdateApplicationByNameEndpointTests.OneTimeTearDown
  name: OneTimeTearDown()
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdateApplicationByNameEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_UpdateApplicationByNameEndpointTests_OneTimeTearDown
  commentId: M:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdateApplicationByNameEndpointTests.OneTimeTearDown
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdateApplicationByNameEndpointTests.OneTimeTearDown()
  nameWithType: UpdateApplicationByNameEndpointTests.OneTimeTearDown()
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdateApplicationByNameEndpointTests.OneTimeTearDown*
  name: OneTimeTearDown
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdateApplicationByNameEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_UpdateApplicationByNameEndpointTests_OneTimeTearDown_
  commentId: Overload:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdateApplicationByNameEndpointTests.OneTimeTearDown
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdateApplicationByNameEndpointTests.OneTimeTearDown
  nameWithType: UpdateApplicationByNameEndpointTests.OneTimeTearDown
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdateApplicationByNameEndpointTests.UpdateApplication_Returns200OK_WhenUpdateIsSuccessful
  name: UpdateApplication_Returns200OK_WhenUpdateIsSuccessful()
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdateApplicationByNameEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_UpdateApplicationByNameEndpointTests_UpdateApplication_Returns200OK_WhenUpdateIsSuccessful
  commentId: M:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdateApplicationByNameEndpointTests.UpdateApplication_Returns200OK_WhenUpdateIsSuccessful
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdateApplicationByNameEndpointTests.UpdateApplication_Returns200OK_WhenUpdateIsSuccessful()
  nameWithType: UpdateApplicationByNameEndpointTests.UpdateApplication_Returns200OK_WhenUpdateIsSuccessful()
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdateApplicationByNameEndpointTests.UpdateApplication_Returns200OK_WhenUpdateIsSuccessful*
  name: UpdateApplication_Returns200OK_WhenUpdateIsSuccessful
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdateApplicationByNameEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_UpdateApplicationByNameEndpointTests_UpdateApplication_Returns200OK_WhenUpdateIsSuccessful_
  commentId: Overload:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdateApplicationByNameEndpointTests.UpdateApplication_Returns200OK_WhenUpdateIsSuccessful
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdateApplicationByNameEndpointTests.UpdateApplication_Returns200OK_WhenUpdateIsSuccessful
  nameWithType: UpdateApplicationByNameEndpointTests.UpdateApplication_Returns200OK_WhenUpdateIsSuccessful
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdateApplicationByNameEndpointTests.UpdateApplication_Returns400BadRequest_WhenAppIsNull
  name: UpdateApplication_Returns400BadRequest_WhenAppIsNull()
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdateApplicationByNameEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_UpdateApplicationByNameEndpointTests_UpdateApplication_Returns400BadRequest_WhenAppIsNull
  commentId: M:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdateApplicationByNameEndpointTests.UpdateApplication_Returns400BadRequest_WhenAppIsNull
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdateApplicationByNameEndpointTests.UpdateApplication_Returns400BadRequest_WhenAppIsNull()
  nameWithType: UpdateApplicationByNameEndpointTests.UpdateApplication_Returns400BadRequest_WhenAppIsNull()
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdateApplicationByNameEndpointTests.UpdateApplication_Returns400BadRequest_WhenAppIsNull*
  name: UpdateApplication_Returns400BadRequest_WhenAppIsNull
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdateApplicationByNameEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_UpdateApplicationByNameEndpointTests_UpdateApplication_Returns400BadRequest_WhenAppIsNull_
  commentId: Overload:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdateApplicationByNameEndpointTests.UpdateApplication_Returns400BadRequest_WhenAppIsNull
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdateApplicationByNameEndpointTests.UpdateApplication_Returns400BadRequest_WhenAppIsNull
  nameWithType: UpdateApplicationByNameEndpointTests.UpdateApplication_Returns400BadRequest_WhenAppIsNull
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdateApplicationByNameEndpointTests.UpdateApplication_Returns400BadRequest_WhenUserIsNull
  name: UpdateApplication_Returns400BadRequest_WhenUserIsNull()
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdateApplicationByNameEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_UpdateApplicationByNameEndpointTests_UpdateApplication_Returns400BadRequest_WhenUserIsNull
  commentId: M:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdateApplicationByNameEndpointTests.UpdateApplication_Returns400BadRequest_WhenUserIsNull
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdateApplicationByNameEndpointTests.UpdateApplication_Returns400BadRequest_WhenUserIsNull()
  nameWithType: UpdateApplicationByNameEndpointTests.UpdateApplication_Returns400BadRequest_WhenUserIsNull()
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdateApplicationByNameEndpointTests.UpdateApplication_Returns400BadRequest_WhenUserIsNull*
  name: UpdateApplication_Returns400BadRequest_WhenUserIsNull
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdateApplicationByNameEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_UpdateApplicationByNameEndpointTests_UpdateApplication_Returns400BadRequest_WhenUserIsNull_
  commentId: Overload:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdateApplicationByNameEndpointTests.UpdateApplication_Returns400BadRequest_WhenUserIsNull
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdateApplicationByNameEndpointTests.UpdateApplication_Returns400BadRequest_WhenUserIsNull
  nameWithType: UpdateApplicationByNameEndpointTests.UpdateApplication_Returns400BadRequest_WhenUserIsNull
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdateApplicationByNameEndpointTests.UpdateApplication_Returns500InternalServerError_WhenUpdateFails
  name: UpdateApplication_Returns500InternalServerError_WhenUpdateFails()
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdateApplicationByNameEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_UpdateApplicationByNameEndpointTests_UpdateApplication_Returns500InternalServerError_WhenUpdateFails
  commentId: M:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdateApplicationByNameEndpointTests.UpdateApplication_Returns500InternalServerError_WhenUpdateFails
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdateApplicationByNameEndpointTests.UpdateApplication_Returns500InternalServerError_WhenUpdateFails()
  nameWithType: UpdateApplicationByNameEndpointTests.UpdateApplication_Returns500InternalServerError_WhenUpdateFails()
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdateApplicationByNameEndpointTests.UpdateApplication_Returns500InternalServerError_WhenUpdateFails*
  name: UpdateApplication_Returns500InternalServerError_WhenUpdateFails
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdateApplicationByNameEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_UpdateApplicationByNameEndpointTests_UpdateApplication_Returns500InternalServerError_WhenUpdateFails_
  commentId: Overload:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdateApplicationByNameEndpointTests.UpdateApplication_Returns500InternalServerError_WhenUpdateFails
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdateApplicationByNameEndpointTests.UpdateApplication_Returns500InternalServerError_WhenUpdateFails
  nameWithType: UpdateApplicationByNameEndpointTests.UpdateApplication_Returns500InternalServerError_WhenUpdateFails
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdateEmailEndpointTests
  name: UpdateEmailEndpointTests
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdateEmailEndpointTests.html
  commentId: T:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdateEmailEndpointTests
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdateEmailEndpointTests
  nameWithType: UpdateEmailEndpointTests
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdateEmailEndpointTests.OneTimeSetup
  name: OneTimeSetup()
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdateEmailEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_UpdateEmailEndpointTests_OneTimeSetup
  commentId: M:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdateEmailEndpointTests.OneTimeSetup
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdateEmailEndpointTests.OneTimeSetup()
  nameWithType: UpdateEmailEndpointTests.OneTimeSetup()
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdateEmailEndpointTests.OneTimeSetup*
  name: OneTimeSetup
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdateEmailEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_UpdateEmailEndpointTests_OneTimeSetup_
  commentId: Overload:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdateEmailEndpointTests.OneTimeSetup
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdateEmailEndpointTests.OneTimeSetup
  nameWithType: UpdateEmailEndpointTests.OneTimeSetup
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdateEmailEndpointTests.OneTimeTearDown
  name: OneTimeTearDown()
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdateEmailEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_UpdateEmailEndpointTests_OneTimeTearDown
  commentId: M:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdateEmailEndpointTests.OneTimeTearDown
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdateEmailEndpointTests.OneTimeTearDown()
  nameWithType: UpdateEmailEndpointTests.OneTimeTearDown()
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdateEmailEndpointTests.OneTimeTearDown*
  name: OneTimeTearDown
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdateEmailEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_UpdateEmailEndpointTests_OneTimeTearDown_
  commentId: Overload:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdateEmailEndpointTests.OneTimeTearDown
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdateEmailEndpointTests.OneTimeTearDown
  nameWithType: UpdateEmailEndpointTests.OneTimeTearDown
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdateEmailEndpointTests.UpdateEmail_Returns200OK_WhenUpdateIsSuccessful
  name: UpdateEmail_Returns200OK_WhenUpdateIsSuccessful()
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdateEmailEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_UpdateEmailEndpointTests_UpdateEmail_Returns200OK_WhenUpdateIsSuccessful
  commentId: M:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdateEmailEndpointTests.UpdateEmail_Returns200OK_WhenUpdateIsSuccessful
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdateEmailEndpointTests.UpdateEmail_Returns200OK_WhenUpdateIsSuccessful()
  nameWithType: UpdateEmailEndpointTests.UpdateEmail_Returns200OK_WhenUpdateIsSuccessful()
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdateEmailEndpointTests.UpdateEmail_Returns200OK_WhenUpdateIsSuccessful*
  name: UpdateEmail_Returns200OK_WhenUpdateIsSuccessful
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdateEmailEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_UpdateEmailEndpointTests_UpdateEmail_Returns200OK_WhenUpdateIsSuccessful_
  commentId: Overload:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdateEmailEndpointTests.UpdateEmail_Returns200OK_WhenUpdateIsSuccessful
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdateEmailEndpointTests.UpdateEmail_Returns200OK_WhenUpdateIsSuccessful
  nameWithType: UpdateEmailEndpointTests.UpdateEmail_Returns200OK_WhenUpdateIsSuccessful
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdateEmailEndpointTests.UpdateEmail_ReturnsBadRequest_WhenUpdateIsUnsuccessful
  name: UpdateEmail_ReturnsBadRequest_WhenUpdateIsUnsuccessful()
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdateEmailEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_UpdateEmailEndpointTests_UpdateEmail_ReturnsBadRequest_WhenUpdateIsUnsuccessful
  commentId: M:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdateEmailEndpointTests.UpdateEmail_ReturnsBadRequest_WhenUpdateIsUnsuccessful
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdateEmailEndpointTests.UpdateEmail_ReturnsBadRequest_WhenUpdateIsUnsuccessful()
  nameWithType: UpdateEmailEndpointTests.UpdateEmail_ReturnsBadRequest_WhenUpdateIsUnsuccessful()
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdateEmailEndpointTests.UpdateEmail_ReturnsBadRequest_WhenUpdateIsUnsuccessful*
  name: UpdateEmail_ReturnsBadRequest_WhenUpdateIsUnsuccessful
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdateEmailEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_UpdateEmailEndpointTests_UpdateEmail_ReturnsBadRequest_WhenUpdateIsUnsuccessful_
  commentId: Overload:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdateEmailEndpointTests.UpdateEmail_ReturnsBadRequest_WhenUpdateIsUnsuccessful
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdateEmailEndpointTests.UpdateEmail_ReturnsBadRequest_WhenUpdateIsUnsuccessful
  nameWithType: UpdateEmailEndpointTests.UpdateEmail_ReturnsBadRequest_WhenUpdateIsUnsuccessful
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdatePhoneNumberEndpointTests
  name: UpdatePhoneNumberEndpointTests
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdatePhoneNumberEndpointTests.html
  commentId: T:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdatePhoneNumberEndpointTests
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdatePhoneNumberEndpointTests
  nameWithType: UpdatePhoneNumberEndpointTests
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdatePhoneNumberEndpointTests.OneTimeSetup
  name: OneTimeSetup()
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdatePhoneNumberEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_UpdatePhoneNumberEndpointTests_OneTimeSetup
  commentId: M:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdatePhoneNumberEndpointTests.OneTimeSetup
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdatePhoneNumberEndpointTests.OneTimeSetup()
  nameWithType: UpdatePhoneNumberEndpointTests.OneTimeSetup()
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdatePhoneNumberEndpointTests.OneTimeSetup*
  name: OneTimeSetup
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdatePhoneNumberEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_UpdatePhoneNumberEndpointTests_OneTimeSetup_
  commentId: Overload:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdatePhoneNumberEndpointTests.OneTimeSetup
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdatePhoneNumberEndpointTests.OneTimeSetup
  nameWithType: UpdatePhoneNumberEndpointTests.OneTimeSetup
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdatePhoneNumberEndpointTests.OneTimeTearDown
  name: OneTimeTearDown()
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdatePhoneNumberEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_UpdatePhoneNumberEndpointTests_OneTimeTearDown
  commentId: M:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdatePhoneNumberEndpointTests.OneTimeTearDown
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdatePhoneNumberEndpointTests.OneTimeTearDown()
  nameWithType: UpdatePhoneNumberEndpointTests.OneTimeTearDown()
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdatePhoneNumberEndpointTests.OneTimeTearDown*
  name: OneTimeTearDown
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdatePhoneNumberEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_UpdatePhoneNumberEndpointTests_OneTimeTearDown_
  commentId: Overload:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdatePhoneNumberEndpointTests.OneTimeTearDown
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdatePhoneNumberEndpointTests.OneTimeTearDown
  nameWithType: UpdatePhoneNumberEndpointTests.OneTimeTearDown
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdatePhoneNumberEndpointTests.UpdatePhoneNumber_Returns200OK_WhenUpdateIsSuccessful
  name: UpdatePhoneNumber_Returns200OK_WhenUpdateIsSuccessful()
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdatePhoneNumberEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_UpdatePhoneNumberEndpointTests_UpdatePhoneNumber_Returns200OK_WhenUpdateIsSuccessful
  commentId: M:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdatePhoneNumberEndpointTests.UpdatePhoneNumber_Returns200OK_WhenUpdateIsSuccessful
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdatePhoneNumberEndpointTests.UpdatePhoneNumber_Returns200OK_WhenUpdateIsSuccessful()
  nameWithType: UpdatePhoneNumberEndpointTests.UpdatePhoneNumber_Returns200OK_WhenUpdateIsSuccessful()
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdatePhoneNumberEndpointTests.UpdatePhoneNumber_Returns200OK_WhenUpdateIsSuccessful*
  name: UpdatePhoneNumber_Returns200OK_WhenUpdateIsSuccessful
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdatePhoneNumberEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_UpdatePhoneNumberEndpointTests_UpdatePhoneNumber_Returns200OK_WhenUpdateIsSuccessful_
  commentId: Overload:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdatePhoneNumberEndpointTests.UpdatePhoneNumber_Returns200OK_WhenUpdateIsSuccessful
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdatePhoneNumberEndpointTests.UpdatePhoneNumber_Returns200OK_WhenUpdateIsSuccessful
  nameWithType: UpdatePhoneNumberEndpointTests.UpdatePhoneNumber_Returns200OK_WhenUpdateIsSuccessful
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdatePhoneNumberEndpointTests.UpdatePhoneNumber_ReturnsBadRequest_WhenUpdateIsUnsuccessful
  name: UpdatePhoneNumber_ReturnsBadRequest_WhenUpdateIsUnsuccessful()
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdatePhoneNumberEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_UpdatePhoneNumberEndpointTests_UpdatePhoneNumber_ReturnsBadRequest_WhenUpdateIsUnsuccessful
  commentId: M:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdatePhoneNumberEndpointTests.UpdatePhoneNumber_ReturnsBadRequest_WhenUpdateIsUnsuccessful
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdatePhoneNumberEndpointTests.UpdatePhoneNumber_ReturnsBadRequest_WhenUpdateIsUnsuccessful()
  nameWithType: UpdatePhoneNumberEndpointTests.UpdatePhoneNumber_ReturnsBadRequest_WhenUpdateIsUnsuccessful()
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdatePhoneNumberEndpointTests.UpdatePhoneNumber_ReturnsBadRequest_WhenUpdateIsUnsuccessful*
  name: UpdatePhoneNumber_ReturnsBadRequest_WhenUpdateIsUnsuccessful
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdatePhoneNumberEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_UpdatePhoneNumberEndpointTests_UpdatePhoneNumber_ReturnsBadRequest_WhenUpdateIsUnsuccessful_
  commentId: Overload:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdatePhoneNumberEndpointTests.UpdatePhoneNumber_ReturnsBadRequest_WhenUpdateIsUnsuccessful
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdatePhoneNumberEndpointTests.UpdatePhoneNumber_ReturnsBadRequest_WhenUpdateIsUnsuccessful
  nameWithType: UpdatePhoneNumberEndpointTests.UpdatePhoneNumber_ReturnsBadRequest_WhenUpdateIsUnsuccessful
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdateRoleEndpointTests
  name: UpdateRoleEndpointTests
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdateRoleEndpointTests.html
  commentId: T:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdateRoleEndpointTests
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdateRoleEndpointTests
  nameWithType: UpdateRoleEndpointTests
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdateRoleEndpointTests.OneTimeSetup
  name: OneTimeSetup()
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdateRoleEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_UpdateRoleEndpointTests_OneTimeSetup
  commentId: M:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdateRoleEndpointTests.OneTimeSetup
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdateRoleEndpointTests.OneTimeSetup()
  nameWithType: UpdateRoleEndpointTests.OneTimeSetup()
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdateRoleEndpointTests.OneTimeSetup*
  name: OneTimeSetup
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdateRoleEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_UpdateRoleEndpointTests_OneTimeSetup_
  commentId: Overload:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdateRoleEndpointTests.OneTimeSetup
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdateRoleEndpointTests.OneTimeSetup
  nameWithType: UpdateRoleEndpointTests.OneTimeSetup
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdateRoleEndpointTests.OneTimeTearDown
  name: OneTimeTearDown()
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdateRoleEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_UpdateRoleEndpointTests_OneTimeTearDown
  commentId: M:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdateRoleEndpointTests.OneTimeTearDown
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdateRoleEndpointTests.OneTimeTearDown()
  nameWithType: UpdateRoleEndpointTests.OneTimeTearDown()
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdateRoleEndpointTests.OneTimeTearDown*
  name: OneTimeTearDown
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdateRoleEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_UpdateRoleEndpointTests_OneTimeTearDown_
  commentId: Overload:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdateRoleEndpointTests.OneTimeTearDown
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdateRoleEndpointTests.OneTimeTearDown
  nameWithType: UpdateRoleEndpointTests.OneTimeTearDown
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdateRoleEndpointTests.UpdateRole_Returns204NoContent_WhenUpdateIsSuccessful
  name: UpdateRole_Returns204NoContent_WhenUpdateIsSuccessful()
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdateRoleEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_UpdateRoleEndpointTests_UpdateRole_Returns204NoContent_WhenUpdateIsSuccessful
  commentId: M:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdateRoleEndpointTests.UpdateRole_Returns204NoContent_WhenUpdateIsSuccessful
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdateRoleEndpointTests.UpdateRole_Returns204NoContent_WhenUpdateIsSuccessful()
  nameWithType: UpdateRoleEndpointTests.UpdateRole_Returns204NoContent_WhenUpdateIsSuccessful()
- uid: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdateRoleEndpointTests.UpdateRole_Returns204NoContent_WhenUpdateIsSuccessful*
  name: UpdateRole_Returns204NoContent_WhenUpdateIsSuccessful
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdateRoleEndpointTests.html#Authentica_Service_Identity_Tests_IntegrationTests_Endpoints_UpdateRoleEndpointTests_UpdateRole_Returns204NoContent_WhenUpdateIsSuccessful_
  commentId: Overload:Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdateRoleEndpointTests.UpdateRole_Returns204NoContent_WhenUpdateIsSuccessful
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.Endpoints.UpdateRoleEndpointTests.UpdateRole_Returns204NoContent_WhenUpdateIsSuccessful
  nameWithType: UpdateRoleEndpointTests.UpdateRole_Returns204NoContent_WhenUpdateIsSuccessful
- uid: Authentica.Service.Identity.Tests.IntegrationTests.TestFixture`1
  name: TestFixture<TProgram>
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.TestFixture-1.html
  commentId: T:Authentica.Service.Identity.Tests.IntegrationTests.TestFixture`1
  name.vb: TestFixture(Of TProgram)
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.TestFixture<TProgram>
  fullName.vb: Authentica.Service.Identity.Tests.IntegrationTests.TestFixture(Of TProgram)
  nameWithType: TestFixture<TProgram>
  nameWithType.vb: TestFixture(Of TProgram)
- uid: Authentica.Service.Identity.Tests.IntegrationTests.TestFixture`1.AccessToken
  name: AccessToken
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.TestFixture-1.html#Authentica_Service_Identity_Tests_IntegrationTests_TestFixture_1_AccessToken
  commentId: P:Authentica.Service.Identity.Tests.IntegrationTests.TestFixture`1.AccessToken
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.TestFixture<TProgram>.AccessToken
  fullName.vb: Authentica.Service.Identity.Tests.IntegrationTests.TestFixture(Of TProgram).AccessToken
  nameWithType: TestFixture<TProgram>.AccessToken
  nameWithType.vb: TestFixture(Of TProgram).AccessToken
- uid: Authentica.Service.Identity.Tests.IntegrationTests.TestFixture`1.AccessToken*
  name: AccessToken
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.TestFixture-1.html#Authentica_Service_Identity_Tests_IntegrationTests_TestFixture_1_AccessToken_
  commentId: Overload:Authentica.Service.Identity.Tests.IntegrationTests.TestFixture`1.AccessToken
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.TestFixture<TProgram>.AccessToken
  fullName.vb: Authentica.Service.Identity.Tests.IntegrationTests.TestFixture(Of TProgram).AccessToken
  nameWithType: TestFixture<TProgram>.AccessToken
  nameWithType.vb: TestFixture(Of TProgram).AccessToken
- uid: Authentica.Service.Identity.Tests.IntegrationTests.TestFixture`1.Client
  name: Client
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.TestFixture-1.html#Authentica_Service_Identity_Tests_IntegrationTests_TestFixture_1_Client
  commentId: P:Authentica.Service.Identity.Tests.IntegrationTests.TestFixture`1.Client
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.TestFixture<TProgram>.Client
  fullName.vb: Authentica.Service.Identity.Tests.IntegrationTests.TestFixture(Of TProgram).Client
  nameWithType: TestFixture<TProgram>.Client
  nameWithType.vb: TestFixture(Of TProgram).Client
- uid: Authentica.Service.Identity.Tests.IntegrationTests.TestFixture`1.Client*
  name: Client
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.TestFixture-1.html#Authentica_Service_Identity_Tests_IntegrationTests_TestFixture_1_Client_
  commentId: Overload:Authentica.Service.Identity.Tests.IntegrationTests.TestFixture`1.Client
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.TestFixture<TProgram>.Client
  fullName.vb: Authentica.Service.Identity.Tests.IntegrationTests.TestFixture(Of TProgram).Client
  nameWithType: TestFixture<TProgram>.Client
  nameWithType.vb: TestFixture(Of TProgram).Client
- uid: Authentica.Service.Identity.Tests.IntegrationTests.TestFixture`1.CreateAuthenticatedClient(System.Action{Microsoft.Extensions.DependencyInjection.IServiceCollection})
  name: CreateAuthenticatedClient(Action<IServiceCollection>)
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.TestFixture-1.html#Authentica_Service_Identity_Tests_IntegrationTests_TestFixture_1_CreateAuthenticatedClient_System_Action_Microsoft_Extensions_DependencyInjection_IServiceCollection__
  commentId: M:Authentica.Service.Identity.Tests.IntegrationTests.TestFixture`1.CreateAuthenticatedClient(System.Action{Microsoft.Extensions.DependencyInjection.IServiceCollection})
  name.vb: CreateAuthenticatedClient(Action(Of IServiceCollection))
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.TestFixture<TProgram>.CreateAuthenticatedClient(System.Action<Microsoft.Extensions.DependencyInjection.IServiceCollection>)
  fullName.vb: Authentica.Service.Identity.Tests.IntegrationTests.TestFixture(Of TProgram).CreateAuthenticatedClient(System.Action(Of Microsoft.Extensions.DependencyInjection.IServiceCollection))
  nameWithType: TestFixture<TProgram>.CreateAuthenticatedClient(Action<IServiceCollection>)
  nameWithType.vb: TestFixture(Of TProgram).CreateAuthenticatedClient(Action(Of IServiceCollection))
- uid: Authentica.Service.Identity.Tests.IntegrationTests.TestFixture`1.CreateAuthenticatedClient*
  name: CreateAuthenticatedClient
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.TestFixture-1.html#Authentica_Service_Identity_Tests_IntegrationTests_TestFixture_1_CreateAuthenticatedClient_
  commentId: Overload:Authentica.Service.Identity.Tests.IntegrationTests.TestFixture`1.CreateAuthenticatedClient
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.TestFixture<TProgram>.CreateAuthenticatedClient
  fullName.vb: Authentica.Service.Identity.Tests.IntegrationTests.TestFixture(Of TProgram).CreateAuthenticatedClient
  nameWithType: TestFixture<TProgram>.CreateAuthenticatedClient
  nameWithType.vb: TestFixture(Of TProgram).CreateAuthenticatedClient
- uid: Authentica.Service.Identity.Tests.IntegrationTests.TestFixture`1.OneTimeSetUpAsync
  name: OneTimeSetUpAsync()
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.TestFixture-1.html#Authentica_Service_Identity_Tests_IntegrationTests_TestFixture_1_OneTimeSetUpAsync
  commentId: M:Authentica.Service.Identity.Tests.IntegrationTests.TestFixture`1.OneTimeSetUpAsync
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.TestFixture<TProgram>.OneTimeSetUpAsync()
  fullName.vb: Authentica.Service.Identity.Tests.IntegrationTests.TestFixture(Of TProgram).OneTimeSetUpAsync()
  nameWithType: TestFixture<TProgram>.OneTimeSetUpAsync()
  nameWithType.vb: TestFixture(Of TProgram).OneTimeSetUpAsync()
- uid: Authentica.Service.Identity.Tests.IntegrationTests.TestFixture`1.OneTimeSetUpAsync*
  name: OneTimeSetUpAsync
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.TestFixture-1.html#Authentica_Service_Identity_Tests_IntegrationTests_TestFixture_1_OneTimeSetUpAsync_
  commentId: Overload:Authentica.Service.Identity.Tests.IntegrationTests.TestFixture`1.OneTimeSetUpAsync
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.TestFixture<TProgram>.OneTimeSetUpAsync
  fullName.vb: Authentica.Service.Identity.Tests.IntegrationTests.TestFixture(Of TProgram).OneTimeSetUpAsync
  nameWithType: TestFixture<TProgram>.OneTimeSetUpAsync
  nameWithType.vb: TestFixture(Of TProgram).OneTimeSetUpAsync
- uid: Authentica.Service.Identity.Tests.IntegrationTests.TestFixture`1.OneTimeTearDown
  name: OneTimeTearDown()
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.TestFixture-1.html#Authentica_Service_Identity_Tests_IntegrationTests_TestFixture_1_OneTimeTearDown
  commentId: M:Authentica.Service.Identity.Tests.IntegrationTests.TestFixture`1.OneTimeTearDown
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.TestFixture<TProgram>.OneTimeTearDown()
  fullName.vb: Authentica.Service.Identity.Tests.IntegrationTests.TestFixture(Of TProgram).OneTimeTearDown()
  nameWithType: TestFixture<TProgram>.OneTimeTearDown()
  nameWithType.vb: TestFixture(Of TProgram).OneTimeTearDown()
- uid: Authentica.Service.Identity.Tests.IntegrationTests.TestFixture`1.OneTimeTearDown*
  name: OneTimeTearDown
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.TestFixture-1.html#Authentica_Service_Identity_Tests_IntegrationTests_TestFixture_1_OneTimeTearDown_
  commentId: Overload:Authentica.Service.Identity.Tests.IntegrationTests.TestFixture`1.OneTimeTearDown
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.TestFixture<TProgram>.OneTimeTearDown
  fullName.vb: Authentica.Service.Identity.Tests.IntegrationTests.TestFixture(Of TProgram).OneTimeTearDown
  nameWithType: TestFixture<TProgram>.OneTimeTearDown
  nameWithType.vb: TestFixture(Of TProgram).OneTimeTearDown
- uid: Authentica.Service.Identity.Tests.IntegrationTests.TestFixture`1.WebApplicationFactory
  name: WebApplicationFactory
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.TestFixture-1.html#Authentica_Service_Identity_Tests_IntegrationTests_TestFixture_1_WebApplicationFactory
  commentId: P:Authentica.Service.Identity.Tests.IntegrationTests.TestFixture`1.WebApplicationFactory
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.TestFixture<TProgram>.WebApplicationFactory
  fullName.vb: Authentica.Service.Identity.Tests.IntegrationTests.TestFixture(Of TProgram).WebApplicationFactory
  nameWithType: TestFixture<TProgram>.WebApplicationFactory
  nameWithType.vb: TestFixture(Of TProgram).WebApplicationFactory
- uid: Authentica.Service.Identity.Tests.IntegrationTests.TestFixture`1.WebApplicationFactory*
  name: WebApplicationFactory
  href: api/Authentica.Service.Identity.Tests.IntegrationTests.TestFixture-1.html#Authentica_Service_Identity_Tests_IntegrationTests_TestFixture_1_WebApplicationFactory_
  commentId: Overload:Authentica.Service.Identity.Tests.IntegrationTests.TestFixture`1.WebApplicationFactory
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.IntegrationTests.TestFixture<TProgram>.WebApplicationFactory
  fullName.vb: Authentica.Service.Identity.Tests.IntegrationTests.TestFixture(Of TProgram).WebApplicationFactory
  nameWithType: TestFixture<TProgram>.WebApplicationFactory
  nameWithType.vb: TestFixture(Of TProgram).WebApplicationFactory
- uid: Authentica.Service.Identity.Tests.Mocks
  name: Authentica.Service.Identity.Tests.Mocks
  href: api/Authentica.Service.Identity.Tests.Mocks.html
  commentId: N:Authentica.Service.Identity.Tests.Mocks
  fullName: Authentica.Service.Identity.Tests.Mocks
  nameWithType: Authentica.Service.Identity.Tests.Mocks
- uid: Authentica.Service.Identity.Tests.Mocks.ApplicationReadStoreMock
  name: ApplicationReadStoreMock
  href: api/Authentica.Service.Identity.Tests.Mocks.ApplicationReadStoreMock.html
  commentId: T:Authentica.Service.Identity.Tests.Mocks.ApplicationReadStoreMock
  fullName: Authentica.Service.Identity.Tests.Mocks.ApplicationReadStoreMock
  nameWithType: ApplicationReadStoreMock
- uid: Authentica.Service.Identity.Tests.Mocks.ApplicationReadStoreMock.Mock
  name: Mock()
  href: api/Authentica.Service.Identity.Tests.Mocks.ApplicationReadStoreMock.html#Authentica_Service_Identity_Tests_Mocks_ApplicationReadStoreMock_Mock
  commentId: M:Authentica.Service.Identity.Tests.Mocks.ApplicationReadStoreMock.Mock
  fullName: Authentica.Service.Identity.Tests.Mocks.ApplicationReadStoreMock.Mock()
  nameWithType: ApplicationReadStoreMock.Mock()
- uid: Authentica.Service.Identity.Tests.Mocks.ApplicationReadStoreMock.Mock*
  name: Mock
  href: api/Authentica.Service.Identity.Tests.Mocks.ApplicationReadStoreMock.html#Authentica_Service_Identity_Tests_Mocks_ApplicationReadStoreMock_Mock_
  commentId: Overload:Authentica.Service.Identity.Tests.Mocks.ApplicationReadStoreMock.Mock
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.Mocks.ApplicationReadStoreMock.Mock
  nameWithType: ApplicationReadStoreMock.Mock
- uid: Authentica.Service.Identity.Tests.Mocks.ApplicationWriteStoreMock
  name: ApplicationWriteStoreMock
  href: api/Authentica.Service.Identity.Tests.Mocks.ApplicationWriteStoreMock.html
  commentId: T:Authentica.Service.Identity.Tests.Mocks.ApplicationWriteStoreMock
  fullName: Authentica.Service.Identity.Tests.Mocks.ApplicationWriteStoreMock
  nameWithType: ApplicationWriteStoreMock
- uid: Authentica.Service.Identity.Tests.Mocks.ApplicationWriteStoreMock.Mock
  name: Mock()
  href: api/Authentica.Service.Identity.Tests.Mocks.ApplicationWriteStoreMock.html#Authentica_Service_Identity_Tests_Mocks_ApplicationWriteStoreMock_Mock
  commentId: M:Authentica.Service.Identity.Tests.Mocks.ApplicationWriteStoreMock.Mock
  fullName: Authentica.Service.Identity.Tests.Mocks.ApplicationWriteStoreMock.Mock()
  nameWithType: ApplicationWriteStoreMock.Mock()
- uid: Authentica.Service.Identity.Tests.Mocks.ApplicationWriteStoreMock.Mock*
  name: Mock
  href: api/Authentica.Service.Identity.Tests.Mocks.ApplicationWriteStoreMock.html#Authentica_Service_Identity_Tests_Mocks_ApplicationWriteStoreMock_Mock_
  commentId: Overload:Authentica.Service.Identity.Tests.Mocks.ApplicationWriteStoreMock.Mock
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.Mocks.ApplicationWriteStoreMock.Mock
  nameWithType: ApplicationWriteStoreMock.Mock
- uid: Authentica.Service.Identity.Tests.Mocks.BusMock
  name: BusMock
  href: api/Authentica.Service.Identity.Tests.Mocks.BusMock.html
  commentId: T:Authentica.Service.Identity.Tests.Mocks.BusMock
  fullName: Authentica.Service.Identity.Tests.Mocks.BusMock
  nameWithType: BusMock
- uid: Authentica.Service.Identity.Tests.Mocks.BusMock.Mock
  name: Mock()
  href: api/Authentica.Service.Identity.Tests.Mocks.BusMock.html#Authentica_Service_Identity_Tests_Mocks_BusMock_Mock
  commentId: M:Authentica.Service.Identity.Tests.Mocks.BusMock.Mock
  fullName: Authentica.Service.Identity.Tests.Mocks.BusMock.Mock()
  nameWithType: BusMock.Mock()
- uid: Authentica.Service.Identity.Tests.Mocks.BusMock.Mock*
  name: Mock
  href: api/Authentica.Service.Identity.Tests.Mocks.BusMock.html#Authentica_Service_Identity_Tests_Mocks_BusMock_Mock_
  commentId: Overload:Authentica.Service.Identity.Tests.Mocks.BusMock.Mock
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.Mocks.BusMock.Mock
  nameWithType: BusMock.Mock
- uid: Authentica.Service.Identity.Tests.Mocks.ClaimsPrincipalMock
  name: ClaimsPrincipalMock
  href: api/Authentica.Service.Identity.Tests.Mocks.ClaimsPrincipalMock.html
  commentId: T:Authentica.Service.Identity.Tests.Mocks.ClaimsPrincipalMock
  fullName: Authentica.Service.Identity.Tests.Mocks.ClaimsPrincipalMock
  nameWithType: ClaimsPrincipalMock
- uid: Authentica.Service.Identity.Tests.Mocks.ClaimsPrincipalMock.Mock
  name: Mock()
  href: api/Authentica.Service.Identity.Tests.Mocks.ClaimsPrincipalMock.html#Authentica_Service_Identity_Tests_Mocks_ClaimsPrincipalMock_Mock
  commentId: M:Authentica.Service.Identity.Tests.Mocks.ClaimsPrincipalMock.Mock
  fullName: Authentica.Service.Identity.Tests.Mocks.ClaimsPrincipalMock.Mock()
  nameWithType: ClaimsPrincipalMock.Mock()
- uid: Authentica.Service.Identity.Tests.Mocks.ClaimsPrincipalMock.Mock*
  name: Mock
  href: api/Authentica.Service.Identity.Tests.Mocks.ClaimsPrincipalMock.html#Authentica_Service_Identity_Tests_Mocks_ClaimsPrincipalMock_Mock_
  commentId: Overload:Authentica.Service.Identity.Tests.Mocks.ClaimsPrincipalMock.Mock
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.Mocks.ClaimsPrincipalMock.Mock
  nameWithType: ClaimsPrincipalMock.Mock
- uid: Authentica.Service.Identity.Tests.Mocks.DbContextMock
  name: DbContextMock
  href: api/Authentica.Service.Identity.Tests.Mocks.DbContextMock.html
  commentId: T:Authentica.Service.Identity.Tests.Mocks.DbContextMock
  fullName: Authentica.Service.Identity.Tests.Mocks.DbContextMock
  nameWithType: DbContextMock
- uid: Authentica.Service.Identity.Tests.Mocks.DbContextMock.Mock
  name: Mock()
  href: api/Authentica.Service.Identity.Tests.Mocks.DbContextMock.html#Authentica_Service_Identity_Tests_Mocks_DbContextMock_Mock
  commentId: M:Authentica.Service.Identity.Tests.Mocks.DbContextMock.Mock
  fullName: Authentica.Service.Identity.Tests.Mocks.DbContextMock.Mock()
  nameWithType: DbContextMock.Mock()
- uid: Authentica.Service.Identity.Tests.Mocks.DbContextMock.Mock*
  name: Mock
  href: api/Authentica.Service.Identity.Tests.Mocks.DbContextMock.html#Authentica_Service_Identity_Tests_Mocks_DbContextMock_Mock_
  commentId: Overload:Authentica.Service.Identity.Tests.Mocks.DbContextMock.Mock
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.Mocks.DbContextMock.Mock
  nameWithType: DbContextMock.Mock
- uid: Authentica.Service.Identity.Tests.Mocks.DbSetMock`1
  name: DbSetMock<T>
  href: api/Authentica.Service.Identity.Tests.Mocks.DbSetMock-1.html
  commentId: T:Authentica.Service.Identity.Tests.Mocks.DbSetMock`1
  name.vb: DbSetMock(Of T)
  fullName: Authentica.Service.Identity.Tests.Mocks.DbSetMock<T>
  fullName.vb: Authentica.Service.Identity.Tests.Mocks.DbSetMock(Of T)
  nameWithType: DbSetMock<T>
  nameWithType.vb: DbSetMock(Of T)
- uid: Authentica.Service.Identity.Tests.Mocks.DbSetMock`1.Mock
  name: Mock()
  href: api/Authentica.Service.Identity.Tests.Mocks.DbSetMock-1.html#Authentica_Service_Identity_Tests_Mocks_DbSetMock_1_Mock
  commentId: M:Authentica.Service.Identity.Tests.Mocks.DbSetMock`1.Mock
  fullName: Authentica.Service.Identity.Tests.Mocks.DbSetMock<T>.Mock()
  fullName.vb: Authentica.Service.Identity.Tests.Mocks.DbSetMock(Of T).Mock()
  nameWithType: DbSetMock<T>.Mock()
  nameWithType.vb: DbSetMock(Of T).Mock()
- uid: Authentica.Service.Identity.Tests.Mocks.DbSetMock`1.Mock*
  name: Mock
  href: api/Authentica.Service.Identity.Tests.Mocks.DbSetMock-1.html#Authentica_Service_Identity_Tests_Mocks_DbSetMock_1_Mock_
  commentId: Overload:Authentica.Service.Identity.Tests.Mocks.DbSetMock`1.Mock
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.Mocks.DbSetMock<T>.Mock
  fullName.vb: Authentica.Service.Identity.Tests.Mocks.DbSetMock(Of T).Mock
  nameWithType: DbSetMock<T>.Mock
  nameWithType.vb: DbSetMock(Of T).Mock
- uid: Authentica.Service.Identity.Tests.Mocks.EmailPublisherMock
  name: EmailPublisherMock
  href: api/Authentica.Service.Identity.Tests.Mocks.EmailPublisherMock.html
  commentId: T:Authentica.Service.Identity.Tests.Mocks.EmailPublisherMock
  fullName: Authentica.Service.Identity.Tests.Mocks.EmailPublisherMock
  nameWithType: EmailPublisherMock
- uid: Authentica.Service.Identity.Tests.Mocks.EmailPublisherMock.Mock
  name: Mock()
  href: api/Authentica.Service.Identity.Tests.Mocks.EmailPublisherMock.html#Authentica_Service_Identity_Tests_Mocks_EmailPublisherMock_Mock
  commentId: M:Authentica.Service.Identity.Tests.Mocks.EmailPublisherMock.Mock
  fullName: Authentica.Service.Identity.Tests.Mocks.EmailPublisherMock.Mock()
  nameWithType: EmailPublisherMock.Mock()
- uid: Authentica.Service.Identity.Tests.Mocks.EmailPublisherMock.Mock*
  name: Mock
  href: api/Authentica.Service.Identity.Tests.Mocks.EmailPublisherMock.html#Authentica_Service_Identity_Tests_Mocks_EmailPublisherMock_Mock_
  commentId: Overload:Authentica.Service.Identity.Tests.Mocks.EmailPublisherMock.Mock
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.Mocks.EmailPublisherMock.Mock
  nameWithType: EmailPublisherMock.Mock
- uid: Authentica.Service.Identity.Tests.Mocks.FeatureManagerMock
  name: FeatureManagerMock
  href: api/Authentica.Service.Identity.Tests.Mocks.FeatureManagerMock.html
  commentId: T:Authentica.Service.Identity.Tests.Mocks.FeatureManagerMock
  fullName: Authentica.Service.Identity.Tests.Mocks.FeatureManagerMock
  nameWithType: FeatureManagerMock
- uid: Authentica.Service.Identity.Tests.Mocks.FeatureManagerMock.Mock
  name: Mock()
  href: api/Authentica.Service.Identity.Tests.Mocks.FeatureManagerMock.html#Authentica_Service_Identity_Tests_Mocks_FeatureManagerMock_Mock
  commentId: M:Authentica.Service.Identity.Tests.Mocks.FeatureManagerMock.Mock
  fullName: Authentica.Service.Identity.Tests.Mocks.FeatureManagerMock.Mock()
  nameWithType: FeatureManagerMock.Mock()
- uid: Authentica.Service.Identity.Tests.Mocks.FeatureManagerMock.Mock*
  name: Mock
  href: api/Authentica.Service.Identity.Tests.Mocks.FeatureManagerMock.html#Authentica_Service_Identity_Tests_Mocks_FeatureManagerMock_Mock_
  commentId: Overload:Authentica.Service.Identity.Tests.Mocks.FeatureManagerMock.Mock
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.Mocks.FeatureManagerMock.Mock
  nameWithType: FeatureManagerMock.Mock
- uid: Authentica.Service.Identity.Tests.Mocks.HttpContextMock
  name: HttpContextMock
  href: api/Authentica.Service.Identity.Tests.Mocks.HttpContextMock.html
  commentId: T:Authentica.Service.Identity.Tests.Mocks.HttpContextMock
  fullName: Authentica.Service.Identity.Tests.Mocks.HttpContextMock
  nameWithType: HttpContextMock
- uid: Authentica.Service.Identity.Tests.Mocks.HttpContextMock.Mock
  name: Mock()
  href: api/Authentica.Service.Identity.Tests.Mocks.HttpContextMock.html#Authentica_Service_Identity_Tests_Mocks_HttpContextMock_Mock
  commentId: M:Authentica.Service.Identity.Tests.Mocks.HttpContextMock.Mock
  fullName: Authentica.Service.Identity.Tests.Mocks.HttpContextMock.Mock()
  nameWithType: HttpContextMock.Mock()
- uid: Authentica.Service.Identity.Tests.Mocks.HttpContextMock.Mock*
  name: Mock
  href: api/Authentica.Service.Identity.Tests.Mocks.HttpContextMock.html#Authentica_Service_Identity_Tests_Mocks_HttpContextMock_Mock_
  commentId: Overload:Authentica.Service.Identity.Tests.Mocks.HttpContextMock.Mock
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.Mocks.HttpContextMock.Mock
  nameWithType: HttpContextMock.Mock
- uid: Authentica.Service.Identity.Tests.Mocks.IHttpContextAccessorMock
  name: IHttpContextAccessorMock
  href: api/Authentica.Service.Identity.Tests.Mocks.IHttpContextAccessorMock.html
  commentId: T:Authentica.Service.Identity.Tests.Mocks.IHttpContextAccessorMock
  fullName: Authentica.Service.Identity.Tests.Mocks.IHttpContextAccessorMock
  nameWithType: IHttpContextAccessorMock
- uid: Authentica.Service.Identity.Tests.Mocks.IHttpContextAccessorMock.Mock
  name: Mock()
  href: api/Authentica.Service.Identity.Tests.Mocks.IHttpContextAccessorMock.html#Authentica_Service_Identity_Tests_Mocks_IHttpContextAccessorMock_Mock
  commentId: M:Authentica.Service.Identity.Tests.Mocks.IHttpContextAccessorMock.Mock
  fullName: Authentica.Service.Identity.Tests.Mocks.IHttpContextAccessorMock.Mock()
  nameWithType: IHttpContextAccessorMock.Mock()
- uid: Authentica.Service.Identity.Tests.Mocks.IHttpContextAccessorMock.Mock*
  name: Mock
  href: api/Authentica.Service.Identity.Tests.Mocks.IHttpContextAccessorMock.html#Authentica_Service_Identity_Tests_Mocks_IHttpContextAccessorMock_Mock_
  commentId: Overload:Authentica.Service.Identity.Tests.Mocks.IHttpContextAccessorMock.Mock
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.Mocks.IHttpContextAccessorMock.Mock
  nameWithType: IHttpContextAccessorMock.Mock
- uid: Authentica.Service.Identity.Tests.Mocks.IMockBase`1
  name: IMockBase<T>
  href: api/Authentica.Service.Identity.Tests.Mocks.IMockBase-1.html
  commentId: T:Authentica.Service.Identity.Tests.Mocks.IMockBase`1
  name.vb: IMockBase(Of T)
  fullName: Authentica.Service.Identity.Tests.Mocks.IMockBase<T>
  fullName.vb: Authentica.Service.Identity.Tests.Mocks.IMockBase(Of T)
  nameWithType: IMockBase<T>
  nameWithType.vb: IMockBase(Of T)
- uid: Authentica.Service.Identity.Tests.Mocks.IMockBase`1.Mock
  name: Mock()
  href: api/Authentica.Service.Identity.Tests.Mocks.IMockBase-1.html#Authentica_Service_Identity_Tests_Mocks_IMockBase_1_Mock
  commentId: M:Authentica.Service.Identity.Tests.Mocks.IMockBase`1.Mock
  fullName: Authentica.Service.Identity.Tests.Mocks.IMockBase<T>.Mock()
  fullName.vb: Authentica.Service.Identity.Tests.Mocks.IMockBase(Of T).Mock()
  nameWithType: IMockBase<T>.Mock()
  nameWithType.vb: IMockBase(Of T).Mock()
- uid: Authentica.Service.Identity.Tests.Mocks.IMockBase`1.Mock*
  name: Mock
  href: api/Authentica.Service.Identity.Tests.Mocks.IMockBase-1.html#Authentica_Service_Identity_Tests_Mocks_IMockBase_1_Mock_
  commentId: Overload:Authentica.Service.Identity.Tests.Mocks.IMockBase`1.Mock
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.Mocks.IMockBase<T>.Mock
  fullName.vb: Authentica.Service.Identity.Tests.Mocks.IMockBase(Of T).Mock
  nameWithType: IMockBase<T>.Mock
  nameWithType.vb: IMockBase(Of T).Mock
- uid: Authentica.Service.Identity.Tests.Mocks.JsonWebTokenProviderMock
  name: JsonWebTokenProviderMock
  href: api/Authentica.Service.Identity.Tests.Mocks.JsonWebTokenProviderMock.html
  commentId: T:Authentica.Service.Identity.Tests.Mocks.JsonWebTokenProviderMock
  fullName: Authentica.Service.Identity.Tests.Mocks.JsonWebTokenProviderMock
  nameWithType: JsonWebTokenProviderMock
- uid: Authentica.Service.Identity.Tests.Mocks.JsonWebTokenProviderMock.Mock
  name: Mock()
  href: api/Authentica.Service.Identity.Tests.Mocks.JsonWebTokenProviderMock.html#Authentica_Service_Identity_Tests_Mocks_JsonWebTokenProviderMock_Mock
  commentId: M:Authentica.Service.Identity.Tests.Mocks.JsonWebTokenProviderMock.Mock
  fullName: Authentica.Service.Identity.Tests.Mocks.JsonWebTokenProviderMock.Mock()
  nameWithType: JsonWebTokenProviderMock.Mock()
- uid: Authentica.Service.Identity.Tests.Mocks.JsonWebTokenProviderMock.Mock*
  name: Mock
  href: api/Authentica.Service.Identity.Tests.Mocks.JsonWebTokenProviderMock.html#Authentica_Service_Identity_Tests_Mocks_JsonWebTokenProviderMock_Mock_
  commentId: Overload:Authentica.Service.Identity.Tests.Mocks.JsonWebTokenProviderMock.Mock
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.Mocks.JsonWebTokenProviderMock.Mock
  nameWithType: JsonWebTokenProviderMock.Mock
- uid: Authentica.Service.Identity.Tests.Mocks.JwtSecurityTokenHandlerMock
  name: JwtSecurityTokenHandlerMock
  href: api/Authentica.Service.Identity.Tests.Mocks.JwtSecurityTokenHandlerMock.html
  commentId: T:Authentica.Service.Identity.Tests.Mocks.JwtSecurityTokenHandlerMock
  fullName: Authentica.Service.Identity.Tests.Mocks.JwtSecurityTokenHandlerMock
  nameWithType: JwtSecurityTokenHandlerMock
- uid: Authentica.Service.Identity.Tests.Mocks.JwtSecurityTokenHandlerMock.Mock
  name: Mock()
  href: api/Authentica.Service.Identity.Tests.Mocks.JwtSecurityTokenHandlerMock.html#Authentica_Service_Identity_Tests_Mocks_JwtSecurityTokenHandlerMock_Mock
  commentId: M:Authentica.Service.Identity.Tests.Mocks.JwtSecurityTokenHandlerMock.Mock
  fullName: Authentica.Service.Identity.Tests.Mocks.JwtSecurityTokenHandlerMock.Mock()
  nameWithType: JwtSecurityTokenHandlerMock.Mock()
- uid: Authentica.Service.Identity.Tests.Mocks.JwtSecurityTokenHandlerMock.Mock*
  name: Mock
  href: api/Authentica.Service.Identity.Tests.Mocks.JwtSecurityTokenHandlerMock.html#Authentica_Service_Identity_Tests_Mocks_JwtSecurityTokenHandlerMock_Mock_
  commentId: Overload:Authentica.Service.Identity.Tests.Mocks.JwtSecurityTokenHandlerMock.Mock
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.Mocks.JwtSecurityTokenHandlerMock.Mock
  nameWithType: JwtSecurityTokenHandlerMock.Mock
- uid: Authentica.Service.Identity.Tests.Mocks.LoggerMock`1
  name: LoggerMock<T>
  href: api/Authentica.Service.Identity.Tests.Mocks.LoggerMock-1.html
  commentId: T:Authentica.Service.Identity.Tests.Mocks.LoggerMock`1
  name.vb: LoggerMock(Of T)
  fullName: Authentica.Service.Identity.Tests.Mocks.LoggerMock<T>
  fullName.vb: Authentica.Service.Identity.Tests.Mocks.LoggerMock(Of T)
  nameWithType: LoggerMock<T>
  nameWithType.vb: LoggerMock(Of T)
- uid: Authentica.Service.Identity.Tests.Mocks.LoggerMock`1.Mock
  name: Mock()
  href: api/Authentica.Service.Identity.Tests.Mocks.LoggerMock-1.html#Authentica_Service_Identity_Tests_Mocks_LoggerMock_1_Mock
  commentId: M:Authentica.Service.Identity.Tests.Mocks.LoggerMock`1.Mock
  fullName: Authentica.Service.Identity.Tests.Mocks.LoggerMock<T>.Mock()
  fullName.vb: Authentica.Service.Identity.Tests.Mocks.LoggerMock(Of T).Mock()
  nameWithType: LoggerMock<T>.Mock()
  nameWithType.vb: LoggerMock(Of T).Mock()
- uid: Authentica.Service.Identity.Tests.Mocks.LoggerMock`1.Mock*
  name: Mock
  href: api/Authentica.Service.Identity.Tests.Mocks.LoggerMock-1.html#Authentica_Service_Identity_Tests_Mocks_LoggerMock_1_Mock_
  commentId: Overload:Authentica.Service.Identity.Tests.Mocks.LoggerMock`1.Mock
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.Mocks.LoggerMock<T>.Mock
  fullName.vb: Authentica.Service.Identity.Tests.Mocks.LoggerMock(Of T).Mock
  nameWithType: LoggerMock<T>.Mock
  nameWithType.vb: LoggerMock(Of T).Mock
- uid: Authentica.Service.Identity.Tests.Mocks.RoleManagerMock
  name: RoleManagerMock
  href: api/Authentica.Service.Identity.Tests.Mocks.RoleManagerMock.html
  commentId: T:Authentica.Service.Identity.Tests.Mocks.RoleManagerMock
  fullName: Authentica.Service.Identity.Tests.Mocks.RoleManagerMock
  nameWithType: RoleManagerMock
- uid: Authentica.Service.Identity.Tests.Mocks.RoleManagerMock.Mock
  name: Mock()
  href: api/Authentica.Service.Identity.Tests.Mocks.RoleManagerMock.html#Authentica_Service_Identity_Tests_Mocks_RoleManagerMock_Mock
  commentId: M:Authentica.Service.Identity.Tests.Mocks.RoleManagerMock.Mock
  fullName: Authentica.Service.Identity.Tests.Mocks.RoleManagerMock.Mock()
  nameWithType: RoleManagerMock.Mock()
- uid: Authentica.Service.Identity.Tests.Mocks.RoleManagerMock.Mock*
  name: Mock
  href: api/Authentica.Service.Identity.Tests.Mocks.RoleManagerMock.html#Authentica_Service_Identity_Tests_Mocks_RoleManagerMock_Mock_
  commentId: Overload:Authentica.Service.Identity.Tests.Mocks.RoleManagerMock.Mock
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.Mocks.RoleManagerMock.Mock
  nameWithType: RoleManagerMock.Mock
- uid: Authentica.Service.Identity.Tests.Mocks.ServiceProviderMock
  name: ServiceProviderMock
  href: api/Authentica.Service.Identity.Tests.Mocks.ServiceProviderMock.html
  commentId: T:Authentica.Service.Identity.Tests.Mocks.ServiceProviderMock
  fullName: Authentica.Service.Identity.Tests.Mocks.ServiceProviderMock
  nameWithType: ServiceProviderMock
- uid: Authentica.Service.Identity.Tests.Mocks.ServiceProviderMock.Mock
  name: Mock()
  href: api/Authentica.Service.Identity.Tests.Mocks.ServiceProviderMock.html#Authentica_Service_Identity_Tests_Mocks_ServiceProviderMock_Mock
  commentId: M:Authentica.Service.Identity.Tests.Mocks.ServiceProviderMock.Mock
  fullName: Authentica.Service.Identity.Tests.Mocks.ServiceProviderMock.Mock()
  nameWithType: ServiceProviderMock.Mock()
- uid: Authentica.Service.Identity.Tests.Mocks.ServiceProviderMock.Mock*
  name: Mock
  href: api/Authentica.Service.Identity.Tests.Mocks.ServiceProviderMock.html#Authentica_Service_Identity_Tests_Mocks_ServiceProviderMock_Mock_
  commentId: Overload:Authentica.Service.Identity.Tests.Mocks.ServiceProviderMock.Mock
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.Mocks.ServiceProviderMock.Mock
  nameWithType: ServiceProviderMock.Mock
- uid: Authentica.Service.Identity.Tests.Mocks.SignInManagerMock`1
  name: SignInManagerMock<TUser>
  href: api/Authentica.Service.Identity.Tests.Mocks.SignInManagerMock-1.html
  commentId: T:Authentica.Service.Identity.Tests.Mocks.SignInManagerMock`1
  name.vb: SignInManagerMock(Of TUser)
  fullName: Authentica.Service.Identity.Tests.Mocks.SignInManagerMock<TUser>
  fullName.vb: Authentica.Service.Identity.Tests.Mocks.SignInManagerMock(Of TUser)
  nameWithType: SignInManagerMock<TUser>
  nameWithType.vb: SignInManagerMock(Of TUser)
- uid: Authentica.Service.Identity.Tests.Mocks.SignInManagerMock`1.Mock
  name: Mock()
  href: api/Authentica.Service.Identity.Tests.Mocks.SignInManagerMock-1.html#Authentica_Service_Identity_Tests_Mocks_SignInManagerMock_1_Mock
  commentId: M:Authentica.Service.Identity.Tests.Mocks.SignInManagerMock`1.Mock
  fullName: Authentica.Service.Identity.Tests.Mocks.SignInManagerMock<TUser>.Mock()
  fullName.vb: Authentica.Service.Identity.Tests.Mocks.SignInManagerMock(Of TUser).Mock()
  nameWithType: SignInManagerMock<TUser>.Mock()
  nameWithType.vb: SignInManagerMock(Of TUser).Mock()
- uid: Authentica.Service.Identity.Tests.Mocks.SignInManagerMock`1.Mock*
  name: Mock
  href: api/Authentica.Service.Identity.Tests.Mocks.SignInManagerMock-1.html#Authentica_Service_Identity_Tests_Mocks_SignInManagerMock_1_Mock_
  commentId: Overload:Authentica.Service.Identity.Tests.Mocks.SignInManagerMock`1.Mock
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.Mocks.SignInManagerMock<TUser>.Mock
  fullName.vb: Authentica.Service.Identity.Tests.Mocks.SignInManagerMock(Of TUser).Mock
  nameWithType: SignInManagerMock<TUser>.Mock
  nameWithType.vb: SignInManagerMock(Of TUser).Mock
- uid: Authentica.Service.Identity.Tests.Mocks.TimerMock
  name: TimerMock
  href: api/Authentica.Service.Identity.Tests.Mocks.TimerMock.html
  commentId: T:Authentica.Service.Identity.Tests.Mocks.TimerMock
  fullName: Authentica.Service.Identity.Tests.Mocks.TimerMock
  nameWithType: TimerMock
- uid: Authentica.Service.Identity.Tests.Mocks.TimerMock.Mock
  name: Mock()
  href: api/Authentica.Service.Identity.Tests.Mocks.TimerMock.html#Authentica_Service_Identity_Tests_Mocks_TimerMock_Mock
  commentId: M:Authentica.Service.Identity.Tests.Mocks.TimerMock.Mock
  fullName: Authentica.Service.Identity.Tests.Mocks.TimerMock.Mock()
  nameWithType: TimerMock.Mock()
- uid: Authentica.Service.Identity.Tests.Mocks.TimerMock.Mock*
  name: Mock
  href: api/Authentica.Service.Identity.Tests.Mocks.TimerMock.html#Authentica_Service_Identity_Tests_Mocks_TimerMock_Mock_
  commentId: Overload:Authentica.Service.Identity.Tests.Mocks.TimerMock.Mock
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.Mocks.TimerMock.Mock
  nameWithType: TimerMock.Mock
- uid: Authentica.Service.Identity.Tests.Mocks.UserManagerMock`1
  name: UserManagerMock<TUser>
  href: api/Authentica.Service.Identity.Tests.Mocks.UserManagerMock-1.html
  commentId: T:Authentica.Service.Identity.Tests.Mocks.UserManagerMock`1
  name.vb: UserManagerMock(Of TUser)
  fullName: Authentica.Service.Identity.Tests.Mocks.UserManagerMock<TUser>
  fullName.vb: Authentica.Service.Identity.Tests.Mocks.UserManagerMock(Of TUser)
  nameWithType: UserManagerMock<TUser>
  nameWithType.vb: UserManagerMock(Of TUser)
- uid: Authentica.Service.Identity.Tests.Mocks.UserManagerMock`1.Mock
  name: Mock()
  href: api/Authentica.Service.Identity.Tests.Mocks.UserManagerMock-1.html#Authentica_Service_Identity_Tests_Mocks_UserManagerMock_1_Mock
  commentId: M:Authentica.Service.Identity.Tests.Mocks.UserManagerMock`1.Mock
  fullName: Authentica.Service.Identity.Tests.Mocks.UserManagerMock<TUser>.Mock()
  fullName.vb: Authentica.Service.Identity.Tests.Mocks.UserManagerMock(Of TUser).Mock()
  nameWithType: UserManagerMock<TUser>.Mock()
  nameWithType.vb: UserManagerMock(Of TUser).Mock()
- uid: Authentica.Service.Identity.Tests.Mocks.UserManagerMock`1.Mock*
  name: Mock
  href: api/Authentica.Service.Identity.Tests.Mocks.UserManagerMock-1.html#Authentica_Service_Identity_Tests_Mocks_UserManagerMock_1_Mock_
  commentId: Overload:Authentica.Service.Identity.Tests.Mocks.UserManagerMock`1.Mock
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.Mocks.UserManagerMock<TUser>.Mock
  fullName.vb: Authentica.Service.Identity.Tests.Mocks.UserManagerMock(Of TUser).Mock
  nameWithType: UserManagerMock<TUser>.Mock
  nameWithType.vb: UserManagerMock(Of TUser).Mock
- uid: Authentica.Service.Identity.Tests.Mocks.UserReadStoreMock
  name: UserReadStoreMock
  href: api/Authentica.Service.Identity.Tests.Mocks.UserReadStoreMock.html
  commentId: T:Authentica.Service.Identity.Tests.Mocks.UserReadStoreMock
  fullName: Authentica.Service.Identity.Tests.Mocks.UserReadStoreMock
  nameWithType: UserReadStoreMock
- uid: Authentica.Service.Identity.Tests.Mocks.UserReadStoreMock.Mock
  name: Mock()
  href: api/Authentica.Service.Identity.Tests.Mocks.UserReadStoreMock.html#Authentica_Service_Identity_Tests_Mocks_UserReadStoreMock_Mock
  commentId: M:Authentica.Service.Identity.Tests.Mocks.UserReadStoreMock.Mock
  fullName: Authentica.Service.Identity.Tests.Mocks.UserReadStoreMock.Mock()
  nameWithType: UserReadStoreMock.Mock()
- uid: Authentica.Service.Identity.Tests.Mocks.UserReadStoreMock.Mock*
  name: Mock
  href: api/Authentica.Service.Identity.Tests.Mocks.UserReadStoreMock.html#Authentica_Service_Identity_Tests_Mocks_UserReadStoreMock_Mock_
  commentId: Overload:Authentica.Service.Identity.Tests.Mocks.UserReadStoreMock.Mock
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.Mocks.UserReadStoreMock.Mock
  nameWithType: UserReadStoreMock.Mock
- uid: Authentica.Service.Identity.Tests.Mocks.UserWriteStoreMock
  name: UserWriteStoreMock
  href: api/Authentica.Service.Identity.Tests.Mocks.UserWriteStoreMock.html
  commentId: T:Authentica.Service.Identity.Tests.Mocks.UserWriteStoreMock
  fullName: Authentica.Service.Identity.Tests.Mocks.UserWriteStoreMock
  nameWithType: UserWriteStoreMock
- uid: Authentica.Service.Identity.Tests.Mocks.UserWriteStoreMock.Mock
  name: Mock()
  href: api/Authentica.Service.Identity.Tests.Mocks.UserWriteStoreMock.html#Authentica_Service_Identity_Tests_Mocks_UserWriteStoreMock_Mock
  commentId: M:Authentica.Service.Identity.Tests.Mocks.UserWriteStoreMock.Mock
  fullName: Authentica.Service.Identity.Tests.Mocks.UserWriteStoreMock.Mock()
  nameWithType: UserWriteStoreMock.Mock()
- uid: Authentica.Service.Identity.Tests.Mocks.UserWriteStoreMock.Mock*
  name: Mock
  href: api/Authentica.Service.Identity.Tests.Mocks.UserWriteStoreMock.html#Authentica_Service_Identity_Tests_Mocks_UserWriteStoreMock_Mock_
  commentId: Overload:Authentica.Service.Identity.Tests.Mocks.UserWriteStoreMock.Mock
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.Mocks.UserWriteStoreMock.Mock
  nameWithType: UserWriteStoreMock.Mock
- uid: Authentica.Service.Identity.Tests.UnitTests
  name: Authentica.Service.Identity.Tests.UnitTests
  href: api/Authentica.Service.Identity.Tests.UnitTests.html
  commentId: N:Authentica.Service.Identity.Tests.UnitTests
  fullName: Authentica.Service.Identity.Tests.UnitTests
  nameWithType: Authentica.Service.Identity.Tests.UnitTests
- uid: Authentica.Service.Identity.Tests.UnitTests.ApplicationWriteStoreTests
  name: ApplicationWriteStoreTests
  href: api/Authentica.Service.Identity.Tests.UnitTests.ApplicationWriteStoreTests.html
  commentId: T:Authentica.Service.Identity.Tests.UnitTests.ApplicationWriteStoreTests
  fullName: Authentica.Service.Identity.Tests.UnitTests.ApplicationWriteStoreTests
  nameWithType: ApplicationWriteStoreTests
- uid: Authentica.Service.Identity.Tests.UnitTests.ApplicationWriteStoreTests.CreateClientApplicationAsync_Should_ReturnFailedResult_WhenExceptionThrown
  name: CreateClientApplicationAsync_Should_ReturnFailedResult_WhenExceptionThrown()
  href: api/Authentica.Service.Identity.Tests.UnitTests.ApplicationWriteStoreTests.html#Authentica_Service_Identity_Tests_UnitTests_ApplicationWriteStoreTests_CreateClientApplicationAsync_Should_ReturnFailedResult_WhenExceptionThrown
  commentId: M:Authentica.Service.Identity.Tests.UnitTests.ApplicationWriteStoreTests.CreateClientApplicationAsync_Should_ReturnFailedResult_WhenExceptionThrown
  fullName: Authentica.Service.Identity.Tests.UnitTests.ApplicationWriteStoreTests.CreateClientApplicationAsync_Should_ReturnFailedResult_WhenExceptionThrown()
  nameWithType: ApplicationWriteStoreTests.CreateClientApplicationAsync_Should_ReturnFailedResult_WhenExceptionThrown()
- uid: Authentica.Service.Identity.Tests.UnitTests.ApplicationWriteStoreTests.CreateClientApplicationAsync_Should_ReturnFailedResult_WhenExceptionThrown*
  name: CreateClientApplicationAsync_Should_ReturnFailedResult_WhenExceptionThrown
  href: api/Authentica.Service.Identity.Tests.UnitTests.ApplicationWriteStoreTests.html#Authentica_Service_Identity_Tests_UnitTests_ApplicationWriteStoreTests_CreateClientApplicationAsync_Should_ReturnFailedResult_WhenExceptionThrown_
  commentId: Overload:Authentica.Service.Identity.Tests.UnitTests.ApplicationWriteStoreTests.CreateClientApplicationAsync_Should_ReturnFailedResult_WhenExceptionThrown
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.UnitTests.ApplicationWriteStoreTests.CreateClientApplicationAsync_Should_ReturnFailedResult_WhenExceptionThrown
  nameWithType: ApplicationWriteStoreTests.CreateClientApplicationAsync_Should_ReturnFailedResult_WhenExceptionThrown
- uid: Authentica.Service.Identity.Tests.UnitTests.ApplicationWriteStoreTests.SetUp
  name: SetUp()
  href: api/Authentica.Service.Identity.Tests.UnitTests.ApplicationWriteStoreTests.html#Authentica_Service_Identity_Tests_UnitTests_ApplicationWriteStoreTests_SetUp
  commentId: M:Authentica.Service.Identity.Tests.UnitTests.ApplicationWriteStoreTests.SetUp
  fullName: Authentica.Service.Identity.Tests.UnitTests.ApplicationWriteStoreTests.SetUp()
  nameWithType: ApplicationWriteStoreTests.SetUp()
- uid: Authentica.Service.Identity.Tests.UnitTests.ApplicationWriteStoreTests.SetUp*
  name: SetUp
  href: api/Authentica.Service.Identity.Tests.UnitTests.ApplicationWriteStoreTests.html#Authentica_Service_Identity_Tests_UnitTests_ApplicationWriteStoreTests_SetUp_
  commentId: Overload:Authentica.Service.Identity.Tests.UnitTests.ApplicationWriteStoreTests.SetUp
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.UnitTests.ApplicationWriteStoreTests.SetUp
  nameWithType: ApplicationWriteStoreTests.SetUp
- uid: Authentica.Service.Identity.Tests.UnitTests.ApplicationWriteStoreTests.SoftDeleteApplicationAsync_Should_ReturnFailedResult_When_ApplicationIsNull
  name: SoftDeleteApplicationAsync_Should_ReturnFailedResult_When_ApplicationIsNull()
  href: api/Authentica.Service.Identity.Tests.UnitTests.ApplicationWriteStoreTests.html#Authentica_Service_Identity_Tests_UnitTests_ApplicationWriteStoreTests_SoftDeleteApplicationAsync_Should_ReturnFailedResult_When_ApplicationIsNull
  commentId: M:Authentica.Service.Identity.Tests.UnitTests.ApplicationWriteStoreTests.SoftDeleteApplicationAsync_Should_ReturnFailedResult_When_ApplicationIsNull
  fullName: Authentica.Service.Identity.Tests.UnitTests.ApplicationWriteStoreTests.SoftDeleteApplicationAsync_Should_ReturnFailedResult_When_ApplicationIsNull()
  nameWithType: ApplicationWriteStoreTests.SoftDeleteApplicationAsync_Should_ReturnFailedResult_When_ApplicationIsNull()
- uid: Authentica.Service.Identity.Tests.UnitTests.ApplicationWriteStoreTests.SoftDeleteApplicationAsync_Should_ReturnFailedResult_When_ApplicationIsNull*
  name: SoftDeleteApplicationAsync_Should_ReturnFailedResult_When_ApplicationIsNull
  href: api/Authentica.Service.Identity.Tests.UnitTests.ApplicationWriteStoreTests.html#Authentica_Service_Identity_Tests_UnitTests_ApplicationWriteStoreTests_SoftDeleteApplicationAsync_Should_ReturnFailedResult_When_ApplicationIsNull_
  commentId: Overload:Authentica.Service.Identity.Tests.UnitTests.ApplicationWriteStoreTests.SoftDeleteApplicationAsync_Should_ReturnFailedResult_When_ApplicationIsNull
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.UnitTests.ApplicationWriteStoreTests.SoftDeleteApplicationAsync_Should_ReturnFailedResult_When_ApplicationIsNull
  nameWithType: ApplicationWriteStoreTests.SoftDeleteApplicationAsync_Should_ReturnFailedResult_When_ApplicationIsNull
- uid: Authentica.Service.Identity.Tests.UnitTests.ApplicationWriteStoreTests.SoftDeleteApplicationAsync_Should_ReturnFailedResult_When_ExceptionIsThrown
  name: SoftDeleteApplicationAsync_Should_ReturnFailedResult_When_ExceptionIsThrown()
  href: api/Authentica.Service.Identity.Tests.UnitTests.ApplicationWriteStoreTests.html#Authentica_Service_Identity_Tests_UnitTests_ApplicationWriteStoreTests_SoftDeleteApplicationAsync_Should_ReturnFailedResult_When_ExceptionIsThrown
  commentId: M:Authentica.Service.Identity.Tests.UnitTests.ApplicationWriteStoreTests.SoftDeleteApplicationAsync_Should_ReturnFailedResult_When_ExceptionIsThrown
  fullName: Authentica.Service.Identity.Tests.UnitTests.ApplicationWriteStoreTests.SoftDeleteApplicationAsync_Should_ReturnFailedResult_When_ExceptionIsThrown()
  nameWithType: ApplicationWriteStoreTests.SoftDeleteApplicationAsync_Should_ReturnFailedResult_When_ExceptionIsThrown()
- uid: Authentica.Service.Identity.Tests.UnitTests.ApplicationWriteStoreTests.SoftDeleteApplicationAsync_Should_ReturnFailedResult_When_ExceptionIsThrown*
  name: SoftDeleteApplicationAsync_Should_ReturnFailedResult_When_ExceptionIsThrown
  href: api/Authentica.Service.Identity.Tests.UnitTests.ApplicationWriteStoreTests.html#Authentica_Service_Identity_Tests_UnitTests_ApplicationWriteStoreTests_SoftDeleteApplicationAsync_Should_ReturnFailedResult_When_ExceptionIsThrown_
  commentId: Overload:Authentica.Service.Identity.Tests.UnitTests.ApplicationWriteStoreTests.SoftDeleteApplicationAsync_Should_ReturnFailedResult_When_ExceptionIsThrown
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.UnitTests.ApplicationWriteStoreTests.SoftDeleteApplicationAsync_Should_ReturnFailedResult_When_ExceptionIsThrown
  nameWithType: ApplicationWriteStoreTests.SoftDeleteApplicationAsync_Should_ReturnFailedResult_When_ExceptionIsThrown
- uid: Authentica.Service.Identity.Tests.UnitTests.ApplicationWriteStoreTests.SoftDeleteApplicationAsync_Should_ReturnFailedResult_When_UserIsNull
  name: SoftDeleteApplicationAsync_Should_ReturnFailedResult_When_UserIsNull()
  href: api/Authentica.Service.Identity.Tests.UnitTests.ApplicationWriteStoreTests.html#Authentica_Service_Identity_Tests_UnitTests_ApplicationWriteStoreTests_SoftDeleteApplicationAsync_Should_ReturnFailedResult_When_UserIsNull
  commentId: M:Authentica.Service.Identity.Tests.UnitTests.ApplicationWriteStoreTests.SoftDeleteApplicationAsync_Should_ReturnFailedResult_When_UserIsNull
  fullName: Authentica.Service.Identity.Tests.UnitTests.ApplicationWriteStoreTests.SoftDeleteApplicationAsync_Should_ReturnFailedResult_When_UserIsNull()
  nameWithType: ApplicationWriteStoreTests.SoftDeleteApplicationAsync_Should_ReturnFailedResult_When_UserIsNull()
- uid: Authentica.Service.Identity.Tests.UnitTests.ApplicationWriteStoreTests.SoftDeleteApplicationAsync_Should_ReturnFailedResult_When_UserIsNull*
  name: SoftDeleteApplicationAsync_Should_ReturnFailedResult_When_UserIsNull
  href: api/Authentica.Service.Identity.Tests.UnitTests.ApplicationWriteStoreTests.html#Authentica_Service_Identity_Tests_UnitTests_ApplicationWriteStoreTests_SoftDeleteApplicationAsync_Should_ReturnFailedResult_When_UserIsNull_
  commentId: Overload:Authentica.Service.Identity.Tests.UnitTests.ApplicationWriteStoreTests.SoftDeleteApplicationAsync_Should_ReturnFailedResult_When_UserIsNull
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.UnitTests.ApplicationWriteStoreTests.SoftDeleteApplicationAsync_Should_ReturnFailedResult_When_UserIsNull
  nameWithType: ApplicationWriteStoreTests.SoftDeleteApplicationAsync_Should_ReturnFailedResult_When_UserIsNull
- uid: Authentica.Service.Identity.Tests.UnitTests.ApplicationWriteStoreTests.SoftDeleteApplicationAsync_Should_ReturnSuccess_When_ApplicationIsDeleted
  name: SoftDeleteApplicationAsync_Should_ReturnSuccess_When_ApplicationIsDeleted()
  href: api/Authentica.Service.Identity.Tests.UnitTests.ApplicationWriteStoreTests.html#Authentica_Service_Identity_Tests_UnitTests_ApplicationWriteStoreTests_SoftDeleteApplicationAsync_Should_ReturnSuccess_When_ApplicationIsDeleted
  commentId: M:Authentica.Service.Identity.Tests.UnitTests.ApplicationWriteStoreTests.SoftDeleteApplicationAsync_Should_ReturnSuccess_When_ApplicationIsDeleted
  fullName: Authentica.Service.Identity.Tests.UnitTests.ApplicationWriteStoreTests.SoftDeleteApplicationAsync_Should_ReturnSuccess_When_ApplicationIsDeleted()
  nameWithType: ApplicationWriteStoreTests.SoftDeleteApplicationAsync_Should_ReturnSuccess_When_ApplicationIsDeleted()
- uid: Authentica.Service.Identity.Tests.UnitTests.ApplicationWriteStoreTests.SoftDeleteApplicationAsync_Should_ReturnSuccess_When_ApplicationIsDeleted*
  name: SoftDeleteApplicationAsync_Should_ReturnSuccess_When_ApplicationIsDeleted
  href: api/Authentica.Service.Identity.Tests.UnitTests.ApplicationWriteStoreTests.html#Authentica_Service_Identity_Tests_UnitTests_ApplicationWriteStoreTests_SoftDeleteApplicationAsync_Should_ReturnSuccess_When_ApplicationIsDeleted_
  commentId: Overload:Authentica.Service.Identity.Tests.UnitTests.ApplicationWriteStoreTests.SoftDeleteApplicationAsync_Should_ReturnSuccess_When_ApplicationIsDeleted
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.UnitTests.ApplicationWriteStoreTests.SoftDeleteApplicationAsync_Should_ReturnSuccess_When_ApplicationIsDeleted
  nameWithType: ApplicationWriteStoreTests.SoftDeleteApplicationAsync_Should_ReturnSuccess_When_ApplicationIsDeleted
- uid: Authentica.Service.Identity.Tests.UnitTests.ApplicationWriteStoreTests.UpdateApplicationAsync_Should_ReturnFailedResult_When_ApplicationIsNull
  name: UpdateApplicationAsync_Should_ReturnFailedResult_When_ApplicationIsNull()
  href: api/Authentica.Service.Identity.Tests.UnitTests.ApplicationWriteStoreTests.html#Authentica_Service_Identity_Tests_UnitTests_ApplicationWriteStoreTests_UpdateApplicationAsync_Should_ReturnFailedResult_When_ApplicationIsNull
  commentId: M:Authentica.Service.Identity.Tests.UnitTests.ApplicationWriteStoreTests.UpdateApplicationAsync_Should_ReturnFailedResult_When_ApplicationIsNull
  fullName: Authentica.Service.Identity.Tests.UnitTests.ApplicationWriteStoreTests.UpdateApplicationAsync_Should_ReturnFailedResult_When_ApplicationIsNull()
  nameWithType: ApplicationWriteStoreTests.UpdateApplicationAsync_Should_ReturnFailedResult_When_ApplicationIsNull()
- uid: Authentica.Service.Identity.Tests.UnitTests.ApplicationWriteStoreTests.UpdateApplicationAsync_Should_ReturnFailedResult_When_ApplicationIsNull*
  name: UpdateApplicationAsync_Should_ReturnFailedResult_When_ApplicationIsNull
  href: api/Authentica.Service.Identity.Tests.UnitTests.ApplicationWriteStoreTests.html#Authentica_Service_Identity_Tests_UnitTests_ApplicationWriteStoreTests_UpdateApplicationAsync_Should_ReturnFailedResult_When_ApplicationIsNull_
  commentId: Overload:Authentica.Service.Identity.Tests.UnitTests.ApplicationWriteStoreTests.UpdateApplicationAsync_Should_ReturnFailedResult_When_ApplicationIsNull
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.UnitTests.ApplicationWriteStoreTests.UpdateApplicationAsync_Should_ReturnFailedResult_When_ApplicationIsNull
  nameWithType: ApplicationWriteStoreTests.UpdateApplicationAsync_Should_ReturnFailedResult_When_ApplicationIsNull
- uid: Authentica.Service.Identity.Tests.UnitTests.ApplicationWriteStoreTests.UpdateApplicationAsync_Should_ReturnFailedResult_When_ExceptionIsThrown
  name: UpdateApplicationAsync_Should_ReturnFailedResult_When_ExceptionIsThrown()
  href: api/Authentica.Service.Identity.Tests.UnitTests.ApplicationWriteStoreTests.html#Authentica_Service_Identity_Tests_UnitTests_ApplicationWriteStoreTests_UpdateApplicationAsync_Should_ReturnFailedResult_When_ExceptionIsThrown
  commentId: M:Authentica.Service.Identity.Tests.UnitTests.ApplicationWriteStoreTests.UpdateApplicationAsync_Should_ReturnFailedResult_When_ExceptionIsThrown
  fullName: Authentica.Service.Identity.Tests.UnitTests.ApplicationWriteStoreTests.UpdateApplicationAsync_Should_ReturnFailedResult_When_ExceptionIsThrown()
  nameWithType: ApplicationWriteStoreTests.UpdateApplicationAsync_Should_ReturnFailedResult_When_ExceptionIsThrown()
- uid: Authentica.Service.Identity.Tests.UnitTests.ApplicationWriteStoreTests.UpdateApplicationAsync_Should_ReturnFailedResult_When_ExceptionIsThrown*
  name: UpdateApplicationAsync_Should_ReturnFailedResult_When_ExceptionIsThrown
  href: api/Authentica.Service.Identity.Tests.UnitTests.ApplicationWriteStoreTests.html#Authentica_Service_Identity_Tests_UnitTests_ApplicationWriteStoreTests_UpdateApplicationAsync_Should_ReturnFailedResult_When_ExceptionIsThrown_
  commentId: Overload:Authentica.Service.Identity.Tests.UnitTests.ApplicationWriteStoreTests.UpdateApplicationAsync_Should_ReturnFailedResult_When_ExceptionIsThrown
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.UnitTests.ApplicationWriteStoreTests.UpdateApplicationAsync_Should_ReturnFailedResult_When_ExceptionIsThrown
  nameWithType: ApplicationWriteStoreTests.UpdateApplicationAsync_Should_ReturnFailedResult_When_ExceptionIsThrown
- uid: Authentica.Service.Identity.Tests.UnitTests.ApplicationWriteStoreTests.UpdateApplicationAsync_Should_ReturnFailedResult_When_UserIsNull
  name: UpdateApplicationAsync_Should_ReturnFailedResult_When_UserIsNull()
  href: api/Authentica.Service.Identity.Tests.UnitTests.ApplicationWriteStoreTests.html#Authentica_Service_Identity_Tests_UnitTests_ApplicationWriteStoreTests_UpdateApplicationAsync_Should_ReturnFailedResult_When_UserIsNull
  commentId: M:Authentica.Service.Identity.Tests.UnitTests.ApplicationWriteStoreTests.UpdateApplicationAsync_Should_ReturnFailedResult_When_UserIsNull
  fullName: Authentica.Service.Identity.Tests.UnitTests.ApplicationWriteStoreTests.UpdateApplicationAsync_Should_ReturnFailedResult_When_UserIsNull()
  nameWithType: ApplicationWriteStoreTests.UpdateApplicationAsync_Should_ReturnFailedResult_When_UserIsNull()
- uid: Authentica.Service.Identity.Tests.UnitTests.ApplicationWriteStoreTests.UpdateApplicationAsync_Should_ReturnFailedResult_When_UserIsNull*
  name: UpdateApplicationAsync_Should_ReturnFailedResult_When_UserIsNull
  href: api/Authentica.Service.Identity.Tests.UnitTests.ApplicationWriteStoreTests.html#Authentica_Service_Identity_Tests_UnitTests_ApplicationWriteStoreTests_UpdateApplicationAsync_Should_ReturnFailedResult_When_UserIsNull_
  commentId: Overload:Authentica.Service.Identity.Tests.UnitTests.ApplicationWriteStoreTests.UpdateApplicationAsync_Should_ReturnFailedResult_When_UserIsNull
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.UnitTests.ApplicationWriteStoreTests.UpdateApplicationAsync_Should_ReturnFailedResult_When_UserIsNull
  nameWithType: ApplicationWriteStoreTests.UpdateApplicationAsync_Should_ReturnFailedResult_When_UserIsNull
- uid: Authentica.Service.Identity.Tests.UnitTests.EmailPublisherTests
  name: EmailPublisherTests
  href: api/Authentica.Service.Identity.Tests.UnitTests.EmailPublisherTests.html
  commentId: T:Authentica.Service.Identity.Tests.UnitTests.EmailPublisherTests
  fullName: Authentica.Service.Identity.Tests.UnitTests.EmailPublisherTests
  nameWithType: EmailPublisherTests
- uid: Authentica.Service.Identity.Tests.UnitTests.EmailPublisherTests.PublishIsSuccessfulWithCorrectMessage
  name: PublishIsSuccessfulWithCorrectMessage()
  href: api/Authentica.Service.Identity.Tests.UnitTests.EmailPublisherTests.html#Authentica_Service_Identity_Tests_UnitTests_EmailPublisherTests_PublishIsSuccessfulWithCorrectMessage
  commentId: M:Authentica.Service.Identity.Tests.UnitTests.EmailPublisherTests.PublishIsSuccessfulWithCorrectMessage
  fullName: Authentica.Service.Identity.Tests.UnitTests.EmailPublisherTests.PublishIsSuccessfulWithCorrectMessage()
  nameWithType: EmailPublisherTests.PublishIsSuccessfulWithCorrectMessage()
- uid: Authentica.Service.Identity.Tests.UnitTests.EmailPublisherTests.PublishIsSuccessfulWithCorrectMessage*
  name: PublishIsSuccessfulWithCorrectMessage
  href: api/Authentica.Service.Identity.Tests.UnitTests.EmailPublisherTests.html#Authentica_Service_Identity_Tests_UnitTests_EmailPublisherTests_PublishIsSuccessfulWithCorrectMessage_
  commentId: Overload:Authentica.Service.Identity.Tests.UnitTests.EmailPublisherTests.PublishIsSuccessfulWithCorrectMessage
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.UnitTests.EmailPublisherTests.PublishIsSuccessfulWithCorrectMessage
  nameWithType: EmailPublisherTests.PublishIsSuccessfulWithCorrectMessage
- uid: Authentica.Service.Identity.Tests.UnitTests.JsonWebTokenProviderTests
  name: JsonWebTokenProviderTests
  href: api/Authentica.Service.Identity.Tests.UnitTests.JsonWebTokenProviderTests.html
  commentId: T:Authentica.Service.Identity.Tests.UnitTests.JsonWebTokenProviderTests
  fullName: Authentica.Service.Identity.Tests.UnitTests.JsonWebTokenProviderTests
  nameWithType: JsonWebTokenProviderTests
- uid: Authentica.Service.Identity.Tests.UnitTests.JsonWebTokenProviderTests.TryCreateTokenAsync_ShouldCreateToken_WhenValidParametersAreProvided
  name: TryCreateTokenAsync_ShouldCreateToken_WhenValidParametersAreProvided()
  href: api/Authentica.Service.Identity.Tests.UnitTests.JsonWebTokenProviderTests.html#Authentica_Service_Identity_Tests_UnitTests_JsonWebTokenProviderTests_TryCreateTokenAsync_ShouldCreateToken_WhenValidParametersAreProvided
  commentId: M:Authentica.Service.Identity.Tests.UnitTests.JsonWebTokenProviderTests.TryCreateTokenAsync_ShouldCreateToken_WhenValidParametersAreProvided
  fullName: Authentica.Service.Identity.Tests.UnitTests.JsonWebTokenProviderTests.TryCreateTokenAsync_ShouldCreateToken_WhenValidParametersAreProvided()
  nameWithType: JsonWebTokenProviderTests.TryCreateTokenAsync_ShouldCreateToken_WhenValidParametersAreProvided()
- uid: Authentica.Service.Identity.Tests.UnitTests.JsonWebTokenProviderTests.TryCreateTokenAsync_ShouldCreateToken_WhenValidParametersAreProvided*
  name: TryCreateTokenAsync_ShouldCreateToken_WhenValidParametersAreProvided
  href: api/Authentica.Service.Identity.Tests.UnitTests.JsonWebTokenProviderTests.html#Authentica_Service_Identity_Tests_UnitTests_JsonWebTokenProviderTests_TryCreateTokenAsync_ShouldCreateToken_WhenValidParametersAreProvided_
  commentId: Overload:Authentica.Service.Identity.Tests.UnitTests.JsonWebTokenProviderTests.TryCreateTokenAsync_ShouldCreateToken_WhenValidParametersAreProvided
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.UnitTests.JsonWebTokenProviderTests.TryCreateTokenAsync_ShouldCreateToken_WhenValidParametersAreProvided
  nameWithType: JsonWebTokenProviderTests.TryCreateTokenAsync_ShouldCreateToken_WhenValidParametersAreProvided
- uid: Authentica.Service.Identity.Tests.UnitTests.JsonWebTokenProviderTests.TryCreateTokenAsync_ShouldFail_WhenExceptionIsThrown
  name: TryCreateTokenAsync_ShouldFail_WhenExceptionIsThrown()
  href: api/Authentica.Service.Identity.Tests.UnitTests.JsonWebTokenProviderTests.html#Authentica_Service_Identity_Tests_UnitTests_JsonWebTokenProviderTests_TryCreateTokenAsync_ShouldFail_WhenExceptionIsThrown
  commentId: M:Authentica.Service.Identity.Tests.UnitTests.JsonWebTokenProviderTests.TryCreateTokenAsync_ShouldFail_WhenExceptionIsThrown
  fullName: Authentica.Service.Identity.Tests.UnitTests.JsonWebTokenProviderTests.TryCreateTokenAsync_ShouldFail_WhenExceptionIsThrown()
  nameWithType: JsonWebTokenProviderTests.TryCreateTokenAsync_ShouldFail_WhenExceptionIsThrown()
- uid: Authentica.Service.Identity.Tests.UnitTests.JsonWebTokenProviderTests.TryCreateTokenAsync_ShouldFail_WhenExceptionIsThrown*
  name: TryCreateTokenAsync_ShouldFail_WhenExceptionIsThrown
  href: api/Authentica.Service.Identity.Tests.UnitTests.JsonWebTokenProviderTests.html#Authentica_Service_Identity_Tests_UnitTests_JsonWebTokenProviderTests_TryCreateTokenAsync_ShouldFail_WhenExceptionIsThrown_
  commentId: Overload:Authentica.Service.Identity.Tests.UnitTests.JsonWebTokenProviderTests.TryCreateTokenAsync_ShouldFail_WhenExceptionIsThrown
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.UnitTests.JsonWebTokenProviderTests.TryCreateTokenAsync_ShouldFail_WhenExceptionIsThrown
  nameWithType: JsonWebTokenProviderTests.TryCreateTokenAsync_ShouldFail_WhenExceptionIsThrown
- uid: Authentica.Service.Identity.Tests.UnitTests.JsonWebTokenProviderTests.TryValidateTokenAsync_ShouldFail_WhenExceptionIsThrown
  name: TryValidateTokenAsync_ShouldFail_WhenExceptionIsThrown()
  href: api/Authentica.Service.Identity.Tests.UnitTests.JsonWebTokenProviderTests.html#Authentica_Service_Identity_Tests_UnitTests_JsonWebTokenProviderTests_TryValidateTokenAsync_ShouldFail_WhenExceptionIsThrown
  commentId: M:Authentica.Service.Identity.Tests.UnitTests.JsonWebTokenProviderTests.TryValidateTokenAsync_ShouldFail_WhenExceptionIsThrown
  fullName: Authentica.Service.Identity.Tests.UnitTests.JsonWebTokenProviderTests.TryValidateTokenAsync_ShouldFail_WhenExceptionIsThrown()
  nameWithType: JsonWebTokenProviderTests.TryValidateTokenAsync_ShouldFail_WhenExceptionIsThrown()
- uid: Authentica.Service.Identity.Tests.UnitTests.JsonWebTokenProviderTests.TryValidateTokenAsync_ShouldFail_WhenExceptionIsThrown*
  name: TryValidateTokenAsync_ShouldFail_WhenExceptionIsThrown
  href: api/Authentica.Service.Identity.Tests.UnitTests.JsonWebTokenProviderTests.html#Authentica_Service_Identity_Tests_UnitTests_JsonWebTokenProviderTests_TryValidateTokenAsync_ShouldFail_WhenExceptionIsThrown_
  commentId: Overload:Authentica.Service.Identity.Tests.UnitTests.JsonWebTokenProviderTests.TryValidateTokenAsync_ShouldFail_WhenExceptionIsThrown
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.UnitTests.JsonWebTokenProviderTests.TryValidateTokenAsync_ShouldFail_WhenExceptionIsThrown
  nameWithType: JsonWebTokenProviderTests.TryValidateTokenAsync_ShouldFail_WhenExceptionIsThrown
- uid: Authentica.Service.Identity.Tests.UnitTests.JsonWebTokenProviderTests.TryValidateTokenAsync_ShouldFail_WhenInvalidTokenIsProvided
  name: TryValidateTokenAsync_ShouldFail_WhenInvalidTokenIsProvided()
  href: api/Authentica.Service.Identity.Tests.UnitTests.JsonWebTokenProviderTests.html#Authentica_Service_Identity_Tests_UnitTests_JsonWebTokenProviderTests_TryValidateTokenAsync_ShouldFail_WhenInvalidTokenIsProvided
  commentId: M:Authentica.Service.Identity.Tests.UnitTests.JsonWebTokenProviderTests.TryValidateTokenAsync_ShouldFail_WhenInvalidTokenIsProvided
  fullName: Authentica.Service.Identity.Tests.UnitTests.JsonWebTokenProviderTests.TryValidateTokenAsync_ShouldFail_WhenInvalidTokenIsProvided()
  nameWithType: JsonWebTokenProviderTests.TryValidateTokenAsync_ShouldFail_WhenInvalidTokenIsProvided()
- uid: Authentica.Service.Identity.Tests.UnitTests.JsonWebTokenProviderTests.TryValidateTokenAsync_ShouldFail_WhenInvalidTokenIsProvided*
  name: TryValidateTokenAsync_ShouldFail_WhenInvalidTokenIsProvided
  href: api/Authentica.Service.Identity.Tests.UnitTests.JsonWebTokenProviderTests.html#Authentica_Service_Identity_Tests_UnitTests_JsonWebTokenProviderTests_TryValidateTokenAsync_ShouldFail_WhenInvalidTokenIsProvided_
  commentId: Overload:Authentica.Service.Identity.Tests.UnitTests.JsonWebTokenProviderTests.TryValidateTokenAsync_ShouldFail_WhenInvalidTokenIsProvided
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.UnitTests.JsonWebTokenProviderTests.TryValidateTokenAsync_ShouldFail_WhenInvalidTokenIsProvided
  nameWithType: JsonWebTokenProviderTests.TryValidateTokenAsync_ShouldFail_WhenInvalidTokenIsProvided
- uid: Authentica.Service.Identity.Tests.UnitTests.JsonWebTokenProviderTests.TryValidateTokenAsync_ShouldValidateToken_WhenValidTokenIsProvided
  name: TryValidateTokenAsync_ShouldValidateToken_WhenValidTokenIsProvided()
  href: api/Authentica.Service.Identity.Tests.UnitTests.JsonWebTokenProviderTests.html#Authentica_Service_Identity_Tests_UnitTests_JsonWebTokenProviderTests_TryValidateTokenAsync_ShouldValidateToken_WhenValidTokenIsProvided
  commentId: M:Authentica.Service.Identity.Tests.UnitTests.JsonWebTokenProviderTests.TryValidateTokenAsync_ShouldValidateToken_WhenValidTokenIsProvided
  fullName: Authentica.Service.Identity.Tests.UnitTests.JsonWebTokenProviderTests.TryValidateTokenAsync_ShouldValidateToken_WhenValidTokenIsProvided()
  nameWithType: JsonWebTokenProviderTests.TryValidateTokenAsync_ShouldValidateToken_WhenValidTokenIsProvided()
- uid: Authentica.Service.Identity.Tests.UnitTests.JsonWebTokenProviderTests.TryValidateTokenAsync_ShouldValidateToken_WhenValidTokenIsProvided*
  name: TryValidateTokenAsync_ShouldValidateToken_WhenValidTokenIsProvided
  href: api/Authentica.Service.Identity.Tests.UnitTests.JsonWebTokenProviderTests.html#Authentica_Service_Identity_Tests_UnitTests_JsonWebTokenProviderTests_TryValidateTokenAsync_ShouldValidateToken_WhenValidTokenIsProvided_
  commentId: Overload:Authentica.Service.Identity.Tests.UnitTests.JsonWebTokenProviderTests.TryValidateTokenAsync_ShouldValidateToken_WhenValidTokenIsProvided
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.UnitTests.JsonWebTokenProviderTests.TryValidateTokenAsync_ShouldValidateToken_WhenValidTokenIsProvided
  nameWithType: JsonWebTokenProviderTests.TryValidateTokenAsync_ShouldValidateToken_WhenValidTokenIsProvided
- uid: Authentica.Service.Identity.Tests.UnitTests.MultiFactorTotpProviderTests
  name: MultiFactorTotpProviderTests
  href: api/Authentica.Service.Identity.Tests.UnitTests.MultiFactorTotpProviderTests.html
  commentId: T:Authentica.Service.Identity.Tests.UnitTests.MultiFactorTotpProviderTests
  fullName: Authentica.Service.Identity.Tests.UnitTests.MultiFactorTotpProviderTests
  nameWithType: MultiFactorTotpProviderTests
- uid: Authentica.Service.Identity.Tests.UnitTests.MultiFactorTotpProviderTests.FormatKey_Returns_Formatted_Key
  name: FormatKey_Returns_Formatted_Key()
  href: api/Authentica.Service.Identity.Tests.UnitTests.MultiFactorTotpProviderTests.html#Authentica_Service_Identity_Tests_UnitTests_MultiFactorTotpProviderTests_FormatKey_Returns_Formatted_Key
  commentId: M:Authentica.Service.Identity.Tests.UnitTests.MultiFactorTotpProviderTests.FormatKey_Returns_Formatted_Key
  fullName: Authentica.Service.Identity.Tests.UnitTests.MultiFactorTotpProviderTests.FormatKey_Returns_Formatted_Key()
  nameWithType: MultiFactorTotpProviderTests.FormatKey_Returns_Formatted_Key()
- uid: Authentica.Service.Identity.Tests.UnitTests.MultiFactorTotpProviderTests.FormatKey_Returns_Formatted_Key*
  name: FormatKey_Returns_Formatted_Key
  href: api/Authentica.Service.Identity.Tests.UnitTests.MultiFactorTotpProviderTests.html#Authentica_Service_Identity_Tests_UnitTests_MultiFactorTotpProviderTests_FormatKey_Returns_Formatted_Key_
  commentId: Overload:Authentica.Service.Identity.Tests.UnitTests.MultiFactorTotpProviderTests.FormatKey_Returns_Formatted_Key
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.UnitTests.MultiFactorTotpProviderTests.FormatKey_Returns_Formatted_Key
  nameWithType: MultiFactorTotpProviderTests.FormatKey_Returns_Formatted_Key
- uid: Authentica.Service.Identity.Tests.UnitTests.MultiFactorTotpProviderTests.GenerateKeyAsync_Returns_New_Authenticator_Key
  name: GenerateKeyAsync_Returns_New_Authenticator_Key()
  href: api/Authentica.Service.Identity.Tests.UnitTests.MultiFactorTotpProviderTests.html#Authentica_Service_Identity_Tests_UnitTests_MultiFactorTotpProviderTests_GenerateKeyAsync_Returns_New_Authenticator_Key
  commentId: M:Authentica.Service.Identity.Tests.UnitTests.MultiFactorTotpProviderTests.GenerateKeyAsync_Returns_New_Authenticator_Key
  fullName: Authentica.Service.Identity.Tests.UnitTests.MultiFactorTotpProviderTests.GenerateKeyAsync_Returns_New_Authenticator_Key()
  nameWithType: MultiFactorTotpProviderTests.GenerateKeyAsync_Returns_New_Authenticator_Key()
- uid: Authentica.Service.Identity.Tests.UnitTests.MultiFactorTotpProviderTests.GenerateKeyAsync_Returns_New_Authenticator_Key*
  name: GenerateKeyAsync_Returns_New_Authenticator_Key
  href: api/Authentica.Service.Identity.Tests.UnitTests.MultiFactorTotpProviderTests.html#Authentica_Service_Identity_Tests_UnitTests_MultiFactorTotpProviderTests_GenerateKeyAsync_Returns_New_Authenticator_Key_
  commentId: Overload:Authentica.Service.Identity.Tests.UnitTests.MultiFactorTotpProviderTests.GenerateKeyAsync_Returns_New_Authenticator_Key
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.UnitTests.MultiFactorTotpProviderTests.GenerateKeyAsync_Returns_New_Authenticator_Key
  nameWithType: MultiFactorTotpProviderTests.GenerateKeyAsync_Returns_New_Authenticator_Key
- uid: Authentica.Service.Identity.Tests.UnitTests.MultiFactorTotpProviderTests.GenerateQrCodeUriAsync_Returns_Correct_QrCodeUri
  name: GenerateQrCodeUriAsync_Returns_Correct_QrCodeUri()
  href: api/Authentica.Service.Identity.Tests.UnitTests.MultiFactorTotpProviderTests.html#Authentica_Service_Identity_Tests_UnitTests_MultiFactorTotpProviderTests_GenerateQrCodeUriAsync_Returns_Correct_QrCodeUri
  commentId: M:Authentica.Service.Identity.Tests.UnitTests.MultiFactorTotpProviderTests.GenerateQrCodeUriAsync_Returns_Correct_QrCodeUri
  fullName: Authentica.Service.Identity.Tests.UnitTests.MultiFactorTotpProviderTests.GenerateQrCodeUriAsync_Returns_Correct_QrCodeUri()
  nameWithType: MultiFactorTotpProviderTests.GenerateQrCodeUriAsync_Returns_Correct_QrCodeUri()
- uid: Authentica.Service.Identity.Tests.UnitTests.MultiFactorTotpProviderTests.GenerateQrCodeUriAsync_Returns_Correct_QrCodeUri*
  name: GenerateQrCodeUriAsync_Returns_Correct_QrCodeUri
  href: api/Authentica.Service.Identity.Tests.UnitTests.MultiFactorTotpProviderTests.html#Authentica_Service_Identity_Tests_UnitTests_MultiFactorTotpProviderTests_GenerateQrCodeUriAsync_Returns_Correct_QrCodeUri_
  commentId: Overload:Authentica.Service.Identity.Tests.UnitTests.MultiFactorTotpProviderTests.GenerateQrCodeUriAsync_Returns_Correct_QrCodeUri
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.UnitTests.MultiFactorTotpProviderTests.GenerateQrCodeUriAsync_Returns_Correct_QrCodeUri
  nameWithType: MultiFactorTotpProviderTests.GenerateQrCodeUriAsync_Returns_Correct_QrCodeUri
- uid: Authentica.Service.Identity.Tests.UnitTests.MultiFactorTotpProviderTests.GenerateQrCodeUriAsync_Throws_When_AuthenticatorKey_Is_Null
  name: GenerateQrCodeUriAsync_Throws_When_AuthenticatorKey_Is_Null()
  href: api/Authentica.Service.Identity.Tests.UnitTests.MultiFactorTotpProviderTests.html#Authentica_Service_Identity_Tests_UnitTests_MultiFactorTotpProviderTests_GenerateQrCodeUriAsync_Throws_When_AuthenticatorKey_Is_Null
  commentId: M:Authentica.Service.Identity.Tests.UnitTests.MultiFactorTotpProviderTests.GenerateQrCodeUriAsync_Throws_When_AuthenticatorKey_Is_Null
  fullName: Authentica.Service.Identity.Tests.UnitTests.MultiFactorTotpProviderTests.GenerateQrCodeUriAsync_Throws_When_AuthenticatorKey_Is_Null()
  nameWithType: MultiFactorTotpProviderTests.GenerateQrCodeUriAsync_Throws_When_AuthenticatorKey_Is_Null()
- uid: Authentica.Service.Identity.Tests.UnitTests.MultiFactorTotpProviderTests.GenerateQrCodeUriAsync_Throws_When_AuthenticatorKey_Is_Null*
  name: GenerateQrCodeUriAsync_Throws_When_AuthenticatorKey_Is_Null
  href: api/Authentica.Service.Identity.Tests.UnitTests.MultiFactorTotpProviderTests.html#Authentica_Service_Identity_Tests_UnitTests_MultiFactorTotpProviderTests_GenerateQrCodeUriAsync_Throws_When_AuthenticatorKey_Is_Null_
  commentId: Overload:Authentica.Service.Identity.Tests.UnitTests.MultiFactorTotpProviderTests.GenerateQrCodeUriAsync_Throws_When_AuthenticatorKey_Is_Null
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.UnitTests.MultiFactorTotpProviderTests.GenerateQrCodeUriAsync_Throws_When_AuthenticatorKey_Is_Null
  nameWithType: MultiFactorTotpProviderTests.GenerateQrCodeUriAsync_Throws_When_AuthenticatorKey_Is_Null
- uid: Authentica.Service.Identity.Tests.UnitTests.MultiFactorTotpProviderTests.SetUp
  name: SetUp()
  href: api/Authentica.Service.Identity.Tests.UnitTests.MultiFactorTotpProviderTests.html#Authentica_Service_Identity_Tests_UnitTests_MultiFactorTotpProviderTests_SetUp
  commentId: M:Authentica.Service.Identity.Tests.UnitTests.MultiFactorTotpProviderTests.SetUp
  fullName: Authentica.Service.Identity.Tests.UnitTests.MultiFactorTotpProviderTests.SetUp()
  nameWithType: MultiFactorTotpProviderTests.SetUp()
- uid: Authentica.Service.Identity.Tests.UnitTests.MultiFactorTotpProviderTests.SetUp*
  name: SetUp
  href: api/Authentica.Service.Identity.Tests.UnitTests.MultiFactorTotpProviderTests.html#Authentica_Service_Identity_Tests_UnitTests_MultiFactorTotpProviderTests_SetUp_
  commentId: Overload:Authentica.Service.Identity.Tests.UnitTests.MultiFactorTotpProviderTests.SetUp
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.UnitTests.MultiFactorTotpProviderTests.SetUp
  nameWithType: MultiFactorTotpProviderTests.SetUp
- uid: Authentica.Service.Identity.Tests.UnitTests.MultiFactorTotpProviderTests.ValidateAsync_Returns_False_When_Token_Is_Invalid
  name: ValidateAsync_Returns_False_When_Token_Is_Invalid()
  href: api/Authentica.Service.Identity.Tests.UnitTests.MultiFactorTotpProviderTests.html#Authentica_Service_Identity_Tests_UnitTests_MultiFactorTotpProviderTests_ValidateAsync_Returns_False_When_Token_Is_Invalid
  commentId: M:Authentica.Service.Identity.Tests.UnitTests.MultiFactorTotpProviderTests.ValidateAsync_Returns_False_When_Token_Is_Invalid
  fullName: Authentica.Service.Identity.Tests.UnitTests.MultiFactorTotpProviderTests.ValidateAsync_Returns_False_When_Token_Is_Invalid()
  nameWithType: MultiFactorTotpProviderTests.ValidateAsync_Returns_False_When_Token_Is_Invalid()
- uid: Authentica.Service.Identity.Tests.UnitTests.MultiFactorTotpProviderTests.ValidateAsync_Returns_False_When_Token_Is_Invalid*
  name: ValidateAsync_Returns_False_When_Token_Is_Invalid
  href: api/Authentica.Service.Identity.Tests.UnitTests.MultiFactorTotpProviderTests.html#Authentica_Service_Identity_Tests_UnitTests_MultiFactorTotpProviderTests_ValidateAsync_Returns_False_When_Token_Is_Invalid_
  commentId: Overload:Authentica.Service.Identity.Tests.UnitTests.MultiFactorTotpProviderTests.ValidateAsync_Returns_False_When_Token_Is_Invalid
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.UnitTests.MultiFactorTotpProviderTests.ValidateAsync_Returns_False_When_Token_Is_Invalid
  nameWithType: MultiFactorTotpProviderTests.ValidateAsync_Returns_False_When_Token_Is_Invalid
- uid: Authentica.Service.Identity.Tests.UnitTests.MultiFactorTotpProviderTests.ValidateAsync_Returns_True_When_Token_Is_Valid
  name: ValidateAsync_Returns_True_When_Token_Is_Valid()
  href: api/Authentica.Service.Identity.Tests.UnitTests.MultiFactorTotpProviderTests.html#Authentica_Service_Identity_Tests_UnitTests_MultiFactorTotpProviderTests_ValidateAsync_Returns_True_When_Token_Is_Valid
  commentId: M:Authentica.Service.Identity.Tests.UnitTests.MultiFactorTotpProviderTests.ValidateAsync_Returns_True_When_Token_Is_Valid
  fullName: Authentica.Service.Identity.Tests.UnitTests.MultiFactorTotpProviderTests.ValidateAsync_Returns_True_When_Token_Is_Valid()
  nameWithType: MultiFactorTotpProviderTests.ValidateAsync_Returns_True_When_Token_Is_Valid()
- uid: Authentica.Service.Identity.Tests.UnitTests.MultiFactorTotpProviderTests.ValidateAsync_Returns_True_When_Token_Is_Valid*
  name: ValidateAsync_Returns_True_When_Token_Is_Valid
  href: api/Authentica.Service.Identity.Tests.UnitTests.MultiFactorTotpProviderTests.html#Authentica_Service_Identity_Tests_UnitTests_MultiFactorTotpProviderTests_ValidateAsync_Returns_True_When_Token_Is_Valid_
  commentId: Overload:Authentica.Service.Identity.Tests.UnitTests.MultiFactorTotpProviderTests.ValidateAsync_Returns_True_When_Token_Is_Valid
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.UnitTests.MultiFactorTotpProviderTests.ValidateAsync_Returns_True_When_Token_Is_Valid
  nameWithType: MultiFactorTotpProviderTests.ValidateAsync_Returns_True_When_Token_Is_Valid
- uid: Authentica.Service.Identity.Tests.UnitTests.ScopeProviderTests
  name: ScopeProviderTests
  href: api/Authentica.Service.Identity.Tests.UnitTests.ScopeProviderTests.html
  commentId: T:Authentica.Service.Identity.Tests.UnitTests.ScopeProviderTests
  fullName: Authentica.Service.Identity.Tests.UnitTests.ScopeProviderTests
  nameWithType: ScopeProviderTests
- uid: Authentica.Service.Identity.Tests.UnitTests.ScopeProviderTests.ParseScopes_ShouldRemoveEmptyEntries_WhenScopeStringContainsExtraSpaces
  name: ParseScopes_ShouldRemoveEmptyEntries_WhenScopeStringContainsExtraSpaces()
  href: api/Authentica.Service.Identity.Tests.UnitTests.ScopeProviderTests.html#Authentica_Service_Identity_Tests_UnitTests_ScopeProviderTests_ParseScopes_ShouldRemoveEmptyEntries_WhenScopeStringContainsExtraSpaces
  commentId: M:Authentica.Service.Identity.Tests.UnitTests.ScopeProviderTests.ParseScopes_ShouldRemoveEmptyEntries_WhenScopeStringContainsExtraSpaces
  fullName: Authentica.Service.Identity.Tests.UnitTests.ScopeProviderTests.ParseScopes_ShouldRemoveEmptyEntries_WhenScopeStringContainsExtraSpaces()
  nameWithType: ScopeProviderTests.ParseScopes_ShouldRemoveEmptyEntries_WhenScopeStringContainsExtraSpaces()
- uid: Authentica.Service.Identity.Tests.UnitTests.ScopeProviderTests.ParseScopes_ShouldRemoveEmptyEntries_WhenScopeStringContainsExtraSpaces*
  name: ParseScopes_ShouldRemoveEmptyEntries_WhenScopeStringContainsExtraSpaces
  href: api/Authentica.Service.Identity.Tests.UnitTests.ScopeProviderTests.html#Authentica_Service_Identity_Tests_UnitTests_ScopeProviderTests_ParseScopes_ShouldRemoveEmptyEntries_WhenScopeStringContainsExtraSpaces_
  commentId: Overload:Authentica.Service.Identity.Tests.UnitTests.ScopeProviderTests.ParseScopes_ShouldRemoveEmptyEntries_WhenScopeStringContainsExtraSpaces
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.UnitTests.ScopeProviderTests.ParseScopes_ShouldRemoveEmptyEntries_WhenScopeStringContainsExtraSpaces
  nameWithType: ScopeProviderTests.ParseScopes_ShouldRemoveEmptyEntries_WhenScopeStringContainsExtraSpaces
- uid: Authentica.Service.Identity.Tests.UnitTests.ScopeProviderTests.ParseScopes_ShouldReturnEmptyList_WhenScopeStringIsEmpty
  name: ParseScopes_ShouldReturnEmptyList_WhenScopeStringIsEmpty()
  href: api/Authentica.Service.Identity.Tests.UnitTests.ScopeProviderTests.html#Authentica_Service_Identity_Tests_UnitTests_ScopeProviderTests_ParseScopes_ShouldReturnEmptyList_WhenScopeStringIsEmpty
  commentId: M:Authentica.Service.Identity.Tests.UnitTests.ScopeProviderTests.ParseScopes_ShouldReturnEmptyList_WhenScopeStringIsEmpty
  fullName: Authentica.Service.Identity.Tests.UnitTests.ScopeProviderTests.ParseScopes_ShouldReturnEmptyList_WhenScopeStringIsEmpty()
  nameWithType: ScopeProviderTests.ParseScopes_ShouldReturnEmptyList_WhenScopeStringIsEmpty()
- uid: Authentica.Service.Identity.Tests.UnitTests.ScopeProviderTests.ParseScopes_ShouldReturnEmptyList_WhenScopeStringIsEmpty*
  name: ParseScopes_ShouldReturnEmptyList_WhenScopeStringIsEmpty
  href: api/Authentica.Service.Identity.Tests.UnitTests.ScopeProviderTests.html#Authentica_Service_Identity_Tests_UnitTests_ScopeProviderTests_ParseScopes_ShouldReturnEmptyList_WhenScopeStringIsEmpty_
  commentId: Overload:Authentica.Service.Identity.Tests.UnitTests.ScopeProviderTests.ParseScopes_ShouldReturnEmptyList_WhenScopeStringIsEmpty
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.UnitTests.ScopeProviderTests.ParseScopes_ShouldReturnEmptyList_WhenScopeStringIsEmpty
  nameWithType: ScopeProviderTests.ParseScopes_ShouldReturnEmptyList_WhenScopeStringIsEmpty
- uid: Authentica.Service.Identity.Tests.UnitTests.ScopeProviderTests.ParseScopes_ShouldReturnEmptyList_WhenScopeStringIsWhitespace
  name: ParseScopes_ShouldReturnEmptyList_WhenScopeStringIsWhitespace()
  href: api/Authentica.Service.Identity.Tests.UnitTests.ScopeProviderTests.html#Authentica_Service_Identity_Tests_UnitTests_ScopeProviderTests_ParseScopes_ShouldReturnEmptyList_WhenScopeStringIsWhitespace
  commentId: M:Authentica.Service.Identity.Tests.UnitTests.ScopeProviderTests.ParseScopes_ShouldReturnEmptyList_WhenScopeStringIsWhitespace
  fullName: Authentica.Service.Identity.Tests.UnitTests.ScopeProviderTests.ParseScopes_ShouldReturnEmptyList_WhenScopeStringIsWhitespace()
  nameWithType: ScopeProviderTests.ParseScopes_ShouldReturnEmptyList_WhenScopeStringIsWhitespace()
- uid: Authentica.Service.Identity.Tests.UnitTests.ScopeProviderTests.ParseScopes_ShouldReturnEmptyList_WhenScopeStringIsWhitespace*
  name: ParseScopes_ShouldReturnEmptyList_WhenScopeStringIsWhitespace
  href: api/Authentica.Service.Identity.Tests.UnitTests.ScopeProviderTests.html#Authentica_Service_Identity_Tests_UnitTests_ScopeProviderTests_ParseScopes_ShouldReturnEmptyList_WhenScopeStringIsWhitespace_
  commentId: Overload:Authentica.Service.Identity.Tests.UnitTests.ScopeProviderTests.ParseScopes_ShouldReturnEmptyList_WhenScopeStringIsWhitespace
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.UnitTests.ScopeProviderTests.ParseScopes_ShouldReturnEmptyList_WhenScopeStringIsWhitespace
  nameWithType: ScopeProviderTests.ParseScopes_ShouldReturnEmptyList_WhenScopeStringIsWhitespace
- uid: Authentica.Service.Identity.Tests.UnitTests.ScopeProviderTests.ParseScopes_ShouldReturnMultipleScopes_WhenScopeStringContainsMultipleScopesSeparatedBySpaces
  name: ParseScopes_ShouldReturnMultipleScopes_WhenScopeStringContainsMultipleScopesSeparatedBySpaces()
  href: api/Authentica.Service.Identity.Tests.UnitTests.ScopeProviderTests.html#Authentica_Service_Identity_Tests_UnitTests_ScopeProviderTests_ParseScopes_ShouldReturnMultipleScopes_WhenScopeStringContainsMultipleScopesSeparatedBySpaces
  commentId: M:Authentica.Service.Identity.Tests.UnitTests.ScopeProviderTests.ParseScopes_ShouldReturnMultipleScopes_WhenScopeStringContainsMultipleScopesSeparatedBySpaces
  fullName: Authentica.Service.Identity.Tests.UnitTests.ScopeProviderTests.ParseScopes_ShouldReturnMultipleScopes_WhenScopeStringContainsMultipleScopesSeparatedBySpaces()
  nameWithType: ScopeProviderTests.ParseScopes_ShouldReturnMultipleScopes_WhenScopeStringContainsMultipleScopesSeparatedBySpaces()
- uid: Authentica.Service.Identity.Tests.UnitTests.ScopeProviderTests.ParseScopes_ShouldReturnMultipleScopes_WhenScopeStringContainsMultipleScopesSeparatedBySpaces*
  name: ParseScopes_ShouldReturnMultipleScopes_WhenScopeStringContainsMultipleScopesSeparatedBySpaces
  href: api/Authentica.Service.Identity.Tests.UnitTests.ScopeProviderTests.html#Authentica_Service_Identity_Tests_UnitTests_ScopeProviderTests_ParseScopes_ShouldReturnMultipleScopes_WhenScopeStringContainsMultipleScopesSeparatedBySpaces_
  commentId: Overload:Authentica.Service.Identity.Tests.UnitTests.ScopeProviderTests.ParseScopes_ShouldReturnMultipleScopes_WhenScopeStringContainsMultipleScopesSeparatedBySpaces
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.UnitTests.ScopeProviderTests.ParseScopes_ShouldReturnMultipleScopes_WhenScopeStringContainsMultipleScopesSeparatedBySpaces
  nameWithType: ScopeProviderTests.ParseScopes_ShouldReturnMultipleScopes_WhenScopeStringContainsMultipleScopesSeparatedBySpaces
- uid: Authentica.Service.Identity.Tests.UnitTests.ScopeProviderTests.ParseScopes_ShouldReturnSingleScope_WhenScopeStringContainsOneScope
  name: ParseScopes_ShouldReturnSingleScope_WhenScopeStringContainsOneScope()
  href: api/Authentica.Service.Identity.Tests.UnitTests.ScopeProviderTests.html#Authentica_Service_Identity_Tests_UnitTests_ScopeProviderTests_ParseScopes_ShouldReturnSingleScope_WhenScopeStringContainsOneScope
  commentId: M:Authentica.Service.Identity.Tests.UnitTests.ScopeProviderTests.ParseScopes_ShouldReturnSingleScope_WhenScopeStringContainsOneScope
  fullName: Authentica.Service.Identity.Tests.UnitTests.ScopeProviderTests.ParseScopes_ShouldReturnSingleScope_WhenScopeStringContainsOneScope()
  nameWithType: ScopeProviderTests.ParseScopes_ShouldReturnSingleScope_WhenScopeStringContainsOneScope()
- uid: Authentica.Service.Identity.Tests.UnitTests.ScopeProviderTests.ParseScopes_ShouldReturnSingleScope_WhenScopeStringContainsOneScope*
  name: ParseScopes_ShouldReturnSingleScope_WhenScopeStringContainsOneScope
  href: api/Authentica.Service.Identity.Tests.UnitTests.ScopeProviderTests.html#Authentica_Service_Identity_Tests_UnitTests_ScopeProviderTests_ParseScopes_ShouldReturnSingleScope_WhenScopeStringContainsOneScope_
  commentId: Overload:Authentica.Service.Identity.Tests.UnitTests.ScopeProviderTests.ParseScopes_ShouldReturnSingleScope_WhenScopeStringContainsOneScope
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.UnitTests.ScopeProviderTests.ParseScopes_ShouldReturnSingleScope_WhenScopeStringContainsOneScope
  nameWithType: ScopeProviderTests.ParseScopes_ShouldReturnSingleScope_WhenScopeStringContainsOneScope
- uid: Authentica.Service.Identity.Tests.UnitTests.ScopeProviderTests.ParseScopes_ShouldTrimScopes_WhenScopeStringContainsWhitespaceAroundScopes
  name: ParseScopes_ShouldTrimScopes_WhenScopeStringContainsWhitespaceAroundScopes()
  href: api/Authentica.Service.Identity.Tests.UnitTests.ScopeProviderTests.html#Authentica_Service_Identity_Tests_UnitTests_ScopeProviderTests_ParseScopes_ShouldTrimScopes_WhenScopeStringContainsWhitespaceAroundScopes
  commentId: M:Authentica.Service.Identity.Tests.UnitTests.ScopeProviderTests.ParseScopes_ShouldTrimScopes_WhenScopeStringContainsWhitespaceAroundScopes
  fullName: Authentica.Service.Identity.Tests.UnitTests.ScopeProviderTests.ParseScopes_ShouldTrimScopes_WhenScopeStringContainsWhitespaceAroundScopes()
  nameWithType: ScopeProviderTests.ParseScopes_ShouldTrimScopes_WhenScopeStringContainsWhitespaceAroundScopes()
- uid: Authentica.Service.Identity.Tests.UnitTests.ScopeProviderTests.ParseScopes_ShouldTrimScopes_WhenScopeStringContainsWhitespaceAroundScopes*
  name: ParseScopes_ShouldTrimScopes_WhenScopeStringContainsWhitespaceAroundScopes
  href: api/Authentica.Service.Identity.Tests.UnitTests.ScopeProviderTests.html#Authentica_Service_Identity_Tests_UnitTests_ScopeProviderTests_ParseScopes_ShouldTrimScopes_WhenScopeStringContainsWhitespaceAroundScopes_
  commentId: Overload:Authentica.Service.Identity.Tests.UnitTests.ScopeProviderTests.ParseScopes_ShouldTrimScopes_WhenScopeStringContainsWhitespaceAroundScopes
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.UnitTests.ScopeProviderTests.ParseScopes_ShouldTrimScopes_WhenScopeStringContainsWhitespaceAroundScopes
  nameWithType: ScopeProviderTests.ParseScopes_ShouldTrimScopes_WhenScopeStringContainsWhitespaceAroundScopes
- uid: Authentica.Service.Identity.Tests.UnitTests.ScopeProviderTests.Setup
  name: Setup()
  href: api/Authentica.Service.Identity.Tests.UnitTests.ScopeProviderTests.html#Authentica_Service_Identity_Tests_UnitTests_ScopeProviderTests_Setup
  commentId: M:Authentica.Service.Identity.Tests.UnitTests.ScopeProviderTests.Setup
  fullName: Authentica.Service.Identity.Tests.UnitTests.ScopeProviderTests.Setup()
  nameWithType: ScopeProviderTests.Setup()
- uid: Authentica.Service.Identity.Tests.UnitTests.ScopeProviderTests.Setup*
  name: Setup
  href: api/Authentica.Service.Identity.Tests.UnitTests.ScopeProviderTests.html#Authentica_Service_Identity_Tests_UnitTests_ScopeProviderTests_Setup_
  commentId: Overload:Authentica.Service.Identity.Tests.UnitTests.ScopeProviderTests.Setup
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.UnitTests.ScopeProviderTests.Setup
  nameWithType: ScopeProviderTests.Setup
- uid: Authentica.Service.Identity.Tests.UnitTests.SessionWriteStoreTests
  name: SessionWriteStoreTests
  href: api/Authentica.Service.Identity.Tests.UnitTests.SessionWriteStoreTests.html
  commentId: T:Authentica.Service.Identity.Tests.UnitTests.SessionWriteStoreTests
  fullName: Authentica.Service.Identity.Tests.UnitTests.SessionWriteStoreTests
  nameWithType: SessionWriteStoreTests
- uid: Authentica.Service.Identity.Tests.UnitTests.SessionWriteStoreTests.CreateAsync_Should_AddSessionToDbSet_And_SaveChanges
  name: CreateAsync_Should_AddSessionToDbSet_And_SaveChanges()
  href: api/Authentica.Service.Identity.Tests.UnitTests.SessionWriteStoreTests.html#Authentica_Service_Identity_Tests_UnitTests_SessionWriteStoreTests_CreateAsync_Should_AddSessionToDbSet_And_SaveChanges
  commentId: M:Authentica.Service.Identity.Tests.UnitTests.SessionWriteStoreTests.CreateAsync_Should_AddSessionToDbSet_And_SaveChanges
  fullName: Authentica.Service.Identity.Tests.UnitTests.SessionWriteStoreTests.CreateAsync_Should_AddSessionToDbSet_And_SaveChanges()
  nameWithType: SessionWriteStoreTests.CreateAsync_Should_AddSessionToDbSet_And_SaveChanges()
- uid: Authentica.Service.Identity.Tests.UnitTests.SessionWriteStoreTests.CreateAsync_Should_AddSessionToDbSet_And_SaveChanges*
  name: CreateAsync_Should_AddSessionToDbSet_And_SaveChanges
  href: api/Authentica.Service.Identity.Tests.UnitTests.SessionWriteStoreTests.html#Authentica_Service_Identity_Tests_UnitTests_SessionWriteStoreTests_CreateAsync_Should_AddSessionToDbSet_And_SaveChanges_
  commentId: Overload:Authentica.Service.Identity.Tests.UnitTests.SessionWriteStoreTests.CreateAsync_Should_AddSessionToDbSet_And_SaveChanges
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.UnitTests.SessionWriteStoreTests.CreateAsync_Should_AddSessionToDbSet_And_SaveChanges
  nameWithType: SessionWriteStoreTests.CreateAsync_Should_AddSessionToDbSet_And_SaveChanges
- uid: Authentica.Service.Identity.Tests.UnitTests.SessionWriteStoreTests.CreateAsync_Should_ThrowException_When_AddAsyncFails
  name: CreateAsync_Should_ThrowException_When_AddAsyncFails()
  href: api/Authentica.Service.Identity.Tests.UnitTests.SessionWriteStoreTests.html#Authentica_Service_Identity_Tests_UnitTests_SessionWriteStoreTests_CreateAsync_Should_ThrowException_When_AddAsyncFails
  commentId: M:Authentica.Service.Identity.Tests.UnitTests.SessionWriteStoreTests.CreateAsync_Should_ThrowException_When_AddAsyncFails
  fullName: Authentica.Service.Identity.Tests.UnitTests.SessionWriteStoreTests.CreateAsync_Should_ThrowException_When_AddAsyncFails()
  nameWithType: SessionWriteStoreTests.CreateAsync_Should_ThrowException_When_AddAsyncFails()
- uid: Authentica.Service.Identity.Tests.UnitTests.SessionWriteStoreTests.CreateAsync_Should_ThrowException_When_AddAsyncFails*
  name: CreateAsync_Should_ThrowException_When_AddAsyncFails
  href: api/Authentica.Service.Identity.Tests.UnitTests.SessionWriteStoreTests.html#Authentica_Service_Identity_Tests_UnitTests_SessionWriteStoreTests_CreateAsync_Should_ThrowException_When_AddAsyncFails_
  commentId: Overload:Authentica.Service.Identity.Tests.UnitTests.SessionWriteStoreTests.CreateAsync_Should_ThrowException_When_AddAsyncFails
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.UnitTests.SessionWriteStoreTests.CreateAsync_Should_ThrowException_When_AddAsyncFails
  nameWithType: SessionWriteStoreTests.CreateAsync_Should_ThrowException_When_AddAsyncFails
- uid: Authentica.Service.Identity.Tests.UnitTests.SessionWriteStoreTests.SetUp
  name: SetUp()
  href: api/Authentica.Service.Identity.Tests.UnitTests.SessionWriteStoreTests.html#Authentica_Service_Identity_Tests_UnitTests_SessionWriteStoreTests_SetUp
  commentId: M:Authentica.Service.Identity.Tests.UnitTests.SessionWriteStoreTests.SetUp
  fullName: Authentica.Service.Identity.Tests.UnitTests.SessionWriteStoreTests.SetUp()
  nameWithType: SessionWriteStoreTests.SetUp()
- uid: Authentica.Service.Identity.Tests.UnitTests.SessionWriteStoreTests.SetUp*
  name: SetUp
  href: api/Authentica.Service.Identity.Tests.UnitTests.SessionWriteStoreTests.html#Authentica_Service_Identity_Tests_UnitTests_SessionWriteStoreTests_SetUp_
  commentId: Overload:Authentica.Service.Identity.Tests.UnitTests.SessionWriteStoreTests.SetUp
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.UnitTests.SessionWriteStoreTests.SetUp
  nameWithType: SessionWriteStoreTests.SetUp
- uid: Authentica.Service.Identity.Tests.UnitTests.UserReadStoreTests
  name: UserReadStoreTests
  href: api/Authentica.Service.Identity.Tests.UnitTests.UserReadStoreTests.html
  commentId: T:Authentica.Service.Identity.Tests.UnitTests.UserReadStoreTests
  fullName: Authentica.Service.Identity.Tests.UnitTests.UserReadStoreTests
  nameWithType: UserReadStoreTests
- uid: Authentica.Service.Identity.Tests.UnitTests.UserReadStoreTests.GetAllUsersAsync_ReturnsListOfUsers
  name: GetAllUsersAsync_ReturnsListOfUsers()
  href: api/Authentica.Service.Identity.Tests.UnitTests.UserReadStoreTests.html#Authentica_Service_Identity_Tests_UnitTests_UserReadStoreTests_GetAllUsersAsync_ReturnsListOfUsers
  commentId: M:Authentica.Service.Identity.Tests.UnitTests.UserReadStoreTests.GetAllUsersAsync_ReturnsListOfUsers
  fullName: Authentica.Service.Identity.Tests.UnitTests.UserReadStoreTests.GetAllUsersAsync_ReturnsListOfUsers()
  nameWithType: UserReadStoreTests.GetAllUsersAsync_ReturnsListOfUsers()
- uid: Authentica.Service.Identity.Tests.UnitTests.UserReadStoreTests.GetAllUsersAsync_ReturnsListOfUsers*
  name: GetAllUsersAsync_ReturnsListOfUsers
  href: api/Authentica.Service.Identity.Tests.UnitTests.UserReadStoreTests.html#Authentica_Service_Identity_Tests_UnitTests_UserReadStoreTests_GetAllUsersAsync_ReturnsListOfUsers_
  commentId: Overload:Authentica.Service.Identity.Tests.UnitTests.UserReadStoreTests.GetAllUsersAsync_ReturnsListOfUsers
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.UnitTests.UserReadStoreTests.GetAllUsersAsync_ReturnsListOfUsers
  nameWithType: UserReadStoreTests.GetAllUsersAsync_ReturnsListOfUsers
- uid: Authentica.Service.Identity.Tests.UnitTests.UserReadStoreTests.GetUserByEmailAsync_String_WhenUserDoesNotExist_ReturnsFailedResult
  name: GetUserByEmailAsync_String_WhenUserDoesNotExist_ReturnsFailedResult()
  href: api/Authentica.Service.Identity.Tests.UnitTests.UserReadStoreTests.html#Authentica_Service_Identity_Tests_UnitTests_UserReadStoreTests_GetUserByEmailAsync_String_WhenUserDoesNotExist_ReturnsFailedResult
  commentId: M:Authentica.Service.Identity.Tests.UnitTests.UserReadStoreTests.GetUserByEmailAsync_String_WhenUserDoesNotExist_ReturnsFailedResult
  fullName: Authentica.Service.Identity.Tests.UnitTests.UserReadStoreTests.GetUserByEmailAsync_String_WhenUserDoesNotExist_ReturnsFailedResult()
  nameWithType: UserReadStoreTests.GetUserByEmailAsync_String_WhenUserDoesNotExist_ReturnsFailedResult()
- uid: Authentica.Service.Identity.Tests.UnitTests.UserReadStoreTests.GetUserByEmailAsync_String_WhenUserDoesNotExist_ReturnsFailedResult*
  name: GetUserByEmailAsync_String_WhenUserDoesNotExist_ReturnsFailedResult
  href: api/Authentica.Service.Identity.Tests.UnitTests.UserReadStoreTests.html#Authentica_Service_Identity_Tests_UnitTests_UserReadStoreTests_GetUserByEmailAsync_String_WhenUserDoesNotExist_ReturnsFailedResult_
  commentId: Overload:Authentica.Service.Identity.Tests.UnitTests.UserReadStoreTests.GetUserByEmailAsync_String_WhenUserDoesNotExist_ReturnsFailedResult
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.UnitTests.UserReadStoreTests.GetUserByEmailAsync_String_WhenUserDoesNotExist_ReturnsFailedResult
  nameWithType: UserReadStoreTests.GetUserByEmailAsync_String_WhenUserDoesNotExist_ReturnsFailedResult
- uid: Authentica.Service.Identity.Tests.UnitTests.UserReadStoreTests.GetUserByEmailAsync_String_WhenUserExists_ReturnsSuccessResult
  name: GetUserByEmailAsync_String_WhenUserExists_ReturnsSuccessResult()
  href: api/Authentica.Service.Identity.Tests.UnitTests.UserReadStoreTests.html#Authentica_Service_Identity_Tests_UnitTests_UserReadStoreTests_GetUserByEmailAsync_String_WhenUserExists_ReturnsSuccessResult
  commentId: M:Authentica.Service.Identity.Tests.UnitTests.UserReadStoreTests.GetUserByEmailAsync_String_WhenUserExists_ReturnsSuccessResult
  fullName: Authentica.Service.Identity.Tests.UnitTests.UserReadStoreTests.GetUserByEmailAsync_String_WhenUserExists_ReturnsSuccessResult()
  nameWithType: UserReadStoreTests.GetUserByEmailAsync_String_WhenUserExists_ReturnsSuccessResult()
- uid: Authentica.Service.Identity.Tests.UnitTests.UserReadStoreTests.GetUserByEmailAsync_String_WhenUserExists_ReturnsSuccessResult*
  name: GetUserByEmailAsync_String_WhenUserExists_ReturnsSuccessResult
  href: api/Authentica.Service.Identity.Tests.UnitTests.UserReadStoreTests.html#Authentica_Service_Identity_Tests_UnitTests_UserReadStoreTests_GetUserByEmailAsync_String_WhenUserExists_ReturnsSuccessResult_
  commentId: Overload:Authentica.Service.Identity.Tests.UnitTests.UserReadStoreTests.GetUserByEmailAsync_String_WhenUserExists_ReturnsSuccessResult
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.UnitTests.UserReadStoreTests.GetUserByEmailAsync_String_WhenUserExists_ReturnsSuccessResult
  nameWithType: UserReadStoreTests.GetUserByEmailAsync_String_WhenUserExists_ReturnsSuccessResult
- uid: Authentica.Service.Identity.Tests.UnitTests.UserReadStoreTests.GetUserByEmailAsync_WhenUserDoesNotExist_ReturnsFailedResult
  name: GetUserByEmailAsync_WhenUserDoesNotExist_ReturnsFailedResult()
  href: api/Authentica.Service.Identity.Tests.UnitTests.UserReadStoreTests.html#Authentica_Service_Identity_Tests_UnitTests_UserReadStoreTests_GetUserByEmailAsync_WhenUserDoesNotExist_ReturnsFailedResult
  commentId: M:Authentica.Service.Identity.Tests.UnitTests.UserReadStoreTests.GetUserByEmailAsync_WhenUserDoesNotExist_ReturnsFailedResult
  fullName: Authentica.Service.Identity.Tests.UnitTests.UserReadStoreTests.GetUserByEmailAsync_WhenUserDoesNotExist_ReturnsFailedResult()
  nameWithType: UserReadStoreTests.GetUserByEmailAsync_WhenUserDoesNotExist_ReturnsFailedResult()
- uid: Authentica.Service.Identity.Tests.UnitTests.UserReadStoreTests.GetUserByEmailAsync_WhenUserDoesNotExist_ReturnsFailedResult*
  name: GetUserByEmailAsync_WhenUserDoesNotExist_ReturnsFailedResult
  href: api/Authentica.Service.Identity.Tests.UnitTests.UserReadStoreTests.html#Authentica_Service_Identity_Tests_UnitTests_UserReadStoreTests_GetUserByEmailAsync_WhenUserDoesNotExist_ReturnsFailedResult_
  commentId: Overload:Authentica.Service.Identity.Tests.UnitTests.UserReadStoreTests.GetUserByEmailAsync_WhenUserDoesNotExist_ReturnsFailedResult
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.UnitTests.UserReadStoreTests.GetUserByEmailAsync_WhenUserDoesNotExist_ReturnsFailedResult
  nameWithType: UserReadStoreTests.GetUserByEmailAsync_WhenUserDoesNotExist_ReturnsFailedResult
- uid: Authentica.Service.Identity.Tests.UnitTests.UserReadStoreTests.GetUserByEmailAsync_WhenUserExists_ReturnsSuccessResult
  name: GetUserByEmailAsync_WhenUserExists_ReturnsSuccessResult()
  href: api/Authentica.Service.Identity.Tests.UnitTests.UserReadStoreTests.html#Authentica_Service_Identity_Tests_UnitTests_UserReadStoreTests_GetUserByEmailAsync_WhenUserExists_ReturnsSuccessResult
  commentId: M:Authentica.Service.Identity.Tests.UnitTests.UserReadStoreTests.GetUserByEmailAsync_WhenUserExists_ReturnsSuccessResult
  fullName: Authentica.Service.Identity.Tests.UnitTests.UserReadStoreTests.GetUserByEmailAsync_WhenUserExists_ReturnsSuccessResult()
  nameWithType: UserReadStoreTests.GetUserByEmailAsync_WhenUserExists_ReturnsSuccessResult()
- uid: Authentica.Service.Identity.Tests.UnitTests.UserReadStoreTests.GetUserByEmailAsync_WhenUserExists_ReturnsSuccessResult*
  name: GetUserByEmailAsync_WhenUserExists_ReturnsSuccessResult
  href: api/Authentica.Service.Identity.Tests.UnitTests.UserReadStoreTests.html#Authentica_Service_Identity_Tests_UnitTests_UserReadStoreTests_GetUserByEmailAsync_WhenUserExists_ReturnsSuccessResult_
  commentId: Overload:Authentica.Service.Identity.Tests.UnitTests.UserReadStoreTests.GetUserByEmailAsync_WhenUserExists_ReturnsSuccessResult
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.UnitTests.UserReadStoreTests.GetUserByEmailAsync_WhenUserExists_ReturnsSuccessResult
  nameWithType: UserReadStoreTests.GetUserByEmailAsync_WhenUserExists_ReturnsSuccessResult
- uid: Authentica.Service.Identity.Tests.UnitTests.UserReadStoreTests.GetUserByIdAsync_WhenUserDoesNotExist_ReturnsFailedResult
  name: GetUserByIdAsync_WhenUserDoesNotExist_ReturnsFailedResult()
  href: api/Authentica.Service.Identity.Tests.UnitTests.UserReadStoreTests.html#Authentica_Service_Identity_Tests_UnitTests_UserReadStoreTests_GetUserByIdAsync_WhenUserDoesNotExist_ReturnsFailedResult
  commentId: M:Authentica.Service.Identity.Tests.UnitTests.UserReadStoreTests.GetUserByIdAsync_WhenUserDoesNotExist_ReturnsFailedResult
  fullName: Authentica.Service.Identity.Tests.UnitTests.UserReadStoreTests.GetUserByIdAsync_WhenUserDoesNotExist_ReturnsFailedResult()
  nameWithType: UserReadStoreTests.GetUserByIdAsync_WhenUserDoesNotExist_ReturnsFailedResult()
- uid: Authentica.Service.Identity.Tests.UnitTests.UserReadStoreTests.GetUserByIdAsync_WhenUserDoesNotExist_ReturnsFailedResult*
  name: GetUserByIdAsync_WhenUserDoesNotExist_ReturnsFailedResult
  href: api/Authentica.Service.Identity.Tests.UnitTests.UserReadStoreTests.html#Authentica_Service_Identity_Tests_UnitTests_UserReadStoreTests_GetUserByIdAsync_WhenUserDoesNotExist_ReturnsFailedResult_
  commentId: Overload:Authentica.Service.Identity.Tests.UnitTests.UserReadStoreTests.GetUserByIdAsync_WhenUserDoesNotExist_ReturnsFailedResult
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.UnitTests.UserReadStoreTests.GetUserByIdAsync_WhenUserDoesNotExist_ReturnsFailedResult
  nameWithType: UserReadStoreTests.GetUserByIdAsync_WhenUserDoesNotExist_ReturnsFailedResult
- uid: Authentica.Service.Identity.Tests.UnitTests.UserReadStoreTests.GetUserByIdAsync_WhenUserExists_ReturnsSuccessResult
  name: GetUserByIdAsync_WhenUserExists_ReturnsSuccessResult()
  href: api/Authentica.Service.Identity.Tests.UnitTests.UserReadStoreTests.html#Authentica_Service_Identity_Tests_UnitTests_UserReadStoreTests_GetUserByIdAsync_WhenUserExists_ReturnsSuccessResult
  commentId: M:Authentica.Service.Identity.Tests.UnitTests.UserReadStoreTests.GetUserByIdAsync_WhenUserExists_ReturnsSuccessResult
  fullName: Authentica.Service.Identity.Tests.UnitTests.UserReadStoreTests.GetUserByIdAsync_WhenUserExists_ReturnsSuccessResult()
  nameWithType: UserReadStoreTests.GetUserByIdAsync_WhenUserExists_ReturnsSuccessResult()
- uid: Authentica.Service.Identity.Tests.UnitTests.UserReadStoreTests.GetUserByIdAsync_WhenUserExists_ReturnsSuccessResult*
  name: GetUserByIdAsync_WhenUserExists_ReturnsSuccessResult
  href: api/Authentica.Service.Identity.Tests.UnitTests.UserReadStoreTests.html#Authentica_Service_Identity_Tests_UnitTests_UserReadStoreTests_GetUserByIdAsync_WhenUserExists_ReturnsSuccessResult_
  commentId: Overload:Authentica.Service.Identity.Tests.UnitTests.UserReadStoreTests.GetUserByIdAsync_WhenUserExists_ReturnsSuccessResult
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.UnitTests.UserReadStoreTests.GetUserByIdAsync_WhenUserExists_ReturnsSuccessResult
  nameWithType: UserReadStoreTests.GetUserByIdAsync_WhenUserExists_ReturnsSuccessResult
- uid: Authentica.Service.Identity.Tests.UnitTests.UserReadStoreTests.GetUserRolesAsync_WhenUserExists_ReturnsUserRoles
  name: GetUserRolesAsync_WhenUserExists_ReturnsUserRoles()
  href: api/Authentica.Service.Identity.Tests.UnitTests.UserReadStoreTests.html#Authentica_Service_Identity_Tests_UnitTests_UserReadStoreTests_GetUserRolesAsync_WhenUserExists_ReturnsUserRoles
  commentId: M:Authentica.Service.Identity.Tests.UnitTests.UserReadStoreTests.GetUserRolesAsync_WhenUserExists_ReturnsUserRoles
  fullName: Authentica.Service.Identity.Tests.UnitTests.UserReadStoreTests.GetUserRolesAsync_WhenUserExists_ReturnsUserRoles()
  nameWithType: UserReadStoreTests.GetUserRolesAsync_WhenUserExists_ReturnsUserRoles()
- uid: Authentica.Service.Identity.Tests.UnitTests.UserReadStoreTests.GetUserRolesAsync_WhenUserExists_ReturnsUserRoles*
  name: GetUserRolesAsync_WhenUserExists_ReturnsUserRoles
  href: api/Authentica.Service.Identity.Tests.UnitTests.UserReadStoreTests.html#Authentica_Service_Identity_Tests_UnitTests_UserReadStoreTests_GetUserRolesAsync_WhenUserExists_ReturnsUserRoles_
  commentId: Overload:Authentica.Service.Identity.Tests.UnitTests.UserReadStoreTests.GetUserRolesAsync_WhenUserExists_ReturnsUserRoles
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.UnitTests.UserReadStoreTests.GetUserRolesAsync_WhenUserExists_ReturnsUserRoles
  nameWithType: UserReadStoreTests.GetUserRolesAsync_WhenUserExists_ReturnsUserRoles
- uid: Authentica.Service.Identity.Tests.UnitTests.UserReadStoreTests.SetUp
  name: SetUp()
  href: api/Authentica.Service.Identity.Tests.UnitTests.UserReadStoreTests.html#Authentica_Service_Identity_Tests_UnitTests_UserReadStoreTests_SetUp
  commentId: M:Authentica.Service.Identity.Tests.UnitTests.UserReadStoreTests.SetUp
  fullName: Authentica.Service.Identity.Tests.UnitTests.UserReadStoreTests.SetUp()
  nameWithType: UserReadStoreTests.SetUp()
- uid: Authentica.Service.Identity.Tests.UnitTests.UserReadStoreTests.SetUp*
  name: SetUp
  href: api/Authentica.Service.Identity.Tests.UnitTests.UserReadStoreTests.html#Authentica_Service_Identity_Tests_UnitTests_UserReadStoreTests_SetUp_
  commentId: Overload:Authentica.Service.Identity.Tests.UnitTests.UserReadStoreTests.SetUp
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.UnitTests.UserReadStoreTests.SetUp
  nameWithType: UserReadStoreTests.SetUp
- uid: Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests
  name: UserWriteStoreTests
  href: api/Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.html
  commentId: T:Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests
  fullName: Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests
  nameWithType: UserWriteStoreTests
- uid: Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.ConfirmEmailAsync_WhenTokenIsInvalid_ReturnsFailureResult
  name: ConfirmEmailAsync_WhenTokenIsInvalid_ReturnsFailureResult()
  href: api/Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.html#Authentica_Service_Identity_Tests_UnitTests_UserWriteStoreTests_ConfirmEmailAsync_WhenTokenIsInvalid_ReturnsFailureResult
  commentId: M:Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.ConfirmEmailAsync_WhenTokenIsInvalid_ReturnsFailureResult
  fullName: Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.ConfirmEmailAsync_WhenTokenIsInvalid_ReturnsFailureResult()
  nameWithType: UserWriteStoreTests.ConfirmEmailAsync_WhenTokenIsInvalid_ReturnsFailureResult()
- uid: Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.ConfirmEmailAsync_WhenTokenIsInvalid_ReturnsFailureResult*
  name: ConfirmEmailAsync_WhenTokenIsInvalid_ReturnsFailureResult
  href: api/Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.html#Authentica_Service_Identity_Tests_UnitTests_UserWriteStoreTests_ConfirmEmailAsync_WhenTokenIsInvalid_ReturnsFailureResult_
  commentId: Overload:Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.ConfirmEmailAsync_WhenTokenIsInvalid_ReturnsFailureResult
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.ConfirmEmailAsync_WhenTokenIsInvalid_ReturnsFailureResult
  nameWithType: UserWriteStoreTests.ConfirmEmailAsync_WhenTokenIsInvalid_ReturnsFailureResult
- uid: Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.ConfirmEmailAsync_WhenTokenIsNullOrWhiteSpace_ThrowsArgumentException
  name: ConfirmEmailAsync_WhenTokenIsNullOrWhiteSpace_ThrowsArgumentException()
  href: api/Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.html#Authentica_Service_Identity_Tests_UnitTests_UserWriteStoreTests_ConfirmEmailAsync_WhenTokenIsNullOrWhiteSpace_ThrowsArgumentException
  commentId: M:Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.ConfirmEmailAsync_WhenTokenIsNullOrWhiteSpace_ThrowsArgumentException
  fullName: Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.ConfirmEmailAsync_WhenTokenIsNullOrWhiteSpace_ThrowsArgumentException()
  nameWithType: UserWriteStoreTests.ConfirmEmailAsync_WhenTokenIsNullOrWhiteSpace_ThrowsArgumentException()
- uid: Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.ConfirmEmailAsync_WhenTokenIsNullOrWhiteSpace_ThrowsArgumentException*
  name: ConfirmEmailAsync_WhenTokenIsNullOrWhiteSpace_ThrowsArgumentException
  href: api/Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.html#Authentica_Service_Identity_Tests_UnitTests_UserWriteStoreTests_ConfirmEmailAsync_WhenTokenIsNullOrWhiteSpace_ThrowsArgumentException_
  commentId: Overload:Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.ConfirmEmailAsync_WhenTokenIsNullOrWhiteSpace_ThrowsArgumentException
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.ConfirmEmailAsync_WhenTokenIsNullOrWhiteSpace_ThrowsArgumentException
  nameWithType: UserWriteStoreTests.ConfirmEmailAsync_WhenTokenIsNullOrWhiteSpace_ThrowsArgumentException
- uid: Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.ConfirmEmailAsync_WhenTokenIsValid_ReturnsSuccessResult
  name: ConfirmEmailAsync_WhenTokenIsValid_ReturnsSuccessResult()
  href: api/Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.html#Authentica_Service_Identity_Tests_UnitTests_UserWriteStoreTests_ConfirmEmailAsync_WhenTokenIsValid_ReturnsSuccessResult
  commentId: M:Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.ConfirmEmailAsync_WhenTokenIsValid_ReturnsSuccessResult
  fullName: Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.ConfirmEmailAsync_WhenTokenIsValid_ReturnsSuccessResult()
  nameWithType: UserWriteStoreTests.ConfirmEmailAsync_WhenTokenIsValid_ReturnsSuccessResult()
- uid: Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.ConfirmEmailAsync_WhenTokenIsValid_ReturnsSuccessResult*
  name: ConfirmEmailAsync_WhenTokenIsValid_ReturnsSuccessResult
  href: api/Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.html#Authentica_Service_Identity_Tests_UnitTests_UserWriteStoreTests_ConfirmEmailAsync_WhenTokenIsValid_ReturnsSuccessResult_
  commentId: Overload:Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.ConfirmEmailAsync_WhenTokenIsValid_ReturnsSuccessResult
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.ConfirmEmailAsync_WhenTokenIsValid_ReturnsSuccessResult
  nameWithType: UserWriteStoreTests.ConfirmEmailAsync_WhenTokenIsValid_ReturnsSuccessResult
- uid: Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.CreateUserAsync_WhenCreationFails_ReturnsFailureResult
  name: CreateUserAsync_WhenCreationFails_ReturnsFailureResult()
  href: api/Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.html#Authentica_Service_Identity_Tests_UnitTests_UserWriteStoreTests_CreateUserAsync_WhenCreationFails_ReturnsFailureResult
  commentId: M:Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.CreateUserAsync_WhenCreationFails_ReturnsFailureResult
  fullName: Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.CreateUserAsync_WhenCreationFails_ReturnsFailureResult()
  nameWithType: UserWriteStoreTests.CreateUserAsync_WhenCreationFails_ReturnsFailureResult()
- uid: Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.CreateUserAsync_WhenCreationFails_ReturnsFailureResult*
  name: CreateUserAsync_WhenCreationFails_ReturnsFailureResult
  href: api/Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.html#Authentica_Service_Identity_Tests_UnitTests_UserWriteStoreTests_CreateUserAsync_WhenCreationFails_ReturnsFailureResult_
  commentId: Overload:Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.CreateUserAsync_WhenCreationFails_ReturnsFailureResult
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.CreateUserAsync_WhenCreationFails_ReturnsFailureResult
  nameWithType: UserWriteStoreTests.CreateUserAsync_WhenCreationFails_ReturnsFailureResult
- uid: Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.CreateUserAsync_WhenSuccessful_ReturnsSuccessResult
  name: CreateUserAsync_WhenSuccessful_ReturnsSuccessResult()
  href: api/Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.html#Authentica_Service_Identity_Tests_UnitTests_UserWriteStoreTests_CreateUserAsync_WhenSuccessful_ReturnsSuccessResult
  commentId: M:Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.CreateUserAsync_WhenSuccessful_ReturnsSuccessResult
  fullName: Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.CreateUserAsync_WhenSuccessful_ReturnsSuccessResult()
  nameWithType: UserWriteStoreTests.CreateUserAsync_WhenSuccessful_ReturnsSuccessResult()
- uid: Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.CreateUserAsync_WhenSuccessful_ReturnsSuccessResult*
  name: CreateUserAsync_WhenSuccessful_ReturnsSuccessResult
  href: api/Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.html#Authentica_Service_Identity_Tests_UnitTests_UserWriteStoreTests_CreateUserAsync_WhenSuccessful_ReturnsSuccessResult_
  commentId: Overload:Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.CreateUserAsync_WhenSuccessful_ReturnsSuccessResult
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.CreateUserAsync_WhenSuccessful_ReturnsSuccessResult
  nameWithType: UserWriteStoreTests.CreateUserAsync_WhenSuccessful_ReturnsSuccessResult
- uid: Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.RedeemMultiFactorRecoveryCodeAsync_WhenExceptionIsThrown_ReturnsFailureResult
  name: RedeemMultiFactorRecoveryCodeAsync_WhenExceptionIsThrown_ReturnsFailureResult()
  href: api/Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.html#Authentica_Service_Identity_Tests_UnitTests_UserWriteStoreTests_RedeemMultiFactorRecoveryCodeAsync_WhenExceptionIsThrown_ReturnsFailureResult
  commentId: M:Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.RedeemMultiFactorRecoveryCodeAsync_WhenExceptionIsThrown_ReturnsFailureResult
  fullName: Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.RedeemMultiFactorRecoveryCodeAsync_WhenExceptionIsThrown_ReturnsFailureResult()
  nameWithType: UserWriteStoreTests.RedeemMultiFactorRecoveryCodeAsync_WhenExceptionIsThrown_ReturnsFailureResult()
- uid: Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.RedeemMultiFactorRecoveryCodeAsync_WhenExceptionIsThrown_ReturnsFailureResult*
  name: RedeemMultiFactorRecoveryCodeAsync_WhenExceptionIsThrown_ReturnsFailureResult
  href: api/Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.html#Authentica_Service_Identity_Tests_UnitTests_UserWriteStoreTests_RedeemMultiFactorRecoveryCodeAsync_WhenExceptionIsThrown_ReturnsFailureResult_
  commentId: Overload:Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.RedeemMultiFactorRecoveryCodeAsync_WhenExceptionIsThrown_ReturnsFailureResult
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.RedeemMultiFactorRecoveryCodeAsync_WhenExceptionIsThrown_ReturnsFailureResult
  nameWithType: UserWriteStoreTests.RedeemMultiFactorRecoveryCodeAsync_WhenExceptionIsThrown_ReturnsFailureResult
- uid: Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.RedeemMultiFactorRecoveryCodeAsync_WhenRedemptionFails_ReturnsFailureResult
  name: RedeemMultiFactorRecoveryCodeAsync_WhenRedemptionFails_ReturnsFailureResult()
  href: api/Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.html#Authentica_Service_Identity_Tests_UnitTests_UserWriteStoreTests_RedeemMultiFactorRecoveryCodeAsync_WhenRedemptionFails_ReturnsFailureResult
  commentId: M:Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.RedeemMultiFactorRecoveryCodeAsync_WhenRedemptionFails_ReturnsFailureResult
  fullName: Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.RedeemMultiFactorRecoveryCodeAsync_WhenRedemptionFails_ReturnsFailureResult()
  nameWithType: UserWriteStoreTests.RedeemMultiFactorRecoveryCodeAsync_WhenRedemptionFails_ReturnsFailureResult()
- uid: Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.RedeemMultiFactorRecoveryCodeAsync_WhenRedemptionFails_ReturnsFailureResult*
  name: RedeemMultiFactorRecoveryCodeAsync_WhenRedemptionFails_ReturnsFailureResult
  href: api/Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.html#Authentica_Service_Identity_Tests_UnitTests_UserWriteStoreTests_RedeemMultiFactorRecoveryCodeAsync_WhenRedemptionFails_ReturnsFailureResult_
  commentId: Overload:Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.RedeemMultiFactorRecoveryCodeAsync_WhenRedemptionFails_ReturnsFailureResult
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.RedeemMultiFactorRecoveryCodeAsync_WhenRedemptionFails_ReturnsFailureResult
  nameWithType: UserWriteStoreTests.RedeemMultiFactorRecoveryCodeAsync_WhenRedemptionFails_ReturnsFailureResult
- uid: Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.RedeemMultiFactorRecoveryCodeAsync_WhenRedemptionSucceeds_ReturnsSuccessResult
  name: RedeemMultiFactorRecoveryCodeAsync_WhenRedemptionSucceeds_ReturnsSuccessResult()
  href: api/Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.html#Authentica_Service_Identity_Tests_UnitTests_UserWriteStoreTests_RedeemMultiFactorRecoveryCodeAsync_WhenRedemptionSucceeds_ReturnsSuccessResult
  commentId: M:Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.RedeemMultiFactorRecoveryCodeAsync_WhenRedemptionSucceeds_ReturnsSuccessResult
  fullName: Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.RedeemMultiFactorRecoveryCodeAsync_WhenRedemptionSucceeds_ReturnsSuccessResult()
  nameWithType: UserWriteStoreTests.RedeemMultiFactorRecoveryCodeAsync_WhenRedemptionSucceeds_ReturnsSuccessResult()
- uid: Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.RedeemMultiFactorRecoveryCodeAsync_WhenRedemptionSucceeds_ReturnsSuccessResult*
  name: RedeemMultiFactorRecoveryCodeAsync_WhenRedemptionSucceeds_ReturnsSuccessResult
  href: api/Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.html#Authentica_Service_Identity_Tests_UnitTests_UserWriteStoreTests_RedeemMultiFactorRecoveryCodeAsync_WhenRedemptionSucceeds_ReturnsSuccessResult_
  commentId: Overload:Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.RedeemMultiFactorRecoveryCodeAsync_WhenRedemptionSucceeds_ReturnsSuccessResult
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.RedeemMultiFactorRecoveryCodeAsync_WhenRedemptionSucceeds_ReturnsSuccessResult
  nameWithType: UserWriteStoreTests.RedeemMultiFactorRecoveryCodeAsync_WhenRedemptionSucceeds_ReturnsSuccessResult
- uid: Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.ResetPasswordAsync_WhenTokenIsInvalid_ReturnsFailureResult
  name: ResetPasswordAsync_WhenTokenIsInvalid_ReturnsFailureResult()
  href: api/Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.html#Authentica_Service_Identity_Tests_UnitTests_UserWriteStoreTests_ResetPasswordAsync_WhenTokenIsInvalid_ReturnsFailureResult
  commentId: M:Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.ResetPasswordAsync_WhenTokenIsInvalid_ReturnsFailureResult
  fullName: Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.ResetPasswordAsync_WhenTokenIsInvalid_ReturnsFailureResult()
  nameWithType: UserWriteStoreTests.ResetPasswordAsync_WhenTokenIsInvalid_ReturnsFailureResult()
- uid: Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.ResetPasswordAsync_WhenTokenIsInvalid_ReturnsFailureResult*
  name: ResetPasswordAsync_WhenTokenIsInvalid_ReturnsFailureResult
  href: api/Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.html#Authentica_Service_Identity_Tests_UnitTests_UserWriteStoreTests_ResetPasswordAsync_WhenTokenIsInvalid_ReturnsFailureResult_
  commentId: Overload:Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.ResetPasswordAsync_WhenTokenIsInvalid_ReturnsFailureResult
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.ResetPasswordAsync_WhenTokenIsInvalid_ReturnsFailureResult
  nameWithType: UserWriteStoreTests.ResetPasswordAsync_WhenTokenIsInvalid_ReturnsFailureResult
- uid: Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.ResetPasswordAsync_WhenTokenIsNullOrWhiteSpace_ThrowsArgumentException
  name: ResetPasswordAsync_WhenTokenIsNullOrWhiteSpace_ThrowsArgumentException()
  href: api/Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.html#Authentica_Service_Identity_Tests_UnitTests_UserWriteStoreTests_ResetPasswordAsync_WhenTokenIsNullOrWhiteSpace_ThrowsArgumentException
  commentId: M:Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.ResetPasswordAsync_WhenTokenIsNullOrWhiteSpace_ThrowsArgumentException
  fullName: Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.ResetPasswordAsync_WhenTokenIsNullOrWhiteSpace_ThrowsArgumentException()
  nameWithType: UserWriteStoreTests.ResetPasswordAsync_WhenTokenIsNullOrWhiteSpace_ThrowsArgumentException()
- uid: Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.ResetPasswordAsync_WhenTokenIsNullOrWhiteSpace_ThrowsArgumentException*
  name: ResetPasswordAsync_WhenTokenIsNullOrWhiteSpace_ThrowsArgumentException
  href: api/Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.html#Authentica_Service_Identity_Tests_UnitTests_UserWriteStoreTests_ResetPasswordAsync_WhenTokenIsNullOrWhiteSpace_ThrowsArgumentException_
  commentId: Overload:Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.ResetPasswordAsync_WhenTokenIsNullOrWhiteSpace_ThrowsArgumentException
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.ResetPasswordAsync_WhenTokenIsNullOrWhiteSpace_ThrowsArgumentException
  nameWithType: UserWriteStoreTests.ResetPasswordAsync_WhenTokenIsNullOrWhiteSpace_ThrowsArgumentException
- uid: Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.ResetPasswordAsync_WhenTokenIsValid_ReturnsSuccessResult
  name: ResetPasswordAsync_WhenTokenIsValid_ReturnsSuccessResult()
  href: api/Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.html#Authentica_Service_Identity_Tests_UnitTests_UserWriteStoreTests_ResetPasswordAsync_WhenTokenIsValid_ReturnsSuccessResult
  commentId: M:Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.ResetPasswordAsync_WhenTokenIsValid_ReturnsSuccessResult
  fullName: Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.ResetPasswordAsync_WhenTokenIsValid_ReturnsSuccessResult()
  nameWithType: UserWriteStoreTests.ResetPasswordAsync_WhenTokenIsValid_ReturnsSuccessResult()
- uid: Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.ResetPasswordAsync_WhenTokenIsValid_ReturnsSuccessResult*
  name: ResetPasswordAsync_WhenTokenIsValid_ReturnsSuccessResult
  href: api/Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.html#Authentica_Service_Identity_Tests_UnitTests_UserWriteStoreTests_ResetPasswordAsync_WhenTokenIsValid_ReturnsSuccessResult_
  commentId: Overload:Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.ResetPasswordAsync_WhenTokenIsValid_ReturnsSuccessResult
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.ResetPasswordAsync_WhenTokenIsValid_ReturnsSuccessResult
  nameWithType: UserWriteStoreTests.ResetPasswordAsync_WhenTokenIsValid_ReturnsSuccessResult
- uid: Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.Setup
  name: Setup()
  href: api/Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.html#Authentica_Service_Identity_Tests_UnitTests_UserWriteStoreTests_Setup
  commentId: M:Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.Setup
  fullName: Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.Setup()
  nameWithType: UserWriteStoreTests.Setup()
- uid: Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.Setup*
  name: Setup
  href: api/Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.html#Authentica_Service_Identity_Tests_UnitTests_UserWriteStoreTests_Setup_
  commentId: Overload:Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.Setup
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.Setup
  nameWithType: UserWriteStoreTests.Setup
- uid: Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.SoftDeleteUserAsync_VerifiesUserManagerUpdateParameters
  name: SoftDeleteUserAsync_VerifiesUserManagerUpdateParameters()
  href: api/Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.html#Authentica_Service_Identity_Tests_UnitTests_UserWriteStoreTests_SoftDeleteUserAsync_VerifiesUserManagerUpdateParameters
  commentId: M:Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.SoftDeleteUserAsync_VerifiesUserManagerUpdateParameters
  fullName: Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.SoftDeleteUserAsync_VerifiesUserManagerUpdateParameters()
  nameWithType: UserWriteStoreTests.SoftDeleteUserAsync_VerifiesUserManagerUpdateParameters()
- uid: Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.SoftDeleteUserAsync_VerifiesUserManagerUpdateParameters*
  name: SoftDeleteUserAsync_VerifiesUserManagerUpdateParameters
  href: api/Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.html#Authentica_Service_Identity_Tests_UnitTests_UserWriteStoreTests_SoftDeleteUserAsync_VerifiesUserManagerUpdateParameters_
  commentId: Overload:Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.SoftDeleteUserAsync_VerifiesUserManagerUpdateParameters
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.SoftDeleteUserAsync_VerifiesUserManagerUpdateParameters
  nameWithType: UserWriteStoreTests.SoftDeleteUserAsync_VerifiesUserManagerUpdateParameters
- uid: Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.SoftDeleteUserAsync_WhenSuccessful_ReturnsSuccessResult
  name: SoftDeleteUserAsync_WhenSuccessful_ReturnsSuccessResult()
  href: api/Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.html#Authentica_Service_Identity_Tests_UnitTests_UserWriteStoreTests_SoftDeleteUserAsync_WhenSuccessful_ReturnsSuccessResult
  commentId: M:Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.SoftDeleteUserAsync_WhenSuccessful_ReturnsSuccessResult
  fullName: Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.SoftDeleteUserAsync_WhenSuccessful_ReturnsSuccessResult()
  nameWithType: UserWriteStoreTests.SoftDeleteUserAsync_WhenSuccessful_ReturnsSuccessResult()
- uid: Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.SoftDeleteUserAsync_WhenSuccessful_ReturnsSuccessResult*
  name: SoftDeleteUserAsync_WhenSuccessful_ReturnsSuccessResult
  href: api/Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.html#Authentica_Service_Identity_Tests_UnitTests_UserWriteStoreTests_SoftDeleteUserAsync_WhenSuccessful_ReturnsSuccessResult_
  commentId: Overload:Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.SoftDeleteUserAsync_WhenSuccessful_ReturnsSuccessResult
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.SoftDeleteUserAsync_WhenSuccessful_ReturnsSuccessResult
  nameWithType: UserWriteStoreTests.SoftDeleteUserAsync_WhenSuccessful_ReturnsSuccessResult
- uid: Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.SoftDeleteUserAsync_WhenUpdateFails_ReturnsFailureResult
  name: SoftDeleteUserAsync_WhenUpdateFails_ReturnsFailureResult()
  href: api/Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.html#Authentica_Service_Identity_Tests_UnitTests_UserWriteStoreTests_SoftDeleteUserAsync_WhenUpdateFails_ReturnsFailureResult
  commentId: M:Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.SoftDeleteUserAsync_WhenUpdateFails_ReturnsFailureResult
  fullName: Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.SoftDeleteUserAsync_WhenUpdateFails_ReturnsFailureResult()
  nameWithType: UserWriteStoreTests.SoftDeleteUserAsync_WhenUpdateFails_ReturnsFailureResult()
- uid: Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.SoftDeleteUserAsync_WhenUpdateFails_ReturnsFailureResult*
  name: SoftDeleteUserAsync_WhenUpdateFails_ReturnsFailureResult
  href: api/Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.html#Authentica_Service_Identity_Tests_UnitTests_UserWriteStoreTests_SoftDeleteUserAsync_WhenUpdateFails_ReturnsFailureResult_
  commentId: Overload:Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.SoftDeleteUserAsync_WhenUpdateFails_ReturnsFailureResult
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.SoftDeleteUserAsync_WhenUpdateFails_ReturnsFailureResult
  nameWithType: UserWriteStoreTests.SoftDeleteUserAsync_WhenUpdateFails_ReturnsFailureResult
- uid: Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.SoftDeleteUserAsync_WhenUserNotFound_ThrowsException
  name: SoftDeleteUserAsync_WhenUserNotFound_ThrowsException()
  href: api/Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.html#Authentica_Service_Identity_Tests_UnitTests_UserWriteStoreTests_SoftDeleteUserAsync_WhenUserNotFound_ThrowsException
  commentId: M:Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.SoftDeleteUserAsync_WhenUserNotFound_ThrowsException
  fullName: Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.SoftDeleteUserAsync_WhenUserNotFound_ThrowsException()
  nameWithType: UserWriteStoreTests.SoftDeleteUserAsync_WhenUserNotFound_ThrowsException()
- uid: Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.SoftDeleteUserAsync_WhenUserNotFound_ThrowsException*
  name: SoftDeleteUserAsync_WhenUserNotFound_ThrowsException
  href: api/Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.html#Authentica_Service_Identity_Tests_UnitTests_UserWriteStoreTests_SoftDeleteUserAsync_WhenUserNotFound_ThrowsException_
  commentId: Overload:Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.SoftDeleteUserAsync_WhenUserNotFound_ThrowsException
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.SoftDeleteUserAsync_WhenUserNotFound_ThrowsException
  nameWithType: UserWriteStoreTests.SoftDeleteUserAsync_WhenUserNotFound_ThrowsException
- uid: Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.UpdateEmailAsync_WhenExceptionIsThrown_ReturnsFailureResultWithException
  name: UpdateEmailAsync_WhenExceptionIsThrown_ReturnsFailureResultWithException()
  href: api/Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.html#Authentica_Service_Identity_Tests_UnitTests_UserWriteStoreTests_UpdateEmailAsync_WhenExceptionIsThrown_ReturnsFailureResultWithException
  commentId: M:Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.UpdateEmailAsync_WhenExceptionIsThrown_ReturnsFailureResultWithException
  fullName: Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.UpdateEmailAsync_WhenExceptionIsThrown_ReturnsFailureResultWithException()
  nameWithType: UserWriteStoreTests.UpdateEmailAsync_WhenExceptionIsThrown_ReturnsFailureResultWithException()
- uid: Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.UpdateEmailAsync_WhenExceptionIsThrown_ReturnsFailureResultWithException*
  name: UpdateEmailAsync_WhenExceptionIsThrown_ReturnsFailureResultWithException
  href: api/Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.html#Authentica_Service_Identity_Tests_UnitTests_UserWriteStoreTests_UpdateEmailAsync_WhenExceptionIsThrown_ReturnsFailureResultWithException_
  commentId: Overload:Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.UpdateEmailAsync_WhenExceptionIsThrown_ReturnsFailureResultWithException
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.UpdateEmailAsync_WhenExceptionIsThrown_ReturnsFailureResultWithException
  nameWithType: UserWriteStoreTests.UpdateEmailAsync_WhenExceptionIsThrown_ReturnsFailureResultWithException
- uid: Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.UpdateEmailAsync_WhenTokenIsInvalid_ReturnsFailureResult
  name: UpdateEmailAsync_WhenTokenIsInvalid_ReturnsFailureResult()
  href: api/Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.html#Authentica_Service_Identity_Tests_UnitTests_UserWriteStoreTests_UpdateEmailAsync_WhenTokenIsInvalid_ReturnsFailureResult
  commentId: M:Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.UpdateEmailAsync_WhenTokenIsInvalid_ReturnsFailureResult
  fullName: Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.UpdateEmailAsync_WhenTokenIsInvalid_ReturnsFailureResult()
  nameWithType: UserWriteStoreTests.UpdateEmailAsync_WhenTokenIsInvalid_ReturnsFailureResult()
- uid: Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.UpdateEmailAsync_WhenTokenIsInvalid_ReturnsFailureResult*
  name: UpdateEmailAsync_WhenTokenIsInvalid_ReturnsFailureResult
  href: api/Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.html#Authentica_Service_Identity_Tests_UnitTests_UserWriteStoreTests_UpdateEmailAsync_WhenTokenIsInvalid_ReturnsFailureResult_
  commentId: Overload:Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.UpdateEmailAsync_WhenTokenIsInvalid_ReturnsFailureResult
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.UpdateEmailAsync_WhenTokenIsInvalid_ReturnsFailureResult
  nameWithType: UserWriteStoreTests.UpdateEmailAsync_WhenTokenIsInvalid_ReturnsFailureResult
- uid: Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.UpdateEmailAsync_WhenTokenIsValid_UpdatesEmailAndReturnsSuccessResult
  name: UpdateEmailAsync_WhenTokenIsValid_UpdatesEmailAndReturnsSuccessResult()
  href: api/Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.html#Authentica_Service_Identity_Tests_UnitTests_UserWriteStoreTests_UpdateEmailAsync_WhenTokenIsValid_UpdatesEmailAndReturnsSuccessResult
  commentId: M:Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.UpdateEmailAsync_WhenTokenIsValid_UpdatesEmailAndReturnsSuccessResult
  fullName: Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.UpdateEmailAsync_WhenTokenIsValid_UpdatesEmailAndReturnsSuccessResult()
  nameWithType: UserWriteStoreTests.UpdateEmailAsync_WhenTokenIsValid_UpdatesEmailAndReturnsSuccessResult()
- uid: Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.UpdateEmailAsync_WhenTokenIsValid_UpdatesEmailAndReturnsSuccessResult*
  name: UpdateEmailAsync_WhenTokenIsValid_UpdatesEmailAndReturnsSuccessResult
  href: api/Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.html#Authentica_Service_Identity_Tests_UnitTests_UserWriteStoreTests_UpdateEmailAsync_WhenTokenIsValid_UpdatesEmailAndReturnsSuccessResult_
  commentId: Overload:Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.UpdateEmailAsync_WhenTokenIsValid_UpdatesEmailAndReturnsSuccessResult
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.UpdateEmailAsync_WhenTokenIsValid_UpdatesEmailAndReturnsSuccessResult
  nameWithType: UserWriteStoreTests.UpdateEmailAsync_WhenTokenIsValid_UpdatesEmailAndReturnsSuccessResult
- uid: Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.UpdatePhoneNumberAsync_WhenExceptionIsThrown_ReturnsFailureResultWithException
  name: UpdatePhoneNumberAsync_WhenExceptionIsThrown_ReturnsFailureResultWithException()
  href: api/Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.html#Authentica_Service_Identity_Tests_UnitTests_UserWriteStoreTests_UpdatePhoneNumberAsync_WhenExceptionIsThrown_ReturnsFailureResultWithException
  commentId: M:Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.UpdatePhoneNumberAsync_WhenExceptionIsThrown_ReturnsFailureResultWithException
  fullName: Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.UpdatePhoneNumberAsync_WhenExceptionIsThrown_ReturnsFailureResultWithException()
  nameWithType: UserWriteStoreTests.UpdatePhoneNumberAsync_WhenExceptionIsThrown_ReturnsFailureResultWithException()
- uid: Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.UpdatePhoneNumberAsync_WhenExceptionIsThrown_ReturnsFailureResultWithException*
  name: UpdatePhoneNumberAsync_WhenExceptionIsThrown_ReturnsFailureResultWithException
  href: api/Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.html#Authentica_Service_Identity_Tests_UnitTests_UserWriteStoreTests_UpdatePhoneNumberAsync_WhenExceptionIsThrown_ReturnsFailureResultWithException_
  commentId: Overload:Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.UpdatePhoneNumberAsync_WhenExceptionIsThrown_ReturnsFailureResultWithException
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.UpdatePhoneNumberAsync_WhenExceptionIsThrown_ReturnsFailureResultWithException
  nameWithType: UserWriteStoreTests.UpdatePhoneNumberAsync_WhenExceptionIsThrown_ReturnsFailureResultWithException
- uid: Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.UpdatePhoneNumberAsync_WhenTokenIsInvalid_ReturnsFailureResult
  name: UpdatePhoneNumberAsync_WhenTokenIsInvalid_ReturnsFailureResult()
  href: api/Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.html#Authentica_Service_Identity_Tests_UnitTests_UserWriteStoreTests_UpdatePhoneNumberAsync_WhenTokenIsInvalid_ReturnsFailureResult
  commentId: M:Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.UpdatePhoneNumberAsync_WhenTokenIsInvalid_ReturnsFailureResult
  fullName: Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.UpdatePhoneNumberAsync_WhenTokenIsInvalid_ReturnsFailureResult()
  nameWithType: UserWriteStoreTests.UpdatePhoneNumberAsync_WhenTokenIsInvalid_ReturnsFailureResult()
- uid: Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.UpdatePhoneNumberAsync_WhenTokenIsInvalid_ReturnsFailureResult*
  name: UpdatePhoneNumberAsync_WhenTokenIsInvalid_ReturnsFailureResult
  href: api/Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.html#Authentica_Service_Identity_Tests_UnitTests_UserWriteStoreTests_UpdatePhoneNumberAsync_WhenTokenIsInvalid_ReturnsFailureResult_
  commentId: Overload:Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.UpdatePhoneNumberAsync_WhenTokenIsInvalid_ReturnsFailureResult
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.UpdatePhoneNumberAsync_WhenTokenIsInvalid_ReturnsFailureResult
  nameWithType: UserWriteStoreTests.UpdatePhoneNumberAsync_WhenTokenIsInvalid_ReturnsFailureResult
- uid: Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.UpdatePhoneNumberAsync_WhenTokenIsValid_UpdatesPhoneNumberAndReturnsSuccessResult
  name: UpdatePhoneNumberAsync_WhenTokenIsValid_UpdatesPhoneNumberAndReturnsSuccessResult()
  href: api/Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.html#Authentica_Service_Identity_Tests_UnitTests_UserWriteStoreTests_UpdatePhoneNumberAsync_WhenTokenIsValid_UpdatesPhoneNumberAndReturnsSuccessResult
  commentId: M:Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.UpdatePhoneNumberAsync_WhenTokenIsValid_UpdatesPhoneNumberAndReturnsSuccessResult
  fullName: Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.UpdatePhoneNumberAsync_WhenTokenIsValid_UpdatesPhoneNumberAndReturnsSuccessResult()
  nameWithType: UserWriteStoreTests.UpdatePhoneNumberAsync_WhenTokenIsValid_UpdatesPhoneNumberAndReturnsSuccessResult()
- uid: Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.UpdatePhoneNumberAsync_WhenTokenIsValid_UpdatesPhoneNumberAndReturnsSuccessResult*
  name: UpdatePhoneNumberAsync_WhenTokenIsValid_UpdatesPhoneNumberAndReturnsSuccessResult
  href: api/Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.html#Authentica_Service_Identity_Tests_UnitTests_UserWriteStoreTests_UpdatePhoneNumberAsync_WhenTokenIsValid_UpdatesPhoneNumberAndReturnsSuccessResult_
  commentId: Overload:Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.UpdatePhoneNumberAsync_WhenTokenIsValid_UpdatesPhoneNumberAndReturnsSuccessResult
  isSpec: "True"
  fullName: Authentica.Service.Identity.Tests.UnitTests.UserWriteStoreTests.UpdatePhoneNumberAsync_WhenTokenIsValid_UpdatesPhoneNumberAndReturnsSuccessResult
  nameWithType: UserWriteStoreTests.UpdatePhoneNumberAsync_WhenTokenIsValid_UpdatesPhoneNumberAndReturnsSuccessResult
- uid: Authentica.TestClient
  name: Authentica.TestClient
  href: api/Authentica.TestClient.html
  commentId: N:Authentica.TestClient
  fullName: Authentica.TestClient
  nameWithType: Authentica.TestClient
- uid: Authentica.TestClient.Controllers
  name: Authentica.TestClient.Controllers
  href: api/Authentica.TestClient.Controllers.html
  commentId: N:Authentica.TestClient.Controllers
  fullName: Authentica.TestClient.Controllers
  nameWithType: Authentica.TestClient.Controllers
- uid: Authentica.TestClient.Controllers.TestController
  name: TestController
  href: api/Authentica.TestClient.Controllers.TestController.html
  commentId: T:Authentica.TestClient.Controllers.TestController
  fullName: Authentica.TestClient.Controllers.TestController
  nameWithType: TestController
- uid: Authentica.TestClient.Controllers.TestController.Get
  name: Get()
  href: api/Authentica.TestClient.Controllers.TestController.html#Authentica_TestClient_Controllers_TestController_Get
  commentId: M:Authentica.TestClient.Controllers.TestController.Get
  fullName: Authentica.TestClient.Controllers.TestController.Get()
  nameWithType: TestController.Get()
- uid: Authentica.TestClient.Controllers.TestController.Get*
  name: Get
  href: api/Authentica.TestClient.Controllers.TestController.html#Authentica_TestClient_Controllers_TestController_Get_
  commentId: Overload:Authentica.TestClient.Controllers.TestController.Get
  isSpec: "True"
  fullName: Authentica.TestClient.Controllers.TestController.Get
  nameWithType: TestController.Get
- uid: Authentica.TestClient.Program
  name: Program
  href: api/Authentica.TestClient.Program.html
  commentId: T:Authentica.TestClient.Program
  fullName: Authentica.TestClient.Program
  nameWithType: Program
- uid: Authentica.TestClient.Program.Main(System.String[])
  name: Main(string[])
  href: api/Authentica.TestClient.Program.html#Authentica_TestClient_Program_Main_System_String___
  commentId: M:Authentica.TestClient.Program.Main(System.String[])
  name.vb: Main(String())
  fullName: Authentica.TestClient.Program.Main(string[])
  fullName.vb: Authentica.TestClient.Program.Main(String())
  nameWithType: Program.Main(string[])
  nameWithType.vb: Program.Main(String())
- uid: Authentica.TestClient.Program.Main*
  name: Main
  href: api/Authentica.TestClient.Program.html#Authentica_TestClient_Program_Main_
  commentId: Overload:Authentica.TestClient.Program.Main
  isSpec: "True"
  fullName: Authentica.TestClient.Program.Main
  nameWithType: Program.Main
- uid: Authentica.TestClient.ServiceCollectionExtensions
  name: ServiceCollectionExtensions
  href: api/Authentica.TestClient.ServiceCollectionExtensions.html
  commentId: T:Authentica.TestClient.ServiceCollectionExtensions
  fullName: Authentica.TestClient.ServiceCollectionExtensions
  nameWithType: ServiceCollectionExtensions
- uid: Authentica.TestClient.ServiceCollectionExtensions.AddBearerAuthentication(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  name: AddBearerAuthentication(IServiceCollection)
  href: api/Authentica.TestClient.ServiceCollectionExtensions.html#Authentica_TestClient_ServiceCollectionExtensions_AddBearerAuthentication_Microsoft_Extensions_DependencyInjection_IServiceCollection_
  commentId: M:Authentica.TestClient.ServiceCollectionExtensions.AddBearerAuthentication(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  fullName: Authentica.TestClient.ServiceCollectionExtensions.AddBearerAuthentication(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  nameWithType: ServiceCollectionExtensions.AddBearerAuthentication(IServiceCollection)
- uid: Authentica.TestClient.ServiceCollectionExtensions.AddBearerAuthentication*
  name: AddBearerAuthentication
  href: api/Authentica.TestClient.ServiceCollectionExtensions.html#Authentica_TestClient_ServiceCollectionExtensions_AddBearerAuthentication_
  commentId: Overload:Authentica.TestClient.ServiceCollectionExtensions.AddBearerAuthentication
  isSpec: "True"
  fullName: Authentica.TestClient.ServiceCollectionExtensions.AddBearerAuthentication
  nameWithType: ServiceCollectionExtensions.AddBearerAuthentication
- uid: Authentica.WorkerService.Email
  name: Authentica.WorkerService.Email
  href: api/Authentica.WorkerService.Email.html
  commentId: N:Authentica.WorkerService.Email
  fullName: Authentica.WorkerService.Email
  nameWithType: Authentica.WorkerService.Email
- uid: Authentica.WorkerService.Email.ISmtpClient
  name: ISmtpClient
  href: api/Authentica.WorkerService.Email.ISmtpClient.html
  commentId: T:Authentica.WorkerService.Email.ISmtpClient
  fullName: Authentica.WorkerService.Email.ISmtpClient
  nameWithType: ISmtpClient
- uid: Authentica.WorkerService.Email.ISmtpClient.SendMailAsync(System.Net.Mail.MailMessage)
  name: SendMailAsync(MailMessage)
  href: api/Authentica.WorkerService.Email.ISmtpClient.html#Authentica_WorkerService_Email_ISmtpClient_SendMailAsync_System_Net_Mail_MailMessage_
  commentId: M:Authentica.WorkerService.Email.ISmtpClient.SendMailAsync(System.Net.Mail.MailMessage)
  fullName: Authentica.WorkerService.Email.ISmtpClient.SendMailAsync(System.Net.Mail.MailMessage)
  nameWithType: ISmtpClient.SendMailAsync(MailMessage)
- uid: Authentica.WorkerService.Email.ISmtpClient.SendMailAsync*
  name: SendMailAsync
  href: api/Authentica.WorkerService.Email.ISmtpClient.html#Authentica_WorkerService_Email_ISmtpClient_SendMailAsync_
  commentId: Overload:Authentica.WorkerService.Email.ISmtpClient.SendMailAsync
  isSpec: "True"
  fullName: Authentica.WorkerService.Email.ISmtpClient.SendMailAsync
  nameWithType: ISmtpClient.SendMailAsync
- uid: Authentica.WorkerService.Email.Program
  name: Program
  href: api/Authentica.WorkerService.Email.Program.html
  commentId: T:Authentica.WorkerService.Email.Program
  fullName: Authentica.WorkerService.Email.Program
  nameWithType: Program
- uid: Authentica.WorkerService.Email.Program.Main(System.String[])
  name: Main(string[])
  href: api/Authentica.WorkerService.Email.Program.html#Authentica_WorkerService_Email_Program_Main_System_String___
  commentId: M:Authentica.WorkerService.Email.Program.Main(System.String[])
  name.vb: Main(String())
  fullName: Authentica.WorkerService.Email.Program.Main(string[])
  fullName.vb: Authentica.WorkerService.Email.Program.Main(String())
  nameWithType: Program.Main(string[])
  nameWithType.vb: Program.Main(String())
- uid: Authentica.WorkerService.Email.Program.Main*
  name: Main
  href: api/Authentica.WorkerService.Email.Program.html#Authentica_WorkerService_Email_Program_Main_
  commentId: Overload:Authentica.WorkerService.Email.Program.Main
  isSpec: "True"
  fullName: Authentica.WorkerService.Email.Program.Main
  nameWithType: Program.Main
- uid: Authentica.WorkerService.Email.ServiceNameDefaults
  name: ServiceNameDefaults
  href: api/Authentica.WorkerService.Email.ServiceNameDefaults.html
  commentId: T:Authentica.WorkerService.Email.ServiceNameDefaults
  fullName: Authentica.WorkerService.Email.ServiceNameDefaults
  nameWithType: ServiceNameDefaults
- uid: Authentica.WorkerService.Email.ServiceNameDefaults.ServiceName
  name: ServiceName
  href: api/Authentica.WorkerService.Email.ServiceNameDefaults.html#Authentica_WorkerService_Email_ServiceNameDefaults_ServiceName
  commentId: F:Authentica.WorkerService.Email.ServiceNameDefaults.ServiceName
  fullName: Authentica.WorkerService.Email.ServiceNameDefaults.ServiceName
  nameWithType: ServiceNameDefaults.ServiceName
- uid: Authentica.WorkerService.Email.SmtpClientWrapper
  name: SmtpClientWrapper
  href: api/Authentica.WorkerService.Email.SmtpClientWrapper.html
  commentId: T:Authentica.WorkerService.Email.SmtpClientWrapper
  fullName: Authentica.WorkerService.Email.SmtpClientWrapper
  nameWithType: SmtpClientWrapper
- uid: Authentica.WorkerService.Email.SmtpClientWrapper.#ctor(System.Net.Mail.SmtpClient,Microsoft.Extensions.Configuration.IConfiguration)
  name: SmtpClientWrapper(SmtpClient, IConfiguration)
  href: api/Authentica.WorkerService.Email.SmtpClientWrapper.html#Authentica_WorkerService_Email_SmtpClientWrapper__ctor_System_Net_Mail_SmtpClient_Microsoft_Extensions_Configuration_IConfiguration_
  commentId: M:Authentica.WorkerService.Email.SmtpClientWrapper.#ctor(System.Net.Mail.SmtpClient,Microsoft.Extensions.Configuration.IConfiguration)
  name.vb: New(SmtpClient, IConfiguration)
  fullName: Authentica.WorkerService.Email.SmtpClientWrapper.SmtpClientWrapper(System.Net.Mail.SmtpClient, Microsoft.Extensions.Configuration.IConfiguration)
  fullName.vb: Authentica.WorkerService.Email.SmtpClientWrapper.New(System.Net.Mail.SmtpClient, Microsoft.Extensions.Configuration.IConfiguration)
  nameWithType: SmtpClientWrapper.SmtpClientWrapper(SmtpClient, IConfiguration)
  nameWithType.vb: SmtpClientWrapper.New(SmtpClient, IConfiguration)
- uid: Authentica.WorkerService.Email.SmtpClientWrapper.#ctor*
  name: SmtpClientWrapper
  href: api/Authentica.WorkerService.Email.SmtpClientWrapper.html#Authentica_WorkerService_Email_SmtpClientWrapper__ctor_
  commentId: Overload:Authentica.WorkerService.Email.SmtpClientWrapper.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Authentica.WorkerService.Email.SmtpClientWrapper.SmtpClientWrapper
  fullName.vb: Authentica.WorkerService.Email.SmtpClientWrapper.New
  nameWithType: SmtpClientWrapper.SmtpClientWrapper
  nameWithType.vb: SmtpClientWrapper.New
- uid: Authentica.WorkerService.Email.SmtpClientWrapper.Configuration
  name: Configuration
  href: api/Authentica.WorkerService.Email.SmtpClientWrapper.html#Authentica_WorkerService_Email_SmtpClientWrapper_Configuration
  commentId: P:Authentica.WorkerService.Email.SmtpClientWrapper.Configuration
  fullName: Authentica.WorkerService.Email.SmtpClientWrapper.Configuration
  nameWithType: SmtpClientWrapper.Configuration
- uid: Authentica.WorkerService.Email.SmtpClientWrapper.Configuration*
  name: Configuration
  href: api/Authentica.WorkerService.Email.SmtpClientWrapper.html#Authentica_WorkerService_Email_SmtpClientWrapper_Configuration_
  commentId: Overload:Authentica.WorkerService.Email.SmtpClientWrapper.Configuration
  isSpec: "True"
  fullName: Authentica.WorkerService.Email.SmtpClientWrapper.Configuration
  nameWithType: SmtpClientWrapper.Configuration
- uid: Authentica.WorkerService.Email.SmtpClientWrapper.Dispose
  name: Dispose()
  href: api/Authentica.WorkerService.Email.SmtpClientWrapper.html#Authentica_WorkerService_Email_SmtpClientWrapper_Dispose
  commentId: M:Authentica.WorkerService.Email.SmtpClientWrapper.Dispose
  fullName: Authentica.WorkerService.Email.SmtpClientWrapper.Dispose()
  nameWithType: SmtpClientWrapper.Dispose()
- uid: Authentica.WorkerService.Email.SmtpClientWrapper.Dispose*
  name: Dispose
  href: api/Authentica.WorkerService.Email.SmtpClientWrapper.html#Authentica_WorkerService_Email_SmtpClientWrapper_Dispose_
  commentId: Overload:Authentica.WorkerService.Email.SmtpClientWrapper.Dispose
  isSpec: "True"
  fullName: Authentica.WorkerService.Email.SmtpClientWrapper.Dispose
  nameWithType: SmtpClientWrapper.Dispose
- uid: Authentica.WorkerService.Email.SmtpClientWrapper.Finalize
  name: ~SmtpClientWrapper()
  href: api/Authentica.WorkerService.Email.SmtpClientWrapper.html#Authentica_WorkerService_Email_SmtpClientWrapper_Finalize
  commentId: M:Authentica.WorkerService.Email.SmtpClientWrapper.Finalize
  name.vb: ''
  fullName: Authentica.WorkerService.Email.SmtpClientWrapper.~SmtpClientWrapper()
  fullName.vb: ''
  nameWithType: SmtpClientWrapper.~SmtpClientWrapper()
  nameWithType.vb: ''
- uid: Authentica.WorkerService.Email.SmtpClientWrapper.Finalize*
  name: ~SmtpClientWrapper
  href: api/Authentica.WorkerService.Email.SmtpClientWrapper.html#Authentica_WorkerService_Email_SmtpClientWrapper_Finalize_
  commentId: Overload:Authentica.WorkerService.Email.SmtpClientWrapper.Finalize
  isSpec: "True"
  fullName: Authentica.WorkerService.Email.SmtpClientWrapper.~SmtpClientWrapper
  nameWithType: SmtpClientWrapper.~SmtpClientWrapper
- uid: Authentica.WorkerService.Email.SmtpClientWrapper.SendMailAsync(System.Net.Mail.MailMessage)
  name: SendMailAsync(MailMessage)
  href: api/Authentica.WorkerService.Email.SmtpClientWrapper.html#Authentica_WorkerService_Email_SmtpClientWrapper_SendMailAsync_System_Net_Mail_MailMessage_
  commentId: M:Authentica.WorkerService.Email.SmtpClientWrapper.SendMailAsync(System.Net.Mail.MailMessage)
  fullName: Authentica.WorkerService.Email.SmtpClientWrapper.SendMailAsync(System.Net.Mail.MailMessage)
  nameWithType: SmtpClientWrapper.SendMailAsync(MailMessage)
- uid: Authentica.WorkerService.Email.SmtpClientWrapper.SendMailAsync*
  name: SendMailAsync
  href: api/Authentica.WorkerService.Email.SmtpClientWrapper.html#Authentica_WorkerService_Email_SmtpClientWrapper_SendMailAsync_
  commentId: Overload:Authentica.WorkerService.Email.SmtpClientWrapper.SendMailAsync
  isSpec: "True"
  fullName: Authentica.WorkerService.Email.SmtpClientWrapper.SendMailAsync
  nameWithType: SmtpClientWrapper.SendMailAsync
- uid: Authentica.WorkerService.Email.Tests
  name: Authentica.WorkerService.Email.Tests
  href: api/Authentica.WorkerService.Email.Tests.html
  commentId: N:Authentica.WorkerService.Email.Tests
  fullName: Authentica.WorkerService.Email.Tests
  nameWithType: Authentica.WorkerService.Email.Tests
- uid: Authentica.WorkerService.Email.Tests.WorkerTests
  name: WorkerTests
  href: api/Authentica.WorkerService.Email.Tests.WorkerTests.html
  commentId: T:Authentica.WorkerService.Email.Tests.WorkerTests
  fullName: Authentica.WorkerService.Email.Tests.WorkerTests
  nameWithType: WorkerTests
- uid: Authentica.WorkerService.Email.Tests.WorkerTests.Consume_ConfirmEmail_SendsEmail
  name: Consume_ConfirmEmail_SendsEmail()
  href: api/Authentica.WorkerService.Email.Tests.WorkerTests.html#Authentica_WorkerService_Email_Tests_WorkerTests_Consume_ConfirmEmail_SendsEmail
  commentId: M:Authentica.WorkerService.Email.Tests.WorkerTests.Consume_ConfirmEmail_SendsEmail
  fullName: Authentica.WorkerService.Email.Tests.WorkerTests.Consume_ConfirmEmail_SendsEmail()
  nameWithType: WorkerTests.Consume_ConfirmEmail_SendsEmail()
- uid: Authentica.WorkerService.Email.Tests.WorkerTests.Consume_ConfirmEmail_SendsEmail*
  name: Consume_ConfirmEmail_SendsEmail
  href: api/Authentica.WorkerService.Email.Tests.WorkerTests.html#Authentica_WorkerService_Email_Tests_WorkerTests_Consume_ConfirmEmail_SendsEmail_
  commentId: Overload:Authentica.WorkerService.Email.Tests.WorkerTests.Consume_ConfirmEmail_SendsEmail
  isSpec: "True"
  fullName: Authentica.WorkerService.Email.Tests.WorkerTests.Consume_ConfirmEmail_SendsEmail
  nameWithType: WorkerTests.Consume_ConfirmEmail_SendsEmail
- uid: Authentica.WorkerService.Email.Tests.WorkerTests.Consume_MultiFactorToken_SendsEmail
  name: Consume_MultiFactorToken_SendsEmail()
  href: api/Authentica.WorkerService.Email.Tests.WorkerTests.html#Authentica_WorkerService_Email_Tests_WorkerTests_Consume_MultiFactorToken_SendsEmail
  commentId: M:Authentica.WorkerService.Email.Tests.WorkerTests.Consume_MultiFactorToken_SendsEmail
  fullName: Authentica.WorkerService.Email.Tests.WorkerTests.Consume_MultiFactorToken_SendsEmail()
  nameWithType: WorkerTests.Consume_MultiFactorToken_SendsEmail()
- uid: Authentica.WorkerService.Email.Tests.WorkerTests.Consume_MultiFactorToken_SendsEmail*
  name: Consume_MultiFactorToken_SendsEmail
  href: api/Authentica.WorkerService.Email.Tests.WorkerTests.html#Authentica_WorkerService_Email_Tests_WorkerTests_Consume_MultiFactorToken_SendsEmail_
  commentId: Overload:Authentica.WorkerService.Email.Tests.WorkerTests.Consume_MultiFactorToken_SendsEmail
  isSpec: "True"
  fullName: Authentica.WorkerService.Email.Tests.WorkerTests.Consume_MultiFactorToken_SendsEmail
  nameWithType: WorkerTests.Consume_MultiFactorToken_SendsEmail
- uid: Authentica.WorkerService.Email.Tests.WorkerTests.Consume_ResetPassword_SendsEmail
  name: Consume_ResetPassword_SendsEmail()
  href: api/Authentica.WorkerService.Email.Tests.WorkerTests.html#Authentica_WorkerService_Email_Tests_WorkerTests_Consume_ResetPassword_SendsEmail
  commentId: M:Authentica.WorkerService.Email.Tests.WorkerTests.Consume_ResetPassword_SendsEmail
  fullName: Authentica.WorkerService.Email.Tests.WorkerTests.Consume_ResetPassword_SendsEmail()
  nameWithType: WorkerTests.Consume_ResetPassword_SendsEmail()
- uid: Authentica.WorkerService.Email.Tests.WorkerTests.Consume_ResetPassword_SendsEmail*
  name: Consume_ResetPassword_SendsEmail
  href: api/Authentica.WorkerService.Email.Tests.WorkerTests.html#Authentica_WorkerService_Email_Tests_WorkerTests_Consume_ResetPassword_SendsEmail_
  commentId: Overload:Authentica.WorkerService.Email.Tests.WorkerTests.Consume_ResetPassword_SendsEmail
  isSpec: "True"
  fullName: Authentica.WorkerService.Email.Tests.WorkerTests.Consume_ResetPassword_SendsEmail
  nameWithType: WorkerTests.Consume_ResetPassword_SendsEmail
- uid: Authentica.WorkerService.Email.Tests.WorkerTests.Consume_UpdateEmail_SendsEmail
  name: Consume_UpdateEmail_SendsEmail()
  href: api/Authentica.WorkerService.Email.Tests.WorkerTests.html#Authentica_WorkerService_Email_Tests_WorkerTests_Consume_UpdateEmail_SendsEmail
  commentId: M:Authentica.WorkerService.Email.Tests.WorkerTests.Consume_UpdateEmail_SendsEmail
  fullName: Authentica.WorkerService.Email.Tests.WorkerTests.Consume_UpdateEmail_SendsEmail()
  nameWithType: WorkerTests.Consume_UpdateEmail_SendsEmail()
- uid: Authentica.WorkerService.Email.Tests.WorkerTests.Consume_UpdateEmail_SendsEmail*
  name: Consume_UpdateEmail_SendsEmail
  href: api/Authentica.WorkerService.Email.Tests.WorkerTests.html#Authentica_WorkerService_Email_Tests_WorkerTests_Consume_UpdateEmail_SendsEmail_
  commentId: Overload:Authentica.WorkerService.Email.Tests.WorkerTests.Consume_UpdateEmail_SendsEmail
  isSpec: "True"
  fullName: Authentica.WorkerService.Email.Tests.WorkerTests.Consume_UpdateEmail_SendsEmail
  nameWithType: WorkerTests.Consume_UpdateEmail_SendsEmail
- uid: Authentica.WorkerService.Email.Tests.WorkerTests.Consume_UpdatePhoneNumber_SendsEmail
  name: Consume_UpdatePhoneNumber_SendsEmail()
  href: api/Authentica.WorkerService.Email.Tests.WorkerTests.html#Authentica_WorkerService_Email_Tests_WorkerTests_Consume_UpdatePhoneNumber_SendsEmail
  commentId: M:Authentica.WorkerService.Email.Tests.WorkerTests.Consume_UpdatePhoneNumber_SendsEmail
  fullName: Authentica.WorkerService.Email.Tests.WorkerTests.Consume_UpdatePhoneNumber_SendsEmail()
  nameWithType: WorkerTests.Consume_UpdatePhoneNumber_SendsEmail()
- uid: Authentica.WorkerService.Email.Tests.WorkerTests.Consume_UpdatePhoneNumber_SendsEmail*
  name: Consume_UpdatePhoneNumber_SendsEmail
  href: api/Authentica.WorkerService.Email.Tests.WorkerTests.html#Authentica_WorkerService_Email_Tests_WorkerTests_Consume_UpdatePhoneNumber_SendsEmail_
  commentId: Overload:Authentica.WorkerService.Email.Tests.WorkerTests.Consume_UpdatePhoneNumber_SendsEmail
  isSpec: "True"
  fullName: Authentica.WorkerService.Email.Tests.WorkerTests.Consume_UpdatePhoneNumber_SendsEmail
  nameWithType: WorkerTests.Consume_UpdatePhoneNumber_SendsEmail
- uid: Authentica.WorkerService.Email.Tests.WorkerTests.Setup
  name: Setup()
  href: api/Authentica.WorkerService.Email.Tests.WorkerTests.html#Authentica_WorkerService_Email_Tests_WorkerTests_Setup
  commentId: M:Authentica.WorkerService.Email.Tests.WorkerTests.Setup
  fullName: Authentica.WorkerService.Email.Tests.WorkerTests.Setup()
  nameWithType: WorkerTests.Setup()
- uid: Authentica.WorkerService.Email.Tests.WorkerTests.Setup*
  name: Setup
  href: api/Authentica.WorkerService.Email.Tests.WorkerTests.html#Authentica_WorkerService_Email_Tests_WorkerTests_Setup_
  commentId: Overload:Authentica.WorkerService.Email.Tests.WorkerTests.Setup
  isSpec: "True"
  fullName: Authentica.WorkerService.Email.Tests.WorkerTests.Setup
  nameWithType: WorkerTests.Setup
- uid: Authentica.WorkerService.Email.Worker
  name: Worker
  href: api/Authentica.WorkerService.Email.Worker.html
  commentId: T:Authentica.WorkerService.Email.Worker
  fullName: Authentica.WorkerService.Email.Worker
  nameWithType: Worker
- uid: Authentica.WorkerService.Email.Worker.#ctor(Microsoft.Extensions.Logging.ILogger{Authentica.WorkerService.Email.Worker},System.IServiceProvider)
  name: Worker(ILogger<Worker>, IServiceProvider)
  href: api/Authentica.WorkerService.Email.Worker.html#Authentica_WorkerService_Email_Worker__ctor_Microsoft_Extensions_Logging_ILogger_Authentica_WorkerService_Email_Worker__System_IServiceProvider_
  commentId: M:Authentica.WorkerService.Email.Worker.#ctor(Microsoft.Extensions.Logging.ILogger{Authentica.WorkerService.Email.Worker},System.IServiceProvider)
  name.vb: New(ILogger(Of Worker), IServiceProvider)
  fullName: Authentica.WorkerService.Email.Worker.Worker(Microsoft.Extensions.Logging.ILogger<Authentica.WorkerService.Email.Worker>, System.IServiceProvider)
  fullName.vb: Authentica.WorkerService.Email.Worker.New(Microsoft.Extensions.Logging.ILogger(Of Authentica.WorkerService.Email.Worker), System.IServiceProvider)
  nameWithType: Worker.Worker(ILogger<Worker>, IServiceProvider)
  nameWithType.vb: Worker.New(ILogger(Of Worker), IServiceProvider)
- uid: Authentica.WorkerService.Email.Worker.#ctor*
  name: Worker
  href: api/Authentica.WorkerService.Email.Worker.html#Authentica_WorkerService_Email_Worker__ctor_
  commentId: Overload:Authentica.WorkerService.Email.Worker.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Authentica.WorkerService.Email.Worker.Worker
  fullName.vb: Authentica.WorkerService.Email.Worker.New
  nameWithType: Worker.Worker
  nameWithType.vb: Worker.New
- uid: Authentica.WorkerService.Email.Worker.Consume(MassTransit.ConsumeContext{Authentica.Common.EmailMessage})
  name: Consume(ConsumeContext<EmailMessage>)
  href: api/Authentica.WorkerService.Email.Worker.html#Authentica_WorkerService_Email_Worker_Consume_MassTransit_ConsumeContext_Authentica_Common_EmailMessage__
  commentId: M:Authentica.WorkerService.Email.Worker.Consume(MassTransit.ConsumeContext{Authentica.Common.EmailMessage})
  name.vb: Consume(ConsumeContext(Of EmailMessage))
  fullName: Authentica.WorkerService.Email.Worker.Consume(MassTransit.ConsumeContext<Authentica.Common.EmailMessage>)
  fullName.vb: Authentica.WorkerService.Email.Worker.Consume(MassTransit.ConsumeContext(Of Authentica.Common.EmailMessage))
  nameWithType: Worker.Consume(ConsumeContext<EmailMessage>)
  nameWithType.vb: Worker.Consume(ConsumeContext(Of EmailMessage))
- uid: Authentica.WorkerService.Email.Worker.Consume*
  name: Consume
  href: api/Authentica.WorkerService.Email.Worker.html#Authentica_WorkerService_Email_Worker_Consume_
  commentId: Overload:Authentica.WorkerService.Email.Worker.Consume
  isSpec: "True"
  fullName: Authentica.WorkerService.Email.Worker.Consume
  nameWithType: Worker.Consume
- uid: Authentica.WorkerService.Email.Worker.Logger
  name: Logger
  href: api/Authentica.WorkerService.Email.Worker.html#Authentica_WorkerService_Email_Worker_Logger
  commentId: P:Authentica.WorkerService.Email.Worker.Logger
  fullName: Authentica.WorkerService.Email.Worker.Logger
  nameWithType: Worker.Logger
- uid: Authentica.WorkerService.Email.Worker.Logger*
  name: Logger
  href: api/Authentica.WorkerService.Email.Worker.html#Authentica_WorkerService_Email_Worker_Logger_
  commentId: Overload:Authentica.WorkerService.Email.Worker.Logger
  isSpec: "True"
  fullName: Authentica.WorkerService.Email.Worker.Logger
  nameWithType: Worker.Logger
- uid: Authentica.WorkerService.Email.Worker.ServiceProvider
  name: ServiceProvider
  href: api/Authentica.WorkerService.Email.Worker.html#Authentica_WorkerService_Email_Worker_ServiceProvider
  commentId: P:Authentica.WorkerService.Email.Worker.ServiceProvider
  fullName: Authentica.WorkerService.Email.Worker.ServiceProvider
  nameWithType: Worker.ServiceProvider
- uid: Authentica.WorkerService.Email.Worker.ServiceProvider*
  name: ServiceProvider
  href: api/Authentica.WorkerService.Email.Worker.html#Authentica_WorkerService_Email_Worker_ServiceProvider_
  commentId: Overload:Authentica.WorkerService.Email.Worker.ServiceProvider
  isSpec: "True"
  fullName: Authentica.WorkerService.Email.Worker.ServiceProvider
  nameWithType: Worker.ServiceProvider
- uid: Domain.Aggregates.Identity
  name: Domain.Aggregates.Identity
  href: api/Domain.Aggregates.Identity.html
  commentId: N:Domain.Aggregates.Identity
  fullName: Domain.Aggregates.Identity
  nameWithType: Domain.Aggregates.Identity
- uid: Domain.Aggregates.Identity.Activity
  name: Activity
  href: api/Domain.Aggregates.Identity.Activity.html
  commentId: T:Domain.Aggregates.Identity.Activity
  fullName: Domain.Aggregates.Identity.Activity
  nameWithType: Activity
- uid: Domain.Aggregates.Identity.Activity.Id
  name: Id
  href: api/Domain.Aggregates.Identity.Activity.html#Domain_Aggregates_Identity_Activity_Id
  commentId: P:Domain.Aggregates.Identity.Activity.Id
  fullName: Domain.Aggregates.Identity.Activity.Id
  nameWithType: Activity.Id
- uid: Domain.Aggregates.Identity.Activity.Id*
  name: Id
  href: api/Domain.Aggregates.Identity.Activity.html#Domain_Aggregates_Identity_Activity_Id_
  commentId: Overload:Domain.Aggregates.Identity.Activity.Id
  isSpec: "True"
  fullName: Domain.Aggregates.Identity.Activity.Id
  nameWithType: Activity.Id
- uid: Domain.Aggregates.Identity.Activity`1
  name: Activity<TKey>
  href: api/Domain.Aggregates.Identity.Activity-1.html
  commentId: T:Domain.Aggregates.Identity.Activity`1
  name.vb: Activity(Of TKey)
  fullName: Domain.Aggregates.Identity.Activity<TKey>
  fullName.vb: Domain.Aggregates.Identity.Activity(Of TKey)
  nameWithType: Activity<TKey>
  nameWithType.vb: Activity(Of TKey)
- uid: Domain.Aggregates.Identity.Activity`1.ActivityType
  name: ActivityType
  href: api/Domain.Aggregates.Identity.Activity-1.html#Domain_Aggregates_Identity_Activity_1_ActivityType
  commentId: P:Domain.Aggregates.Identity.Activity`1.ActivityType
  fullName: Domain.Aggregates.Identity.Activity<TKey>.ActivityType
  fullName.vb: Domain.Aggregates.Identity.Activity(Of TKey).ActivityType
  nameWithType: Activity<TKey>.ActivityType
  nameWithType.vb: Activity(Of TKey).ActivityType
- uid: Domain.Aggregates.Identity.Activity`1.ActivityType*
  name: ActivityType
  href: api/Domain.Aggregates.Identity.Activity-1.html#Domain_Aggregates_Identity_Activity_1_ActivityType_
  commentId: Overload:Domain.Aggregates.Identity.Activity`1.ActivityType
  isSpec: "True"
  fullName: Domain.Aggregates.Identity.Activity<TKey>.ActivityType
  fullName.vb: Domain.Aggregates.Identity.Activity(Of TKey).ActivityType
  nameWithType: Activity<TKey>.ActivityType
  nameWithType.vb: Activity(Of TKey).ActivityType
- uid: Domain.Aggregates.Identity.Activity`1.CreatedOn
  name: CreatedOn
  href: api/Domain.Aggregates.Identity.Activity-1.html#Domain_Aggregates_Identity_Activity_1_CreatedOn
  commentId: P:Domain.Aggregates.Identity.Activity`1.CreatedOn
  fullName: Domain.Aggregates.Identity.Activity<TKey>.CreatedOn
  fullName.vb: Domain.Aggregates.Identity.Activity(Of TKey).CreatedOn
  nameWithType: Activity<TKey>.CreatedOn
  nameWithType.vb: Activity(Of TKey).CreatedOn
- uid: Domain.Aggregates.Identity.Activity`1.CreatedOn*
  name: CreatedOn
  href: api/Domain.Aggregates.Identity.Activity-1.html#Domain_Aggregates_Identity_Activity_1_CreatedOn_
  commentId: Overload:Domain.Aggregates.Identity.Activity`1.CreatedOn
  isSpec: "True"
  fullName: Domain.Aggregates.Identity.Activity<TKey>.CreatedOn
  fullName.vb: Domain.Aggregates.Identity.Activity(Of TKey).CreatedOn
  nameWithType: Activity<TKey>.CreatedOn
  nameWithType.vb: Activity(Of TKey).CreatedOn
- uid: Domain.Aggregates.Identity.Activity`1.Data
  name: Data
  href: api/Domain.Aggregates.Identity.Activity-1.html#Domain_Aggregates_Identity_Activity_1_Data
  commentId: P:Domain.Aggregates.Identity.Activity`1.Data
  fullName: Domain.Aggregates.Identity.Activity<TKey>.Data
  fullName.vb: Domain.Aggregates.Identity.Activity(Of TKey).Data
  nameWithType: Activity<TKey>.Data
  nameWithType.vb: Activity(Of TKey).Data
- uid: Domain.Aggregates.Identity.Activity`1.Data*
  name: Data
  href: api/Domain.Aggregates.Identity.Activity-1.html#Domain_Aggregates_Identity_Activity_1_Data_
  commentId: Overload:Domain.Aggregates.Identity.Activity`1.Data
  isSpec: "True"
  fullName: Domain.Aggregates.Identity.Activity<TKey>.Data
  fullName.vb: Domain.Aggregates.Identity.Activity(Of TKey).Data
  nameWithType: Activity<TKey>.Data
  nameWithType.vb: Activity(Of TKey).Data
- uid: Domain.Aggregates.Identity.Activity`1.Id
  name: Id
  href: api/Domain.Aggregates.Identity.Activity-1.html#Domain_Aggregates_Identity_Activity_1_Id
  commentId: P:Domain.Aggregates.Identity.Activity`1.Id
  fullName: Domain.Aggregates.Identity.Activity<TKey>.Id
  fullName.vb: Domain.Aggregates.Identity.Activity(Of TKey).Id
  nameWithType: Activity<TKey>.Id
  nameWithType.vb: Activity(Of TKey).Id
- uid: Domain.Aggregates.Identity.Activity`1.Id*
  name: Id
  href: api/Domain.Aggregates.Identity.Activity-1.html#Domain_Aggregates_Identity_Activity_1_Id_
  commentId: Overload:Domain.Aggregates.Identity.Activity`1.Id
  isSpec: "True"
  fullName: Domain.Aggregates.Identity.Activity<TKey>.Id
  fullName.vb: Domain.Aggregates.Identity.Activity(Of TKey).Id
  nameWithType: Activity<TKey>.Id
  nameWithType.vb: Activity(Of TKey).Id
- uid: Domain.Aggregates.Identity.Activity`1.SequenceId
  name: SequenceId
  href: api/Domain.Aggregates.Identity.Activity-1.html#Domain_Aggregates_Identity_Activity_1_SequenceId
  commentId: P:Domain.Aggregates.Identity.Activity`1.SequenceId
  fullName: Domain.Aggregates.Identity.Activity<TKey>.SequenceId
  fullName.vb: Domain.Aggregates.Identity.Activity(Of TKey).SequenceId
  nameWithType: Activity<TKey>.SequenceId
  nameWithType.vb: Activity(Of TKey).SequenceId
- uid: Domain.Aggregates.Identity.Activity`1.SequenceId*
  name: SequenceId
  href: api/Domain.Aggregates.Identity.Activity-1.html#Domain_Aggregates_Identity_Activity_1_SequenceId_
  commentId: Overload:Domain.Aggregates.Identity.Activity`1.SequenceId
  isSpec: "True"
  fullName: Domain.Aggregates.Identity.Activity<TKey>.SequenceId
  fullName.vb: Domain.Aggregates.Identity.Activity(Of TKey).SequenceId
  nameWithType: Activity<TKey>.SequenceId
  nameWithType.vb: Activity(Of TKey).SequenceId
- uid: Domain.Aggregates.Identity.ClientApplication
  name: ClientApplication
  href: api/Domain.Aggregates.Identity.ClientApplication.html
  commentId: T:Domain.Aggregates.Identity.ClientApplication
  fullName: Domain.Aggregates.Identity.ClientApplication
  nameWithType: ClientApplication
- uid: Domain.Aggregates.Identity.ClientApplication.ClientId
  name: ClientId
  href: api/Domain.Aggregates.Identity.ClientApplication.html#Domain_Aggregates_Identity_ClientApplication_ClientId
  commentId: P:Domain.Aggregates.Identity.ClientApplication.ClientId
  fullName: Domain.Aggregates.Identity.ClientApplication.ClientId
  nameWithType: ClientApplication.ClientId
- uid: Domain.Aggregates.Identity.ClientApplication.ClientId*
  name: ClientId
  href: api/Domain.Aggregates.Identity.ClientApplication.html#Domain_Aggregates_Identity_ClientApplication_ClientId_
  commentId: Overload:Domain.Aggregates.Identity.ClientApplication.ClientId
  isSpec: "True"
  fullName: Domain.Aggregates.Identity.ClientApplication.ClientId
  nameWithType: ClientApplication.ClientId
- uid: Domain.Aggregates.Identity.ClientApplication.EntityCreationStatus
  name: EntityCreationStatus
  href: api/Domain.Aggregates.Identity.ClientApplication.html#Domain_Aggregates_Identity_ClientApplication_EntityCreationStatus
  commentId: P:Domain.Aggregates.Identity.ClientApplication.EntityCreationStatus
  fullName: Domain.Aggregates.Identity.ClientApplication.EntityCreationStatus
  nameWithType: ClientApplication.EntityCreationStatus
- uid: Domain.Aggregates.Identity.ClientApplication.EntityCreationStatus*
  name: EntityCreationStatus
  href: api/Domain.Aggregates.Identity.ClientApplication.html#Domain_Aggregates_Identity_ClientApplication_EntityCreationStatus_
  commentId: Overload:Domain.Aggregates.Identity.ClientApplication.EntityCreationStatus
  isSpec: "True"
  fullName: Domain.Aggregates.Identity.ClientApplication.EntityCreationStatus
  nameWithType: ClientApplication.EntityCreationStatus
- uid: Domain.Aggregates.Identity.ClientApplication.EntityDeletionStatus
  name: EntityDeletionStatus
  href: api/Domain.Aggregates.Identity.ClientApplication.html#Domain_Aggregates_Identity_ClientApplication_EntityDeletionStatus
  commentId: P:Domain.Aggregates.Identity.ClientApplication.EntityDeletionStatus
  fullName: Domain.Aggregates.Identity.ClientApplication.EntityDeletionStatus
  nameWithType: ClientApplication.EntityDeletionStatus
- uid: Domain.Aggregates.Identity.ClientApplication.EntityDeletionStatus*
  name: EntityDeletionStatus
  href: api/Domain.Aggregates.Identity.ClientApplication.html#Domain_Aggregates_Identity_ClientApplication_EntityDeletionStatus_
  commentId: Overload:Domain.Aggregates.Identity.ClientApplication.EntityDeletionStatus
  isSpec: "True"
  fullName: Domain.Aggregates.Identity.ClientApplication.EntityDeletionStatus
  nameWithType: ClientApplication.EntityDeletionStatus
- uid: Domain.Aggregates.Identity.ClientApplication.EntityModificationStatus
  name: EntityModificationStatus
  href: api/Domain.Aggregates.Identity.ClientApplication.html#Domain_Aggregates_Identity_ClientApplication_EntityModificationStatus
  commentId: P:Domain.Aggregates.Identity.ClientApplication.EntityModificationStatus
  fullName: Domain.Aggregates.Identity.ClientApplication.EntityModificationStatus
  nameWithType: ClientApplication.EntityModificationStatus
- uid: Domain.Aggregates.Identity.ClientApplication.EntityModificationStatus*
  name: EntityModificationStatus
  href: api/Domain.Aggregates.Identity.ClientApplication.html#Domain_Aggregates_Identity_ClientApplication_EntityModificationStatus_
  commentId: Overload:Domain.Aggregates.Identity.ClientApplication.EntityModificationStatus
  isSpec: "True"
  fullName: Domain.Aggregates.Identity.ClientApplication.EntityModificationStatus
  nameWithType: ClientApplication.EntityModificationStatus
- uid: Domain.Aggregates.Identity.ClientApplication.Id
  name: Id
  href: api/Domain.Aggregates.Identity.ClientApplication.html#Domain_Aggregates_Identity_ClientApplication_Id
  commentId: P:Domain.Aggregates.Identity.ClientApplication.Id
  fullName: Domain.Aggregates.Identity.ClientApplication.Id
  nameWithType: ClientApplication.Id
- uid: Domain.Aggregates.Identity.ClientApplication.Id*
  name: Id
  href: api/Domain.Aggregates.Identity.ClientApplication.html#Domain_Aggregates_Identity_ClientApplication_Id_
  commentId: Overload:Domain.Aggregates.Identity.ClientApplication.Id
  isSpec: "True"
  fullName: Domain.Aggregates.Identity.ClientApplication.Id
  nameWithType: ClientApplication.Id
- uid: Domain.Aggregates.Identity.ClientApplication.UserClientApplications
  name: UserClientApplications
  href: api/Domain.Aggregates.Identity.ClientApplication.html#Domain_Aggregates_Identity_ClientApplication_UserClientApplications
  commentId: P:Domain.Aggregates.Identity.ClientApplication.UserClientApplications
  fullName: Domain.Aggregates.Identity.ClientApplication.UserClientApplications
  nameWithType: ClientApplication.UserClientApplications
- uid: Domain.Aggregates.Identity.ClientApplication.UserClientApplications*
  name: UserClientApplications
  href: api/Domain.Aggregates.Identity.ClientApplication.html#Domain_Aggregates_Identity_ClientApplication_UserClientApplications_
  commentId: Overload:Domain.Aggregates.Identity.ClientApplication.UserClientApplications
  isSpec: "True"
  fullName: Domain.Aggregates.Identity.ClientApplication.UserClientApplications
  nameWithType: ClientApplication.UserClientApplications
- uid: Domain.Aggregates.Identity.ClientApplication`1
  name: ClientApplication<TKey>
  href: api/Domain.Aggregates.Identity.ClientApplication-1.html
  commentId: T:Domain.Aggregates.Identity.ClientApplication`1
  name.vb: ClientApplication(Of TKey)
  fullName: Domain.Aggregates.Identity.ClientApplication<TKey>
  fullName.vb: Domain.Aggregates.Identity.ClientApplication(Of TKey)
  nameWithType: ClientApplication<TKey>
  nameWithType.vb: ClientApplication(Of TKey)
- uid: Domain.Aggregates.Identity.ClientApplication`1.CallbackUri
  name: CallbackUri
  href: api/Domain.Aggregates.Identity.ClientApplication-1.html#Domain_Aggregates_Identity_ClientApplication_1_CallbackUri
  commentId: P:Domain.Aggregates.Identity.ClientApplication`1.CallbackUri
  fullName: Domain.Aggregates.Identity.ClientApplication<TKey>.CallbackUri
  fullName.vb: Domain.Aggregates.Identity.ClientApplication(Of TKey).CallbackUri
  nameWithType: ClientApplication<TKey>.CallbackUri
  nameWithType.vb: ClientApplication(Of TKey).CallbackUri
- uid: Domain.Aggregates.Identity.ClientApplication`1.CallbackUri*
  name: CallbackUri
  href: api/Domain.Aggregates.Identity.ClientApplication-1.html#Domain_Aggregates_Identity_ClientApplication_1_CallbackUri_
  commentId: Overload:Domain.Aggregates.Identity.ClientApplication`1.CallbackUri
  isSpec: "True"
  fullName: Domain.Aggregates.Identity.ClientApplication<TKey>.CallbackUri
  fullName.vb: Domain.Aggregates.Identity.ClientApplication(Of TKey).CallbackUri
  nameWithType: ClientApplication<TKey>.CallbackUri
  nameWithType.vb: ClientApplication(Of TKey).CallbackUri
- uid: Domain.Aggregates.Identity.ClientApplication`1.ClientId
  name: ClientId
  href: api/Domain.Aggregates.Identity.ClientApplication-1.html#Domain_Aggregates_Identity_ClientApplication_1_ClientId
  commentId: P:Domain.Aggregates.Identity.ClientApplication`1.ClientId
  fullName: Domain.Aggregates.Identity.ClientApplication<TKey>.ClientId
  fullName.vb: Domain.Aggregates.Identity.ClientApplication(Of TKey).ClientId
  nameWithType: ClientApplication<TKey>.ClientId
  nameWithType.vb: ClientApplication(Of TKey).ClientId
- uid: Domain.Aggregates.Identity.ClientApplication`1.ClientId*
  name: ClientId
  href: api/Domain.Aggregates.Identity.ClientApplication-1.html#Domain_Aggregates_Identity_ClientApplication_1_ClientId_
  commentId: Overload:Domain.Aggregates.Identity.ClientApplication`1.ClientId
  isSpec: "True"
  fullName: Domain.Aggregates.Identity.ClientApplication<TKey>.ClientId
  fullName.vb: Domain.Aggregates.Identity.ClientApplication(Of TKey).ClientId
  nameWithType: ClientApplication<TKey>.ClientId
  nameWithType.vb: ClientApplication(Of TKey).ClientId
- uid: Domain.Aggregates.Identity.ClientApplication`1.ClientSecret
  name: ClientSecret
  href: api/Domain.Aggregates.Identity.ClientApplication-1.html#Domain_Aggregates_Identity_ClientApplication_1_ClientSecret
  commentId: P:Domain.Aggregates.Identity.ClientApplication`1.ClientSecret
  fullName: Domain.Aggregates.Identity.ClientApplication<TKey>.ClientSecret
  fullName.vb: Domain.Aggregates.Identity.ClientApplication(Of TKey).ClientSecret
  nameWithType: ClientApplication<TKey>.ClientSecret
  nameWithType.vb: ClientApplication(Of TKey).ClientSecret
- uid: Domain.Aggregates.Identity.ClientApplication`1.ClientSecret*
  name: ClientSecret
  href: api/Domain.Aggregates.Identity.ClientApplication-1.html#Domain_Aggregates_Identity_ClientApplication_1_ClientSecret_
  commentId: Overload:Domain.Aggregates.Identity.ClientApplication`1.ClientSecret
  isSpec: "True"
  fullName: Domain.Aggregates.Identity.ClientApplication<TKey>.ClientSecret
  fullName.vb: Domain.Aggregates.Identity.ClientApplication(Of TKey).ClientSecret
  nameWithType: ClientApplication<TKey>.ClientSecret
  nameWithType.vb: ClientApplication(Of TKey).ClientSecret
- uid: Domain.Aggregates.Identity.ClientApplication`1.ConcurrencyStamp
  name: ConcurrencyStamp
  href: api/Domain.Aggregates.Identity.ClientApplication-1.html#Domain_Aggregates_Identity_ClientApplication_1_ConcurrencyStamp
  commentId: P:Domain.Aggregates.Identity.ClientApplication`1.ConcurrencyStamp
  fullName: Domain.Aggregates.Identity.ClientApplication<TKey>.ConcurrencyStamp
  fullName.vb: Domain.Aggregates.Identity.ClientApplication(Of TKey).ConcurrencyStamp
  nameWithType: ClientApplication<TKey>.ConcurrencyStamp
  nameWithType.vb: ClientApplication(Of TKey).ConcurrencyStamp
- uid: Domain.Aggregates.Identity.ClientApplication`1.ConcurrencyStamp*
  name: ConcurrencyStamp
  href: api/Domain.Aggregates.Identity.ClientApplication-1.html#Domain_Aggregates_Identity_ClientApplication_1_ConcurrencyStamp_
  commentId: Overload:Domain.Aggregates.Identity.ClientApplication`1.ConcurrencyStamp
  isSpec: "True"
  fullName: Domain.Aggregates.Identity.ClientApplication<TKey>.ConcurrencyStamp
  fullName.vb: Domain.Aggregates.Identity.ClientApplication(Of TKey).ConcurrencyStamp
  nameWithType: ClientApplication<TKey>.ConcurrencyStamp
  nameWithType.vb: ClientApplication(Of TKey).ConcurrencyStamp
- uid: Domain.Aggregates.Identity.ClientApplication`1.Id
  name: Id
  href: api/Domain.Aggregates.Identity.ClientApplication-1.html#Domain_Aggregates_Identity_ClientApplication_1_Id
  commentId: P:Domain.Aggregates.Identity.ClientApplication`1.Id
  fullName: Domain.Aggregates.Identity.ClientApplication<TKey>.Id
  fullName.vb: Domain.Aggregates.Identity.ClientApplication(Of TKey).Id
  nameWithType: ClientApplication<TKey>.Id
  nameWithType.vb: ClientApplication(Of TKey).Id
- uid: Domain.Aggregates.Identity.ClientApplication`1.Id*
  name: Id
  href: api/Domain.Aggregates.Identity.ClientApplication-1.html#Domain_Aggregates_Identity_ClientApplication_1_Id_
  commentId: Overload:Domain.Aggregates.Identity.ClientApplication`1.Id
  isSpec: "True"
  fullName: Domain.Aggregates.Identity.ClientApplication<TKey>.Id
  fullName.vb: Domain.Aggregates.Identity.ClientApplication(Of TKey).Id
  nameWithType: ClientApplication<TKey>.Id
  nameWithType.vb: ClientApplication(Of TKey).Id
- uid: Domain.Aggregates.Identity.ClientApplication`1.Name
  name: Name
  href: api/Domain.Aggregates.Identity.ClientApplication-1.html#Domain_Aggregates_Identity_ClientApplication_1_Name
  commentId: P:Domain.Aggregates.Identity.ClientApplication`1.Name
  fullName: Domain.Aggregates.Identity.ClientApplication<TKey>.Name
  fullName.vb: Domain.Aggregates.Identity.ClientApplication(Of TKey).Name
  nameWithType: ClientApplication<TKey>.Name
  nameWithType.vb: ClientApplication(Of TKey).Name
- uid: Domain.Aggregates.Identity.ClientApplication`1.Name*
  name: Name
  href: api/Domain.Aggregates.Identity.ClientApplication-1.html#Domain_Aggregates_Identity_ClientApplication_1_Name_
  commentId: Overload:Domain.Aggregates.Identity.ClientApplication`1.Name
  isSpec: "True"
  fullName: Domain.Aggregates.Identity.ClientApplication<TKey>.Name
  fullName.vb: Domain.Aggregates.Identity.ClientApplication(Of TKey).Name
  nameWithType: ClientApplication<TKey>.Name
  nameWithType.vb: ClientApplication(Of TKey).Name
- uid: Domain.Aggregates.Identity.Role
  name: Role
  href: api/Domain.Aggregates.Identity.Role.html
  commentId: T:Domain.Aggregates.Identity.Role
  fullName: Domain.Aggregates.Identity.Role
  nameWithType: Role
- uid: Domain.Aggregates.Identity.Role.EntityCreationStatus
  name: EntityCreationStatus
  href: api/Domain.Aggregates.Identity.Role.html#Domain_Aggregates_Identity_Role_EntityCreationStatus
  commentId: P:Domain.Aggregates.Identity.Role.EntityCreationStatus
  fullName: Domain.Aggregates.Identity.Role.EntityCreationStatus
  nameWithType: Role.EntityCreationStatus
- uid: Domain.Aggregates.Identity.Role.EntityCreationStatus*
  name: EntityCreationStatus
  href: api/Domain.Aggregates.Identity.Role.html#Domain_Aggregates_Identity_Role_EntityCreationStatus_
  commentId: Overload:Domain.Aggregates.Identity.Role.EntityCreationStatus
  isSpec: "True"
  fullName: Domain.Aggregates.Identity.Role.EntityCreationStatus
  nameWithType: Role.EntityCreationStatus
- uid: Domain.Aggregates.Identity.Role.EntityDeletionStatus
  name: EntityDeletionStatus
  href: api/Domain.Aggregates.Identity.Role.html#Domain_Aggregates_Identity_Role_EntityDeletionStatus
  commentId: P:Domain.Aggregates.Identity.Role.EntityDeletionStatus
  fullName: Domain.Aggregates.Identity.Role.EntityDeletionStatus
  nameWithType: Role.EntityDeletionStatus
- uid: Domain.Aggregates.Identity.Role.EntityDeletionStatus*
  name: EntityDeletionStatus
  href: api/Domain.Aggregates.Identity.Role.html#Domain_Aggregates_Identity_Role_EntityDeletionStatus_
  commentId: Overload:Domain.Aggregates.Identity.Role.EntityDeletionStatus
  isSpec: "True"
  fullName: Domain.Aggregates.Identity.Role.EntityDeletionStatus
  nameWithType: Role.EntityDeletionStatus
- uid: Domain.Aggregates.Identity.Role.EntityModificationStatus
  name: EntityModificationStatus
  href: api/Domain.Aggregates.Identity.Role.html#Domain_Aggregates_Identity_Role_EntityModificationStatus
  commentId: P:Domain.Aggregates.Identity.Role.EntityModificationStatus
  fullName: Domain.Aggregates.Identity.Role.EntityModificationStatus
  nameWithType: Role.EntityModificationStatus
- uid: Domain.Aggregates.Identity.Role.EntityModificationStatus*
  name: EntityModificationStatus
  href: api/Domain.Aggregates.Identity.Role.html#Domain_Aggregates_Identity_Role_EntityModificationStatus_
  commentId: Overload:Domain.Aggregates.Identity.Role.EntityModificationStatus
  isSpec: "True"
  fullName: Domain.Aggregates.Identity.Role.EntityModificationStatus
  nameWithType: Role.EntityModificationStatus
- uid: Domain.Aggregates.Identity.Role.Id
  name: Id
  href: api/Domain.Aggregates.Identity.Role.html#Domain_Aggregates_Identity_Role_Id
  commentId: P:Domain.Aggregates.Identity.Role.Id
  fullName: Domain.Aggregates.Identity.Role.Id
  nameWithType: Role.Id
- uid: Domain.Aggregates.Identity.Role.Id*
  name: Id
  href: api/Domain.Aggregates.Identity.Role.html#Domain_Aggregates_Identity_Role_Id_
  commentId: Overload:Domain.Aggregates.Identity.Role.Id
  isSpec: "True"
  fullName: Domain.Aggregates.Identity.Role.Id
  nameWithType: Role.Id
- uid: Domain.Aggregates.Identity.Role.RoleClaims
  name: RoleClaims
  href: api/Domain.Aggregates.Identity.Role.html#Domain_Aggregates_Identity_Role_RoleClaims
  commentId: P:Domain.Aggregates.Identity.Role.RoleClaims
  fullName: Domain.Aggregates.Identity.Role.RoleClaims
  nameWithType: Role.RoleClaims
- uid: Domain.Aggregates.Identity.Role.RoleClaims*
  name: RoleClaims
  href: api/Domain.Aggregates.Identity.Role.html#Domain_Aggregates_Identity_Role_RoleClaims_
  commentId: Overload:Domain.Aggregates.Identity.Role.RoleClaims
  isSpec: "True"
  fullName: Domain.Aggregates.Identity.Role.RoleClaims
  nameWithType: Role.RoleClaims
- uid: Domain.Aggregates.Identity.Role.UserRoles
  name: UserRoles
  href: api/Domain.Aggregates.Identity.Role.html#Domain_Aggregates_Identity_Role_UserRoles
  commentId: P:Domain.Aggregates.Identity.Role.UserRoles
  fullName: Domain.Aggregates.Identity.Role.UserRoles
  nameWithType: Role.UserRoles
- uid: Domain.Aggregates.Identity.Role.UserRoles*
  name: UserRoles
  href: api/Domain.Aggregates.Identity.Role.html#Domain_Aggregates_Identity_Role_UserRoles_
  commentId: Overload:Domain.Aggregates.Identity.Role.UserRoles
  isSpec: "True"
  fullName: Domain.Aggregates.Identity.Role.UserRoles
  nameWithType: Role.UserRoles
- uid: Domain.Aggregates.Identity.RoleClaim
  name: RoleClaim
  href: api/Domain.Aggregates.Identity.RoleClaim.html
  commentId: T:Domain.Aggregates.Identity.RoleClaim
  fullName: Domain.Aggregates.Identity.RoleClaim
  nameWithType: RoleClaim
- uid: Domain.Aggregates.Identity.RoleClaim.ConcurrencyStamp
  name: ConcurrencyStamp
  href: api/Domain.Aggregates.Identity.RoleClaim.html#Domain_Aggregates_Identity_RoleClaim_ConcurrencyStamp
  commentId: P:Domain.Aggregates.Identity.RoleClaim.ConcurrencyStamp
  fullName: Domain.Aggregates.Identity.RoleClaim.ConcurrencyStamp
  nameWithType: RoleClaim.ConcurrencyStamp
- uid: Domain.Aggregates.Identity.RoleClaim.ConcurrencyStamp*
  name: ConcurrencyStamp
  href: api/Domain.Aggregates.Identity.RoleClaim.html#Domain_Aggregates_Identity_RoleClaim_ConcurrencyStamp_
  commentId: Overload:Domain.Aggregates.Identity.RoleClaim.ConcurrencyStamp
  isSpec: "True"
  fullName: Domain.Aggregates.Identity.RoleClaim.ConcurrencyStamp
  nameWithType: RoleClaim.ConcurrencyStamp
- uid: Domain.Aggregates.Identity.RoleClaim.Id
  name: Id
  href: api/Domain.Aggregates.Identity.RoleClaim.html#Domain_Aggregates_Identity_RoleClaim_Id
  commentId: P:Domain.Aggregates.Identity.RoleClaim.Id
  fullName: Domain.Aggregates.Identity.RoleClaim.Id
  nameWithType: RoleClaim.Id
- uid: Domain.Aggregates.Identity.RoleClaim.Id*
  name: Id
  href: api/Domain.Aggregates.Identity.RoleClaim.html#Domain_Aggregates_Identity_RoleClaim_Id_
  commentId: Overload:Domain.Aggregates.Identity.RoleClaim.Id
  isSpec: "True"
  fullName: Domain.Aggregates.Identity.RoleClaim.Id
  nameWithType: RoleClaim.Id
- uid: Domain.Aggregates.Identity.RoleClaim.Role
  name: Role
  href: api/Domain.Aggregates.Identity.RoleClaim.html#Domain_Aggregates_Identity_RoleClaim_Role
  commentId: P:Domain.Aggregates.Identity.RoleClaim.Role
  fullName: Domain.Aggregates.Identity.RoleClaim.Role
  nameWithType: RoleClaim.Role
- uid: Domain.Aggregates.Identity.RoleClaim.Role*
  name: Role
  href: api/Domain.Aggregates.Identity.RoleClaim.html#Domain_Aggregates_Identity_RoleClaim_Role_
  commentId: Overload:Domain.Aggregates.Identity.RoleClaim.Role
  isSpec: "True"
  fullName: Domain.Aggregates.Identity.RoleClaim.Role
  nameWithType: RoleClaim.Role
- uid: Domain.Aggregates.Identity.Session
  name: Session
  href: api/Domain.Aggregates.Identity.Session.html
  commentId: T:Domain.Aggregates.Identity.Session
  fullName: Domain.Aggregates.Identity.Session
  nameWithType: Session
- uid: Domain.Aggregates.Identity.Session.EndDateTime
  name: EndDateTime
  href: api/Domain.Aggregates.Identity.Session.html#Domain_Aggregates_Identity_Session_EndDateTime
  commentId: P:Domain.Aggregates.Identity.Session.EndDateTime
  fullName: Domain.Aggregates.Identity.Session.EndDateTime
  nameWithType: Session.EndDateTime
- uid: Domain.Aggregates.Identity.Session.EndDateTime*
  name: EndDateTime
  href: api/Domain.Aggregates.Identity.Session.html#Domain_Aggregates_Identity_Session_EndDateTime_
  commentId: Overload:Domain.Aggregates.Identity.Session.EndDateTime
  isSpec: "True"
  fullName: Domain.Aggregates.Identity.Session.EndDateTime
  nameWithType: Session.EndDateTime
- uid: Domain.Aggregates.Identity.Session.EntityCreationStatus
  name: EntityCreationStatus
  href: api/Domain.Aggregates.Identity.Session.html#Domain_Aggregates_Identity_Session_EntityCreationStatus
  commentId: P:Domain.Aggregates.Identity.Session.EntityCreationStatus
  fullName: Domain.Aggregates.Identity.Session.EntityCreationStatus
  nameWithType: Session.EntityCreationStatus
- uid: Domain.Aggregates.Identity.Session.EntityCreationStatus*
  name: EntityCreationStatus
  href: api/Domain.Aggregates.Identity.Session.html#Domain_Aggregates_Identity_Session_EntityCreationStatus_
  commentId: Overload:Domain.Aggregates.Identity.Session.EntityCreationStatus
  isSpec: "True"
  fullName: Domain.Aggregates.Identity.Session.EntityCreationStatus
  nameWithType: Session.EntityCreationStatus
- uid: Domain.Aggregates.Identity.Session.EntityDeletionStatus
  name: EntityDeletionStatus
  href: api/Domain.Aggregates.Identity.Session.html#Domain_Aggregates_Identity_Session_EntityDeletionStatus
  commentId: P:Domain.Aggregates.Identity.Session.EntityDeletionStatus
  fullName: Domain.Aggregates.Identity.Session.EntityDeletionStatus
  nameWithType: Session.EntityDeletionStatus
- uid: Domain.Aggregates.Identity.Session.EntityDeletionStatus*
  name: EntityDeletionStatus
  href: api/Domain.Aggregates.Identity.Session.html#Domain_Aggregates_Identity_Session_EntityDeletionStatus_
  commentId: Overload:Domain.Aggregates.Identity.Session.EntityDeletionStatus
  isSpec: "True"
  fullName: Domain.Aggregates.Identity.Session.EntityDeletionStatus
  nameWithType: Session.EntityDeletionStatus
- uid: Domain.Aggregates.Identity.Session.Id
  name: Id
  href: api/Domain.Aggregates.Identity.Session.html#Domain_Aggregates_Identity_Session_Id
  commentId: P:Domain.Aggregates.Identity.Session.Id
  fullName: Domain.Aggregates.Identity.Session.Id
  nameWithType: Session.Id
- uid: Domain.Aggregates.Identity.Session.Id*
  name: Id
  href: api/Domain.Aggregates.Identity.Session.html#Domain_Aggregates_Identity_Session_Id_
  commentId: Overload:Domain.Aggregates.Identity.Session.Id
  isSpec: "True"
  fullName: Domain.Aggregates.Identity.Session.Id
  nameWithType: Session.Id
- uid: Domain.Aggregates.Identity.Session.IpAddress
  name: IpAddress
  href: api/Domain.Aggregates.Identity.Session.html#Domain_Aggregates_Identity_Session_IpAddress
  commentId: P:Domain.Aggregates.Identity.Session.IpAddress
  fullName: Domain.Aggregates.Identity.Session.IpAddress
  nameWithType: Session.IpAddress
- uid: Domain.Aggregates.Identity.Session.IpAddress*
  name: IpAddress
  href: api/Domain.Aggregates.Identity.Session.html#Domain_Aggregates_Identity_Session_IpAddress_
  commentId: Overload:Domain.Aggregates.Identity.Session.IpAddress
  isSpec: "True"
  fullName: Domain.Aggregates.Identity.Session.IpAddress
  nameWithType: Session.IpAddress
- uid: Domain.Aggregates.Identity.Session.SessionId
  name: SessionId
  href: api/Domain.Aggregates.Identity.Session.html#Domain_Aggregates_Identity_Session_SessionId
  commentId: P:Domain.Aggregates.Identity.Session.SessionId
  fullName: Domain.Aggregates.Identity.Session.SessionId
  nameWithType: Session.SessionId
- uid: Domain.Aggregates.Identity.Session.SessionId*
  name: SessionId
  href: api/Domain.Aggregates.Identity.Session.html#Domain_Aggregates_Identity_Session_SessionId_
  commentId: Overload:Domain.Aggregates.Identity.Session.SessionId
  isSpec: "True"
  fullName: Domain.Aggregates.Identity.Session.SessionId
  nameWithType: Session.SessionId
- uid: Domain.Aggregates.Identity.Session.StartDateTime
  name: StartDateTime
  href: api/Domain.Aggregates.Identity.Session.html#Domain_Aggregates_Identity_Session_StartDateTime
  commentId: P:Domain.Aggregates.Identity.Session.StartDateTime
  fullName: Domain.Aggregates.Identity.Session.StartDateTime
  nameWithType: Session.StartDateTime
- uid: Domain.Aggregates.Identity.Session.StartDateTime*
  name: StartDateTime
  href: api/Domain.Aggregates.Identity.Session.html#Domain_Aggregates_Identity_Session_StartDateTime_
  commentId: Overload:Domain.Aggregates.Identity.Session.StartDateTime
  isSpec: "True"
  fullName: Domain.Aggregates.Identity.Session.StartDateTime
  nameWithType: Session.StartDateTime
- uid: Domain.Aggregates.Identity.Session.Status
  name: Status
  href: api/Domain.Aggregates.Identity.Session.html#Domain_Aggregates_Identity_Session_Status
  commentId: P:Domain.Aggregates.Identity.Session.Status
  fullName: Domain.Aggregates.Identity.Session.Status
  nameWithType: Session.Status
- uid: Domain.Aggregates.Identity.Session.Status*
  name: Status
  href: api/Domain.Aggregates.Identity.Session.html#Domain_Aggregates_Identity_Session_Status_
  commentId: Overload:Domain.Aggregates.Identity.Session.Status
  isSpec: "True"
  fullName: Domain.Aggregates.Identity.Session.Status
  nameWithType: Session.Status
- uid: Domain.Aggregates.Identity.Session.UserAgent
  name: UserAgent
  href: api/Domain.Aggregates.Identity.Session.html#Domain_Aggregates_Identity_Session_UserAgent
  commentId: P:Domain.Aggregates.Identity.Session.UserAgent
  fullName: Domain.Aggregates.Identity.Session.UserAgent
  nameWithType: Session.UserAgent
- uid: Domain.Aggregates.Identity.Session.UserAgent*
  name: UserAgent
  href: api/Domain.Aggregates.Identity.Session.html#Domain_Aggregates_Identity_Session_UserAgent_
  commentId: Overload:Domain.Aggregates.Identity.Session.UserAgent
  isSpec: "True"
  fullName: Domain.Aggregates.Identity.Session.UserAgent
  nameWithType: Session.UserAgent
- uid: Domain.Aggregates.Identity.Session.UserId
  name: UserId
  href: api/Domain.Aggregates.Identity.Session.html#Domain_Aggregates_Identity_Session_UserId
  commentId: P:Domain.Aggregates.Identity.Session.UserId
  fullName: Domain.Aggregates.Identity.Session.UserId
  nameWithType: Session.UserId
- uid: Domain.Aggregates.Identity.Session.UserId*
  name: UserId
  href: api/Domain.Aggregates.Identity.Session.html#Domain_Aggregates_Identity_Session_UserId_
  commentId: Overload:Domain.Aggregates.Identity.Session.UserId
  isSpec: "True"
  fullName: Domain.Aggregates.Identity.Session.UserId
  nameWithType: Session.UserId
- uid: Domain.Aggregates.Identity.User
  name: User
  href: api/Domain.Aggregates.Identity.User.html
  commentId: T:Domain.Aggregates.Identity.User
  fullName: Domain.Aggregates.Identity.User
  nameWithType: User
- uid: Domain.Aggregates.Identity.User.Address
  name: Address
  href: api/Domain.Aggregates.Identity.User.html#Domain_Aggregates_Identity_User_Address
  commentId: P:Domain.Aggregates.Identity.User.Address
  fullName: Domain.Aggregates.Identity.User.Address
  nameWithType: User.Address
- uid: Domain.Aggregates.Identity.User.Address*
  name: Address
  href: api/Domain.Aggregates.Identity.User.html#Domain_Aggregates_Identity_User_Address_
  commentId: Overload:Domain.Aggregates.Identity.User.Address
  isSpec: "True"
  fullName: Domain.Aggregates.Identity.User.Address
  nameWithType: User.Address
- uid: Domain.Aggregates.Identity.User.EntityCreationStatus
  name: EntityCreationStatus
  href: api/Domain.Aggregates.Identity.User.html#Domain_Aggregates_Identity_User_EntityCreationStatus
  commentId: P:Domain.Aggregates.Identity.User.EntityCreationStatus
  fullName: Domain.Aggregates.Identity.User.EntityCreationStatus
  nameWithType: User.EntityCreationStatus
- uid: Domain.Aggregates.Identity.User.EntityCreationStatus*
  name: EntityCreationStatus
  href: api/Domain.Aggregates.Identity.User.html#Domain_Aggregates_Identity_User_EntityCreationStatus_
  commentId: Overload:Domain.Aggregates.Identity.User.EntityCreationStatus
  isSpec: "True"
  fullName: Domain.Aggregates.Identity.User.EntityCreationStatus
  nameWithType: User.EntityCreationStatus
- uid: Domain.Aggregates.Identity.User.EntityDeletionStatus
  name: EntityDeletionStatus
  href: api/Domain.Aggregates.Identity.User.html#Domain_Aggregates_Identity_User_EntityDeletionStatus
  commentId: P:Domain.Aggregates.Identity.User.EntityDeletionStatus
  fullName: Domain.Aggregates.Identity.User.EntityDeletionStatus
  nameWithType: User.EntityDeletionStatus
- uid: Domain.Aggregates.Identity.User.EntityDeletionStatus*
  name: EntityDeletionStatus
  href: api/Domain.Aggregates.Identity.User.html#Domain_Aggregates_Identity_User_EntityDeletionStatus_
  commentId: Overload:Domain.Aggregates.Identity.User.EntityDeletionStatus
  isSpec: "True"
  fullName: Domain.Aggregates.Identity.User.EntityDeletionStatus
  nameWithType: User.EntityDeletionStatus
- uid: Domain.Aggregates.Identity.User.EntityModificationStatus
  name: EntityModificationStatus
  href: api/Domain.Aggregates.Identity.User.html#Domain_Aggregates_Identity_User_EntityModificationStatus
  commentId: P:Domain.Aggregates.Identity.User.EntityModificationStatus
  fullName: Domain.Aggregates.Identity.User.EntityModificationStatus
  nameWithType: User.EntityModificationStatus
- uid: Domain.Aggregates.Identity.User.EntityModificationStatus*
  name: EntityModificationStatus
  href: api/Domain.Aggregates.Identity.User.html#Domain_Aggregates_Identity_User_EntityModificationStatus_
  commentId: Overload:Domain.Aggregates.Identity.User.EntityModificationStatus
  isSpec: "True"
  fullName: Domain.Aggregates.Identity.User.EntityModificationStatus
  nameWithType: User.EntityModificationStatus
- uid: Domain.Aggregates.Identity.User.Id
  name: Id
  href: api/Domain.Aggregates.Identity.User.html#Domain_Aggregates_Identity_User_Id
  commentId: P:Domain.Aggregates.Identity.User.Id
  fullName: Domain.Aggregates.Identity.User.Id
  nameWithType: User.Id
- uid: Domain.Aggregates.Identity.User.Id*
  name: Id
  href: api/Domain.Aggregates.Identity.User.html#Domain_Aggregates_Identity_User_Id_
  commentId: Overload:Domain.Aggregates.Identity.User.Id
  isSpec: "True"
  fullName: Domain.Aggregates.Identity.User.Id
  nameWithType: User.Id
- uid: Domain.Aggregates.Identity.User.MultiFactorAuthenticatorEnabled
  name: MultiFactorAuthenticatorEnabled
  href: api/Domain.Aggregates.Identity.User.html#Domain_Aggregates_Identity_User_MultiFactorAuthenticatorEnabled
  commentId: P:Domain.Aggregates.Identity.User.MultiFactorAuthenticatorEnabled
  fullName: Domain.Aggregates.Identity.User.MultiFactorAuthenticatorEnabled
  nameWithType: User.MultiFactorAuthenticatorEnabled
- uid: Domain.Aggregates.Identity.User.MultiFactorAuthenticatorEnabled*
  name: MultiFactorAuthenticatorEnabled
  href: api/Domain.Aggregates.Identity.User.html#Domain_Aggregates_Identity_User_MultiFactorAuthenticatorEnabled_
  commentId: Overload:Domain.Aggregates.Identity.User.MultiFactorAuthenticatorEnabled
  isSpec: "True"
  fullName: Domain.Aggregates.Identity.User.MultiFactorAuthenticatorEnabled
  nameWithType: User.MultiFactorAuthenticatorEnabled
- uid: Domain.Aggregates.Identity.User.UserClaims
  name: UserClaims
  href: api/Domain.Aggregates.Identity.User.html#Domain_Aggregates_Identity_User_UserClaims
  commentId: P:Domain.Aggregates.Identity.User.UserClaims
  fullName: Domain.Aggregates.Identity.User.UserClaims
  nameWithType: User.UserClaims
- uid: Domain.Aggregates.Identity.User.UserClaims*
  name: UserClaims
  href: api/Domain.Aggregates.Identity.User.html#Domain_Aggregates_Identity_User_UserClaims_
  commentId: Overload:Domain.Aggregates.Identity.User.UserClaims
  isSpec: "True"
  fullName: Domain.Aggregates.Identity.User.UserClaims
  nameWithType: User.UserClaims
- uid: Domain.Aggregates.Identity.User.UserClientApplications
  name: UserClientApplications
  href: api/Domain.Aggregates.Identity.User.html#Domain_Aggregates_Identity_User_UserClientApplications
  commentId: P:Domain.Aggregates.Identity.User.UserClientApplications
  fullName: Domain.Aggregates.Identity.User.UserClientApplications
  nameWithType: User.UserClientApplications
- uid: Domain.Aggregates.Identity.User.UserClientApplications*
  name: UserClientApplications
  href: api/Domain.Aggregates.Identity.User.html#Domain_Aggregates_Identity_User_UserClientApplications_
  commentId: Overload:Domain.Aggregates.Identity.User.UserClientApplications
  isSpec: "True"
  fullName: Domain.Aggregates.Identity.User.UserClientApplications
  nameWithType: User.UserClientApplications
- uid: Domain.Aggregates.Identity.User.UserRoles
  name: UserRoles
  href: api/Domain.Aggregates.Identity.User.html#Domain_Aggregates_Identity_User_UserRoles
  commentId: P:Domain.Aggregates.Identity.User.UserRoles
  fullName: Domain.Aggregates.Identity.User.UserRoles
  nameWithType: User.UserRoles
- uid: Domain.Aggregates.Identity.User.UserRoles*
  name: UserRoles
  href: api/Domain.Aggregates.Identity.User.html#Domain_Aggregates_Identity_User_UserRoles_
  commentId: Overload:Domain.Aggregates.Identity.User.UserRoles
  isSpec: "True"
  fullName: Domain.Aggregates.Identity.User.UserRoles
  nameWithType: User.UserRoles
- uid: Domain.Aggregates.Identity.UserClaim
  name: UserClaim
  href: api/Domain.Aggregates.Identity.UserClaim.html
  commentId: T:Domain.Aggregates.Identity.UserClaim
  fullName: Domain.Aggregates.Identity.UserClaim
  nameWithType: UserClaim
- uid: Domain.Aggregates.Identity.UserClaim.ConcurrencyStamp
  name: ConcurrencyStamp
  href: api/Domain.Aggregates.Identity.UserClaim.html#Domain_Aggregates_Identity_UserClaim_ConcurrencyStamp
  commentId: P:Domain.Aggregates.Identity.UserClaim.ConcurrencyStamp
  fullName: Domain.Aggregates.Identity.UserClaim.ConcurrencyStamp
  nameWithType: UserClaim.ConcurrencyStamp
- uid: Domain.Aggregates.Identity.UserClaim.ConcurrencyStamp*
  name: ConcurrencyStamp
  href: api/Domain.Aggregates.Identity.UserClaim.html#Domain_Aggregates_Identity_UserClaim_ConcurrencyStamp_
  commentId: Overload:Domain.Aggregates.Identity.UserClaim.ConcurrencyStamp
  isSpec: "True"
  fullName: Domain.Aggregates.Identity.UserClaim.ConcurrencyStamp
  nameWithType: UserClaim.ConcurrencyStamp
- uid: Domain.Aggregates.Identity.UserClaim.EntityCreationStatus
  name: EntityCreationStatus
  href: api/Domain.Aggregates.Identity.UserClaim.html#Domain_Aggregates_Identity_UserClaim_EntityCreationStatus
  commentId: P:Domain.Aggregates.Identity.UserClaim.EntityCreationStatus
  fullName: Domain.Aggregates.Identity.UserClaim.EntityCreationStatus
  nameWithType: UserClaim.EntityCreationStatus
- uid: Domain.Aggregates.Identity.UserClaim.EntityCreationStatus*
  name: EntityCreationStatus
  href: api/Domain.Aggregates.Identity.UserClaim.html#Domain_Aggregates_Identity_UserClaim_EntityCreationStatus_
  commentId: Overload:Domain.Aggregates.Identity.UserClaim.EntityCreationStatus
  isSpec: "True"
  fullName: Domain.Aggregates.Identity.UserClaim.EntityCreationStatus
  nameWithType: UserClaim.EntityCreationStatus
- uid: Domain.Aggregates.Identity.UserClaim.EntityDeletionStatus
  name: EntityDeletionStatus
  href: api/Domain.Aggregates.Identity.UserClaim.html#Domain_Aggregates_Identity_UserClaim_EntityDeletionStatus
  commentId: P:Domain.Aggregates.Identity.UserClaim.EntityDeletionStatus
  fullName: Domain.Aggregates.Identity.UserClaim.EntityDeletionStatus
  nameWithType: UserClaim.EntityDeletionStatus
- uid: Domain.Aggregates.Identity.UserClaim.EntityDeletionStatus*
  name: EntityDeletionStatus
  href: api/Domain.Aggregates.Identity.UserClaim.html#Domain_Aggregates_Identity_UserClaim_EntityDeletionStatus_
  commentId: Overload:Domain.Aggregates.Identity.UserClaim.EntityDeletionStatus
  isSpec: "True"
  fullName: Domain.Aggregates.Identity.UserClaim.EntityDeletionStatus
  nameWithType: UserClaim.EntityDeletionStatus
- uid: Domain.Aggregates.Identity.UserClaim.EntityModificationStatus
  name: EntityModificationStatus
  href: api/Domain.Aggregates.Identity.UserClaim.html#Domain_Aggregates_Identity_UserClaim_EntityModificationStatus
  commentId: P:Domain.Aggregates.Identity.UserClaim.EntityModificationStatus
  fullName: Domain.Aggregates.Identity.UserClaim.EntityModificationStatus
  nameWithType: UserClaim.EntityModificationStatus
- uid: Domain.Aggregates.Identity.UserClaim.EntityModificationStatus*
  name: EntityModificationStatus
  href: api/Domain.Aggregates.Identity.UserClaim.html#Domain_Aggregates_Identity_UserClaim_EntityModificationStatus_
  commentId: Overload:Domain.Aggregates.Identity.UserClaim.EntityModificationStatus
  isSpec: "True"
  fullName: Domain.Aggregates.Identity.UserClaim.EntityModificationStatus
  nameWithType: UserClaim.EntityModificationStatus
- uid: Domain.Aggregates.Identity.UserClaim.Id
  name: Id
  href: api/Domain.Aggregates.Identity.UserClaim.html#Domain_Aggregates_Identity_UserClaim_Id
  commentId: P:Domain.Aggregates.Identity.UserClaim.Id
  fullName: Domain.Aggregates.Identity.UserClaim.Id
  nameWithType: UserClaim.Id
- uid: Domain.Aggregates.Identity.UserClaim.Id*
  name: Id
  href: api/Domain.Aggregates.Identity.UserClaim.html#Domain_Aggregates_Identity_UserClaim_Id_
  commentId: Overload:Domain.Aggregates.Identity.UserClaim.Id
  isSpec: "True"
  fullName: Domain.Aggregates.Identity.UserClaim.Id
  nameWithType: UserClaim.Id
- uid: Domain.Aggregates.Identity.UserClaim.User
  name: User
  href: api/Domain.Aggregates.Identity.UserClaim.html#Domain_Aggregates_Identity_UserClaim_User
  commentId: P:Domain.Aggregates.Identity.UserClaim.User
  fullName: Domain.Aggregates.Identity.UserClaim.User
  nameWithType: UserClaim.User
- uid: Domain.Aggregates.Identity.UserClaim.User*
  name: User
  href: api/Domain.Aggregates.Identity.UserClaim.html#Domain_Aggregates_Identity_UserClaim_User_
  commentId: Overload:Domain.Aggregates.Identity.UserClaim.User
  isSpec: "True"
  fullName: Domain.Aggregates.Identity.UserClaim.User
  nameWithType: UserClaim.User
- uid: Domain.Aggregates.Identity.UserClaim.UserId
  name: UserId
  href: api/Domain.Aggregates.Identity.UserClaim.html#Domain_Aggregates_Identity_UserClaim_UserId
  commentId: P:Domain.Aggregates.Identity.UserClaim.UserId
  fullName: Domain.Aggregates.Identity.UserClaim.UserId
  nameWithType: UserClaim.UserId
- uid: Domain.Aggregates.Identity.UserClaim.UserId*
  name: UserId
  href: api/Domain.Aggregates.Identity.UserClaim.html#Domain_Aggregates_Identity_UserClaim_UserId_
  commentId: Overload:Domain.Aggregates.Identity.UserClaim.UserId
  isSpec: "True"
  fullName: Domain.Aggregates.Identity.UserClaim.UserId
  nameWithType: UserClaim.UserId
- uid: Domain.Aggregates.Identity.UserClientApplication
  name: UserClientApplication
  href: api/Domain.Aggregates.Identity.UserClientApplication.html
  commentId: T:Domain.Aggregates.Identity.UserClientApplication
  fullName: Domain.Aggregates.Identity.UserClientApplication
  nameWithType: UserClientApplication
- uid: Domain.Aggregates.Identity.UserClientApplication.Id
  name: Id
  href: api/Domain.Aggregates.Identity.UserClientApplication.html#Domain_Aggregates_Identity_UserClientApplication_Id
  commentId: P:Domain.Aggregates.Identity.UserClientApplication.Id
  fullName: Domain.Aggregates.Identity.UserClientApplication.Id
  nameWithType: UserClientApplication.Id
- uid: Domain.Aggregates.Identity.UserClientApplication.Id*
  name: Id
  href: api/Domain.Aggregates.Identity.UserClientApplication.html#Domain_Aggregates_Identity_UserClientApplication_Id_
  commentId: Overload:Domain.Aggregates.Identity.UserClientApplication.Id
  isSpec: "True"
  fullName: Domain.Aggregates.Identity.UserClientApplication.Id
  nameWithType: UserClientApplication.Id
- uid: Domain.Aggregates.Identity.UserClientApplication`1
  name: UserClientApplication<TKey>
  href: api/Domain.Aggregates.Identity.UserClientApplication-1.html
  commentId: T:Domain.Aggregates.Identity.UserClientApplication`1
  name.vb: UserClientApplication(Of TKey)
  fullName: Domain.Aggregates.Identity.UserClientApplication<TKey>
  fullName.vb: Domain.Aggregates.Identity.UserClientApplication(Of TKey)
  nameWithType: UserClientApplication<TKey>
  nameWithType.vb: UserClientApplication(Of TKey)
- uid: Domain.Aggregates.Identity.UserClientApplication`1.Application
  name: Application
  href: api/Domain.Aggregates.Identity.UserClientApplication-1.html#Domain_Aggregates_Identity_UserClientApplication_1_Application
  commentId: P:Domain.Aggregates.Identity.UserClientApplication`1.Application
  fullName: Domain.Aggregates.Identity.UserClientApplication<TKey>.Application
  fullName.vb: Domain.Aggregates.Identity.UserClientApplication(Of TKey).Application
  nameWithType: UserClientApplication<TKey>.Application
  nameWithType.vb: UserClientApplication(Of TKey).Application
- uid: Domain.Aggregates.Identity.UserClientApplication`1.Application*
  name: Application
  href: api/Domain.Aggregates.Identity.UserClientApplication-1.html#Domain_Aggregates_Identity_UserClientApplication_1_Application_
  commentId: Overload:Domain.Aggregates.Identity.UserClientApplication`1.Application
  isSpec: "True"
  fullName: Domain.Aggregates.Identity.UserClientApplication<TKey>.Application
  fullName.vb: Domain.Aggregates.Identity.UserClientApplication(Of TKey).Application
  nameWithType: UserClientApplication<TKey>.Application
  nameWithType.vb: UserClientApplication(Of TKey).Application
- uid: Domain.Aggregates.Identity.UserClientApplication`1.ApplicationId
  name: ApplicationId
  href: api/Domain.Aggregates.Identity.UserClientApplication-1.html#Domain_Aggregates_Identity_UserClientApplication_1_ApplicationId
  commentId: P:Domain.Aggregates.Identity.UserClientApplication`1.ApplicationId
  fullName: Domain.Aggregates.Identity.UserClientApplication<TKey>.ApplicationId
  fullName.vb: Domain.Aggregates.Identity.UserClientApplication(Of TKey).ApplicationId
  nameWithType: UserClientApplication<TKey>.ApplicationId
  nameWithType.vb: UserClientApplication(Of TKey).ApplicationId
- uid: Domain.Aggregates.Identity.UserClientApplication`1.ApplicationId*
  name: ApplicationId
  href: api/Domain.Aggregates.Identity.UserClientApplication-1.html#Domain_Aggregates_Identity_UserClientApplication_1_ApplicationId_
  commentId: Overload:Domain.Aggregates.Identity.UserClientApplication`1.ApplicationId
  isSpec: "True"
  fullName: Domain.Aggregates.Identity.UserClientApplication<TKey>.ApplicationId
  fullName.vb: Domain.Aggregates.Identity.UserClientApplication(Of TKey).ApplicationId
  nameWithType: UserClientApplication<TKey>.ApplicationId
  nameWithType.vb: UserClientApplication(Of TKey).ApplicationId
- uid: Domain.Aggregates.Identity.UserClientApplication`1.Id
  name: Id
  href: api/Domain.Aggregates.Identity.UserClientApplication-1.html#Domain_Aggregates_Identity_UserClientApplication_1_Id
  commentId: P:Domain.Aggregates.Identity.UserClientApplication`1.Id
  fullName: Domain.Aggregates.Identity.UserClientApplication<TKey>.Id
  fullName.vb: Domain.Aggregates.Identity.UserClientApplication(Of TKey).Id
  nameWithType: UserClientApplication<TKey>.Id
  nameWithType.vb: UserClientApplication(Of TKey).Id
- uid: Domain.Aggregates.Identity.UserClientApplication`1.Id*
  name: Id
  href: api/Domain.Aggregates.Identity.UserClientApplication-1.html#Domain_Aggregates_Identity_UserClientApplication_1_Id_
  commentId: Overload:Domain.Aggregates.Identity.UserClientApplication`1.Id
  isSpec: "True"
  fullName: Domain.Aggregates.Identity.UserClientApplication<TKey>.Id
  fullName.vb: Domain.Aggregates.Identity.UserClientApplication(Of TKey).Id
  nameWithType: UserClientApplication<TKey>.Id
  nameWithType.vb: UserClientApplication(Of TKey).Id
- uid: Domain.Aggregates.Identity.UserClientApplication`1.User
  name: User
  href: api/Domain.Aggregates.Identity.UserClientApplication-1.html#Domain_Aggregates_Identity_UserClientApplication_1_User
  commentId: P:Domain.Aggregates.Identity.UserClientApplication`1.User
  fullName: Domain.Aggregates.Identity.UserClientApplication<TKey>.User
  fullName.vb: Domain.Aggregates.Identity.UserClientApplication(Of TKey).User
  nameWithType: UserClientApplication<TKey>.User
  nameWithType.vb: UserClientApplication(Of TKey).User
- uid: Domain.Aggregates.Identity.UserClientApplication`1.User*
  name: User
  href: api/Domain.Aggregates.Identity.UserClientApplication-1.html#Domain_Aggregates_Identity_UserClientApplication_1_User_
  commentId: Overload:Domain.Aggregates.Identity.UserClientApplication`1.User
  isSpec: "True"
  fullName: Domain.Aggregates.Identity.UserClientApplication<TKey>.User
  fullName.vb: Domain.Aggregates.Identity.UserClientApplication(Of TKey).User
  nameWithType: UserClientApplication<TKey>.User
  nameWithType.vb: UserClientApplication(Of TKey).User
- uid: Domain.Aggregates.Identity.UserClientApplication`1.UserId
  name: UserId
  href: api/Domain.Aggregates.Identity.UserClientApplication-1.html#Domain_Aggregates_Identity_UserClientApplication_1_UserId
  commentId: P:Domain.Aggregates.Identity.UserClientApplication`1.UserId
  fullName: Domain.Aggregates.Identity.UserClientApplication<TKey>.UserId
  fullName.vb: Domain.Aggregates.Identity.UserClientApplication(Of TKey).UserId
  nameWithType: UserClientApplication<TKey>.UserId
  nameWithType.vb: UserClientApplication(Of TKey).UserId
- uid: Domain.Aggregates.Identity.UserClientApplication`1.UserId*
  name: UserId
  href: api/Domain.Aggregates.Identity.UserClientApplication-1.html#Domain_Aggregates_Identity_UserClientApplication_1_UserId_
  commentId: Overload:Domain.Aggregates.Identity.UserClientApplication`1.UserId
  isSpec: "True"
  fullName: Domain.Aggregates.Identity.UserClientApplication<TKey>.UserId
  fullName.vb: Domain.Aggregates.Identity.UserClientApplication(Of TKey).UserId
  nameWithType: UserClientApplication<TKey>.UserId
  nameWithType.vb: UserClientApplication(Of TKey).UserId
- uid: Domain.Aggregates.Identity.UserRole
  name: UserRole
  href: api/Domain.Aggregates.Identity.UserRole.html
  commentId: T:Domain.Aggregates.Identity.UserRole
  fullName: Domain.Aggregates.Identity.UserRole
  nameWithType: UserRole
- uid: Domain.Aggregates.Identity.UserRole.Role
  name: Role
  href: api/Domain.Aggregates.Identity.UserRole.html#Domain_Aggregates_Identity_UserRole_Role
  commentId: P:Domain.Aggregates.Identity.UserRole.Role
  fullName: Domain.Aggregates.Identity.UserRole.Role
  nameWithType: UserRole.Role
- uid: Domain.Aggregates.Identity.UserRole.Role*
  name: Role
  href: api/Domain.Aggregates.Identity.UserRole.html#Domain_Aggregates_Identity_UserRole_Role_
  commentId: Overload:Domain.Aggregates.Identity.UserRole.Role
  isSpec: "True"
  fullName: Domain.Aggregates.Identity.UserRole.Role
  nameWithType: UserRole.Role
- uid: Domain.Aggregates.Identity.UserRole.User
  name: User
  href: api/Domain.Aggregates.Identity.UserRole.html#Domain_Aggregates_Identity_UserRole_User
  commentId: P:Domain.Aggregates.Identity.UserRole.User
  fullName: Domain.Aggregates.Identity.UserRole.User
  nameWithType: UserRole.User
- uid: Domain.Aggregates.Identity.UserRole.User*
  name: User
  href: api/Domain.Aggregates.Identity.UserRole.html#Domain_Aggregates_Identity_UserRole_User_
  commentId: Overload:Domain.Aggregates.Identity.UserRole.User
  isSpec: "True"
  fullName: Domain.Aggregates.Identity.UserRole.User
  nameWithType: UserRole.User
- uid: Domain.Constants
  name: Domain.Constants
  href: api/Domain.Constants.html
  commentId: N:Domain.Constants
  fullName: Domain.Constants
  nameWithType: Domain.Constants
- uid: Domain.Constants.CorsDefaults
  name: CorsDefaults
  href: api/Domain.Constants.CorsDefaults.html
  commentId: T:Domain.Constants.CorsDefaults
  fullName: Domain.Constants.CorsDefaults
  nameWithType: CorsDefaults
- uid: Domain.Constants.CorsDefaults.PolicyName
  name: PolicyName
  href: api/Domain.Constants.CorsDefaults.html#Domain_Constants_CorsDefaults_PolicyName
  commentId: F:Domain.Constants.CorsDefaults.PolicyName
  fullName: Domain.Constants.CorsDefaults.PolicyName
  nameWithType: CorsDefaults.PolicyName
- uid: Domain.Constants.ServiceNameDefaults
  name: ServiceNameDefaults
  href: api/Domain.Constants.ServiceNameDefaults.html
  commentId: T:Domain.Constants.ServiceNameDefaults
  fullName: Domain.Constants.ServiceNameDefaults
  nameWithType: ServiceNameDefaults
- uid: Domain.Constants.ServiceNameDefaults.ServiceName
  name: ServiceName
  href: api/Domain.Constants.ServiceNameDefaults.html#Domain_Constants_ServiceNameDefaults_ServiceName
  commentId: F:Domain.Constants.ServiceNameDefaults.ServiceName
  fullName: Domain.Constants.ServiceNameDefaults.ServiceName
  nameWithType: ServiceNameDefaults.ServiceName
- uid: Domain.Constants.SessionConstants
  name: SessionConstants
  href: api/Domain.Constants.SessionConstants.html
  commentId: T:Domain.Constants.SessionConstants
  fullName: Domain.Constants.SessionConstants
  nameWithType: SessionConstants
- uid: Domain.Constants.SessionConstants.SequenceId
  name: SequenceId
  href: api/Domain.Constants.SessionConstants.html#Domain_Constants_SessionConstants_SequenceId
  commentId: F:Domain.Constants.SessionConstants.SequenceId
  fullName: Domain.Constants.SessionConstants.SequenceId
  nameWithType: SessionConstants.SequenceId
- uid: Domain.Constants.SessionStatus
  name: SessionStatus
  href: api/Domain.Constants.SessionStatus.html
  commentId: T:Domain.Constants.SessionStatus
  fullName: Domain.Constants.SessionStatus
  nameWithType: SessionStatus
- uid: Domain.Constants.SessionStatus.Active
  name: Active
  href: api/Domain.Constants.SessionStatus.html#Domain_Constants_SessionStatus_Active
  commentId: F:Domain.Constants.SessionStatus.Active
  fullName: Domain.Constants.SessionStatus.Active
  nameWithType: SessionStatus.Active
- uid: Domain.Constants.SessionStatus.Terminated
  name: Terminated
  href: api/Domain.Constants.SessionStatus.html#Domain_Constants_SessionStatus_Terminated
  commentId: F:Domain.Constants.SessionStatus.Terminated
  fullName: Domain.Constants.SessionStatus.Terminated
  nameWithType: SessionStatus.Terminated
- uid: Domain.Constants.TokenConstants
  name: TokenConstants
  href: api/Domain.Constants.TokenConstants.html
  commentId: T:Domain.Constants.TokenConstants
  fullName: Domain.Constants.TokenConstants
  nameWithType: TokenConstants
- uid: Domain.Constants.TokenConstants.AuthorizationCode
  name: AuthorizationCode
  href: api/Domain.Constants.TokenConstants.html#Domain_Constants_TokenConstants_AuthorizationCode
  commentId: F:Domain.Constants.TokenConstants.AuthorizationCode
  fullName: Domain.Constants.TokenConstants.AuthorizationCode
  nameWithType: TokenConstants.AuthorizationCode
- uid: Domain.Constants.TokenConstants.ClientCredentials
  name: ClientCredentials
  href: api/Domain.Constants.TokenConstants.html#Domain_Constants_TokenConstants_ClientCredentials
  commentId: F:Domain.Constants.TokenConstants.ClientCredentials
  fullName: Domain.Constants.TokenConstants.ClientCredentials
  nameWithType: TokenConstants.ClientCredentials
- uid: Domain.Constants.TokenConstants.DeviceCode
  name: DeviceCode
  href: api/Domain.Constants.TokenConstants.html#Domain_Constants_TokenConstants_DeviceCode
  commentId: F:Domain.Constants.TokenConstants.DeviceCode
  fullName: Domain.Constants.TokenConstants.DeviceCode
  nameWithType: TokenConstants.DeviceCode
- uid: Domain.Constants.TokenConstants.Refresh
  name: Refresh
  href: api/Domain.Constants.TokenConstants.html#Domain_Constants_TokenConstants_Refresh
  commentId: F:Domain.Constants.TokenConstants.Refresh
  fullName: Domain.Constants.TokenConstants.Refresh
  nameWithType: TokenConstants.Refresh
- uid: Domain.Contracts
  name: Domain.Contracts
  href: api/Domain.Contracts.html
  commentId: N:Domain.Contracts
  fullName: Domain.Contracts
  nameWithType: Domain.Contracts
- uid: Domain.Contracts.IEntityDeletionStatus`1
  name: IEntityDeletionStatus<TKey>
  href: api/Domain.Contracts.IEntityDeletionStatus-1.html
  commentId: T:Domain.Contracts.IEntityDeletionStatus`1
  name.vb: IEntityDeletionStatus(Of TKey)
  fullName: Domain.Contracts.IEntityDeletionStatus<TKey>
  fullName.vb: Domain.Contracts.IEntityDeletionStatus(Of TKey)
  nameWithType: IEntityDeletionStatus<TKey>
  nameWithType.vb: IEntityDeletionStatus(Of TKey)
- uid: Domain.Contracts.IEntityDeletionStatus`1.EntityDeletionStatus
  name: EntityDeletionStatus
  href: api/Domain.Contracts.IEntityDeletionStatus-1.html#Domain_Contracts_IEntityDeletionStatus_1_EntityDeletionStatus
  commentId: P:Domain.Contracts.IEntityDeletionStatus`1.EntityDeletionStatus
  fullName: Domain.Contracts.IEntityDeletionStatus<TKey>.EntityDeletionStatus
  fullName.vb: Domain.Contracts.IEntityDeletionStatus(Of TKey).EntityDeletionStatus
  nameWithType: IEntityDeletionStatus<TKey>.EntityDeletionStatus
  nameWithType.vb: IEntityDeletionStatus(Of TKey).EntityDeletionStatus
- uid: Domain.Contracts.IEntityDeletionStatus`1.EntityDeletionStatus*
  name: EntityDeletionStatus
  href: api/Domain.Contracts.IEntityDeletionStatus-1.html#Domain_Contracts_IEntityDeletionStatus_1_EntityDeletionStatus_
  commentId: Overload:Domain.Contracts.IEntityDeletionStatus`1.EntityDeletionStatus
  isSpec: "True"
  fullName: Domain.Contracts.IEntityDeletionStatus<TKey>.EntityDeletionStatus
  fullName.vb: Domain.Contracts.IEntityDeletionStatus(Of TKey).EntityDeletionStatus
  nameWithType: IEntityDeletionStatus<TKey>.EntityDeletionStatus
  nameWithType.vb: IEntityDeletionStatus(Of TKey).EntityDeletionStatus
- uid: Domain.Errors
  name: Domain.Errors
  href: api/Domain.Errors.html
  commentId: N:Domain.Errors
  fullName: Domain.Errors
  nameWithType: Domain.Errors
- uid: Domain.Errors.CustomProblemDetails
  name: CustomProblemDetails
  href: api/Domain.Errors.CustomProblemDetails.html
  commentId: T:Domain.Errors.CustomProblemDetails
  fullName: Domain.Errors.CustomProblemDetails
  nameWithType: CustomProblemDetails
- uid: Domain.Errors.CustomProblemDetails.ExceptionType
  name: ExceptionType
  href: api/Domain.Errors.CustomProblemDetails.html#Domain_Errors_CustomProblemDetails_ExceptionType
  commentId: P:Domain.Errors.CustomProblemDetails.ExceptionType
  fullName: Domain.Errors.CustomProblemDetails.ExceptionType
  nameWithType: CustomProblemDetails.ExceptionType
- uid: Domain.Errors.CustomProblemDetails.ExceptionType*
  name: ExceptionType
  href: api/Domain.Errors.CustomProblemDetails.html#Domain_Errors_CustomProblemDetails_ExceptionType_
  commentId: Overload:Domain.Errors.CustomProblemDetails.ExceptionType
  isSpec: "True"
  fullName: Domain.Errors.CustomProblemDetails.ExceptionType
  nameWithType: CustomProblemDetails.ExceptionType
- uid: Domain.Errors.CustomProblemDetails.MachineName
  name: MachineName
  href: api/Domain.Errors.CustomProblemDetails.html#Domain_Errors_CustomProblemDetails_MachineName
  commentId: P:Domain.Errors.CustomProblemDetails.MachineName
  fullName: Domain.Errors.CustomProblemDetails.MachineName
  nameWithType: CustomProblemDetails.MachineName
- uid: Domain.Errors.CustomProblemDetails.MachineName*
  name: MachineName
  href: api/Domain.Errors.CustomProblemDetails.html#Domain_Errors_CustomProblemDetails_MachineName_
  commentId: Overload:Domain.Errors.CustomProblemDetails.MachineName
  isSpec: "True"
  fullName: Domain.Errors.CustomProblemDetails.MachineName
  nameWithType: CustomProblemDetails.MachineName
- uid: Domain.Errors.CustomProblemDetails.Method
  name: Method
  href: api/Domain.Errors.CustomProblemDetails.html#Domain_Errors_CustomProblemDetails_Method
  commentId: P:Domain.Errors.CustomProblemDetails.Method
  fullName: Domain.Errors.CustomProblemDetails.Method
  nameWithType: CustomProblemDetails.Method
- uid: Domain.Errors.CustomProblemDetails.Method*
  name: Method
  href: api/Domain.Errors.CustomProblemDetails.html#Domain_Errors_CustomProblemDetails_Method_
  commentId: Overload:Domain.Errors.CustomProblemDetails.Method
  isSpec: "True"
  fullName: Domain.Errors.CustomProblemDetails.Method
  nameWithType: CustomProblemDetails.Method
- uid: Domain.Errors.CustomProblemDetails.RequestId
  name: RequestId
  href: api/Domain.Errors.CustomProblemDetails.html#Domain_Errors_CustomProblemDetails_RequestId
  commentId: P:Domain.Errors.CustomProblemDetails.RequestId
  fullName: Domain.Errors.CustomProblemDetails.RequestId
  nameWithType: CustomProblemDetails.RequestId
- uid: Domain.Errors.CustomProblemDetails.RequestId*
  name: RequestId
  href: api/Domain.Errors.CustomProblemDetails.html#Domain_Errors_CustomProblemDetails_RequestId_
  commentId: Overload:Domain.Errors.CustomProblemDetails.RequestId
  isSpec: "True"
  fullName: Domain.Errors.CustomProblemDetails.RequestId
  nameWithType: CustomProblemDetails.RequestId
- uid: Domain.Errors.CustomProblemDetails.ServiceName
  name: ServiceName
  href: api/Domain.Errors.CustomProblemDetails.html#Domain_Errors_CustomProblemDetails_ServiceName
  commentId: P:Domain.Errors.CustomProblemDetails.ServiceName
  fullName: Domain.Errors.CustomProblemDetails.ServiceName
  nameWithType: CustomProblemDetails.ServiceName
- uid: Domain.Errors.CustomProblemDetails.ServiceName*
  name: ServiceName
  href: api/Domain.Errors.CustomProblemDetails.html#Domain_Errors_CustomProblemDetails_ServiceName_
  commentId: Overload:Domain.Errors.CustomProblemDetails.ServiceName
  isSpec: "True"
  fullName: Domain.Errors.CustomProblemDetails.ServiceName
  nameWithType: CustomProblemDetails.ServiceName
- uid: Domain.Errors.CustomProblemDetails.StackTrace
  name: StackTrace
  href: api/Domain.Errors.CustomProblemDetails.html#Domain_Errors_CustomProblemDetails_StackTrace
  commentId: P:Domain.Errors.CustomProblemDetails.StackTrace
  fullName: Domain.Errors.CustomProblemDetails.StackTrace
  nameWithType: CustomProblemDetails.StackTrace
- uid: Domain.Errors.CustomProblemDetails.StackTrace*
  name: StackTrace
  href: api/Domain.Errors.CustomProblemDetails.html#Domain_Errors_CustomProblemDetails_StackTrace_
  commentId: Overload:Domain.Errors.CustomProblemDetails.StackTrace
  isSpec: "True"
  fullName: Domain.Errors.CustomProblemDetails.StackTrace
  nameWithType: CustomProblemDetails.StackTrace
- uid: Domain.Errors.CustomProblemDetails.Timestamp
  name: Timestamp
  href: api/Domain.Errors.CustomProblemDetails.html#Domain_Errors_CustomProblemDetails_Timestamp
  commentId: P:Domain.Errors.CustomProblemDetails.Timestamp
  fullName: Domain.Errors.CustomProblemDetails.Timestamp
  nameWithType: CustomProblemDetails.Timestamp
- uid: Domain.Errors.CustomProblemDetails.Timestamp*
  name: Timestamp
  href: api/Domain.Errors.CustomProblemDetails.html#Domain_Errors_CustomProblemDetails_Timestamp_
  commentId: Overload:Domain.Errors.CustomProblemDetails.Timestamp
  isSpec: "True"
  fullName: Domain.Errors.CustomProblemDetails.Timestamp
  nameWithType: CustomProblemDetails.Timestamp
- uid: Domain.Errors.CustomProblemDetails.UserAgent
  name: UserAgent
  href: api/Domain.Errors.CustomProblemDetails.html#Domain_Errors_CustomProblemDetails_UserAgent
  commentId: P:Domain.Errors.CustomProblemDetails.UserAgent
  fullName: Domain.Errors.CustomProblemDetails.UserAgent
  nameWithType: CustomProblemDetails.UserAgent
- uid: Domain.Errors.CustomProblemDetails.UserAgent*
  name: UserAgent
  href: api/Domain.Errors.CustomProblemDetails.html#Domain_Errors_CustomProblemDetails_UserAgent_
  commentId: Overload:Domain.Errors.CustomProblemDetails.UserAgent
  isSpec: "True"
  fullName: Domain.Errors.CustomProblemDetails.UserAgent
  nameWithType: CustomProblemDetails.UserAgent
- uid: Domain.Errors.CustomProblemDetails.UserId
  name: UserId
  href: api/Domain.Errors.CustomProblemDetails.html#Domain_Errors_CustomProblemDetails_UserId
  commentId: P:Domain.Errors.CustomProblemDetails.UserId
  fullName: Domain.Errors.CustomProblemDetails.UserId
  nameWithType: CustomProblemDetails.UserId
- uid: Domain.Errors.CustomProblemDetails.UserId*
  name: UserId
  href: api/Domain.Errors.CustomProblemDetails.html#Domain_Errors_CustomProblemDetails_UserId_
  commentId: Overload:Domain.Errors.CustomProblemDetails.UserId
  isSpec: "True"
  fullName: Domain.Errors.CustomProblemDetails.UserId
  nameWithType: CustomProblemDetails.UserId
- uid: Domain.ValueObjects
  name: Domain.ValueObjects
  href: api/Domain.ValueObjects.html
  commentId: N:Domain.ValueObjects
  fullName: Domain.ValueObjects
  nameWithType: Domain.ValueObjects
- uid: Domain.ValueObjects.Address
  name: Address
  href: api/Domain.ValueObjects.Address.html
  commentId: T:Domain.ValueObjects.Address
  fullName: Domain.ValueObjects.Address
  nameWithType: Address
- uid: Domain.ValueObjects.Address.#ctor
  name: Address()
  href: api/Domain.ValueObjects.Address.html#Domain_ValueObjects_Address__ctor
  commentId: M:Domain.ValueObjects.Address.#ctor
  name.vb: New()
  fullName: Domain.ValueObjects.Address.Address()
  fullName.vb: Domain.ValueObjects.Address.New()
  nameWithType: Address.Address()
  nameWithType.vb: Address.New()
- uid: Domain.ValueObjects.Address.#ctor(System.String,System.String,System.String,System.String,System.String)
  name: Address(string?, string?, string?, string?, string?)
  href: api/Domain.ValueObjects.Address.html#Domain_ValueObjects_Address__ctor_System_String_System_String_System_String_System_String_System_String_
  commentId: M:Domain.ValueObjects.Address.#ctor(System.String,System.String,System.String,System.String,System.String)
  name.vb: New(String, String, String, String, String)
  fullName: Domain.ValueObjects.Address.Address(string?, string?, string?, string?, string?)
  fullName.vb: Domain.ValueObjects.Address.New(String, String, String, String, String)
  nameWithType: Address.Address(string?, string?, string?, string?, string?)
  nameWithType.vb: Address.New(String, String, String, String, String)
- uid: Domain.ValueObjects.Address.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String)
  name: Address(string?, string?, string?, string?, string?, string?, string?)
  href: api/Domain.ValueObjects.Address.html#Domain_ValueObjects_Address__ctor_System_String_System_String_System_String_System_String_System_String_System_String_System_String_
  commentId: M:Domain.ValueObjects.Address.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String)
  name.vb: New(String, String, String, String, String, String, String)
  fullName: Domain.ValueObjects.Address.Address(string?, string?, string?, string?, string?, string?, string?)
  fullName.vb: Domain.ValueObjects.Address.New(String, String, String, String, String, String, String)
  nameWithType: Address.Address(string?, string?, string?, string?, string?, string?, string?)
  nameWithType.vb: Address.New(String, String, String, String, String, String, String)
- uid: Domain.ValueObjects.Address.#ctor*
  name: Address
  href: api/Domain.ValueObjects.Address.html#Domain_ValueObjects_Address__ctor_
  commentId: Overload:Domain.ValueObjects.Address.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Domain.ValueObjects.Address.Address
  fullName.vb: Domain.ValueObjects.Address.New
  nameWithType: Address.Address
  nameWithType.vb: Address.New
- uid: Domain.ValueObjects.Address.City
  name: City
  href: api/Domain.ValueObjects.Address.html#Domain_ValueObjects_Address_City
  commentId: P:Domain.ValueObjects.Address.City
  fullName: Domain.ValueObjects.Address.City
  nameWithType: Address.City
- uid: Domain.ValueObjects.Address.City*
  name: City
  href: api/Domain.ValueObjects.Address.html#Domain_ValueObjects_Address_City_
  commentId: Overload:Domain.ValueObjects.Address.City
  isSpec: "True"
  fullName: Domain.ValueObjects.Address.City
  nameWithType: Address.City
- uid: Domain.ValueObjects.Address.Country
  name: Country
  href: api/Domain.ValueObjects.Address.html#Domain_ValueObjects_Address_Country
  commentId: P:Domain.ValueObjects.Address.Country
  fullName: Domain.ValueObjects.Address.Country
  nameWithType: Address.Country
- uid: Domain.ValueObjects.Address.Country*
  name: Country
  href: api/Domain.ValueObjects.Address.html#Domain_ValueObjects_Address_Country_
  commentId: Overload:Domain.ValueObjects.Address.Country
  isSpec: "True"
  fullName: Domain.ValueObjects.Address.Country
  nameWithType: Address.Country
- uid: Domain.ValueObjects.Address.Name
  name: Name
  href: api/Domain.ValueObjects.Address.html#Domain_ValueObjects_Address_Name
  commentId: P:Domain.ValueObjects.Address.Name
  fullName: Domain.ValueObjects.Address.Name
  nameWithType: Address.Name
- uid: Domain.ValueObjects.Address.Name*
  name: Name
  href: api/Domain.ValueObjects.Address.html#Domain_ValueObjects_Address_Name_
  commentId: Overload:Domain.ValueObjects.Address.Name
  isSpec: "True"
  fullName: Domain.ValueObjects.Address.Name
  nameWithType: Address.Name
- uid: Domain.ValueObjects.Address.Number
  name: Number
  href: api/Domain.ValueObjects.Address.html#Domain_ValueObjects_Address_Number
  commentId: P:Domain.ValueObjects.Address.Number
  fullName: Domain.ValueObjects.Address.Number
  nameWithType: Address.Number
- uid: Domain.ValueObjects.Address.Number*
  name: Number
  href: api/Domain.ValueObjects.Address.html#Domain_ValueObjects_Address_Number_
  commentId: Overload:Domain.ValueObjects.Address.Number
  isSpec: "True"
  fullName: Domain.ValueObjects.Address.Number
  nameWithType: Address.Number
- uid: Domain.ValueObjects.Address.Postcode
  name: Postcode
  href: api/Domain.ValueObjects.Address.html#Domain_ValueObjects_Address_Postcode
  commentId: P:Domain.ValueObjects.Address.Postcode
  fullName: Domain.ValueObjects.Address.Postcode
  nameWithType: Address.Postcode
- uid: Domain.ValueObjects.Address.Postcode*
  name: Postcode
  href: api/Domain.ValueObjects.Address.html#Domain_ValueObjects_Address_Postcode_
  commentId: Overload:Domain.ValueObjects.Address.Postcode
  isSpec: "True"
  fullName: Domain.ValueObjects.Address.Postcode
  nameWithType: Address.Postcode
- uid: Domain.ValueObjects.Address.State
  name: State
  href: api/Domain.ValueObjects.Address.html#Domain_ValueObjects_Address_State
  commentId: P:Domain.ValueObjects.Address.State
  fullName: Domain.ValueObjects.Address.State
  nameWithType: Address.State
- uid: Domain.ValueObjects.Address.State*
  name: State
  href: api/Domain.ValueObjects.Address.html#Domain_ValueObjects_Address_State_
  commentId: Overload:Domain.ValueObjects.Address.State
  isSpec: "True"
  fullName: Domain.ValueObjects.Address.State
  nameWithType: Address.State
- uid: Domain.ValueObjects.Address.Street
  name: Street
  href: api/Domain.ValueObjects.Address.html#Domain_ValueObjects_Address_Street
  commentId: P:Domain.ValueObjects.Address.Street
  fullName: Domain.ValueObjects.Address.Street
  nameWithType: Address.Street
- uid: Domain.ValueObjects.Address.Street*
  name: Street
  href: api/Domain.ValueObjects.Address.html#Domain_ValueObjects_Address_Street_
  commentId: Overload:Domain.ValueObjects.Address.Street
  isSpec: "True"
  fullName: Domain.ValueObjects.Address.Street
  nameWithType: Address.Street
- uid: Domain.ValueObjects.EntityCreationStatus`1
  name: EntityCreationStatus<TKey>
  href: api/Domain.ValueObjects.EntityCreationStatus-1.html
  commentId: T:Domain.ValueObjects.EntityCreationStatus`1
  name.vb: EntityCreationStatus(Of TKey)
  fullName: Domain.ValueObjects.EntityCreationStatus<TKey>
  fullName.vb: Domain.ValueObjects.EntityCreationStatus(Of TKey)
  nameWithType: EntityCreationStatus<TKey>
  nameWithType.vb: EntityCreationStatus(Of TKey)
- uid: Domain.ValueObjects.EntityCreationStatus`1.#ctor(System.DateTime,`0)
  name: EntityCreationStatus(DateTime, TKey)
  href: api/Domain.ValueObjects.EntityCreationStatus-1.html#Domain_ValueObjects_EntityCreationStatus_1__ctor_System_DateTime__0_
  commentId: M:Domain.ValueObjects.EntityCreationStatus`1.#ctor(System.DateTime,`0)
  name.vb: New(Date, TKey)
  fullName: Domain.ValueObjects.EntityCreationStatus<TKey>.EntityCreationStatus(System.DateTime, TKey)
  fullName.vb: Domain.ValueObjects.EntityCreationStatus(Of TKey).New(Date, TKey)
  nameWithType: EntityCreationStatus<TKey>.EntityCreationStatus(DateTime, TKey)
  nameWithType.vb: EntityCreationStatus(Of TKey).New(Date, TKey)
- uid: Domain.ValueObjects.EntityCreationStatus`1.#ctor*
  name: EntityCreationStatus
  href: api/Domain.ValueObjects.EntityCreationStatus-1.html#Domain_ValueObjects_EntityCreationStatus_1__ctor_
  commentId: Overload:Domain.ValueObjects.EntityCreationStatus`1.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Domain.ValueObjects.EntityCreationStatus<TKey>.EntityCreationStatus
  fullName.vb: Domain.ValueObjects.EntityCreationStatus(Of TKey).New
  nameWithType: EntityCreationStatus<TKey>.EntityCreationStatus
  nameWithType.vb: EntityCreationStatus(Of TKey).New
- uid: Domain.ValueObjects.EntityCreationStatus`1.CreatedBy
  name: CreatedBy
  href: api/Domain.ValueObjects.EntityCreationStatus-1.html#Domain_ValueObjects_EntityCreationStatus_1_CreatedBy
  commentId: P:Domain.ValueObjects.EntityCreationStatus`1.CreatedBy
  fullName: Domain.ValueObjects.EntityCreationStatus<TKey>.CreatedBy
  fullName.vb: Domain.ValueObjects.EntityCreationStatus(Of TKey).CreatedBy
  nameWithType: EntityCreationStatus<TKey>.CreatedBy
  nameWithType.vb: EntityCreationStatus(Of TKey).CreatedBy
- uid: Domain.ValueObjects.EntityCreationStatus`1.CreatedBy*
  name: CreatedBy
  href: api/Domain.ValueObjects.EntityCreationStatus-1.html#Domain_ValueObjects_EntityCreationStatus_1_CreatedBy_
  commentId: Overload:Domain.ValueObjects.EntityCreationStatus`1.CreatedBy
  isSpec: "True"
  fullName: Domain.ValueObjects.EntityCreationStatus<TKey>.CreatedBy
  fullName.vb: Domain.ValueObjects.EntityCreationStatus(Of TKey).CreatedBy
  nameWithType: EntityCreationStatus<TKey>.CreatedBy
  nameWithType.vb: EntityCreationStatus(Of TKey).CreatedBy
- uid: Domain.ValueObjects.EntityCreationStatus`1.CreatedOnUtc
  name: CreatedOnUtc
  href: api/Domain.ValueObjects.EntityCreationStatus-1.html#Domain_ValueObjects_EntityCreationStatus_1_CreatedOnUtc
  commentId: P:Domain.ValueObjects.EntityCreationStatus`1.CreatedOnUtc
  fullName: Domain.ValueObjects.EntityCreationStatus<TKey>.CreatedOnUtc
  fullName.vb: Domain.ValueObjects.EntityCreationStatus(Of TKey).CreatedOnUtc
  nameWithType: EntityCreationStatus<TKey>.CreatedOnUtc
  nameWithType.vb: EntityCreationStatus(Of TKey).CreatedOnUtc
- uid: Domain.ValueObjects.EntityCreationStatus`1.CreatedOnUtc*
  name: CreatedOnUtc
  href: api/Domain.ValueObjects.EntityCreationStatus-1.html#Domain_ValueObjects_EntityCreationStatus_1_CreatedOnUtc_
  commentId: Overload:Domain.ValueObjects.EntityCreationStatus`1.CreatedOnUtc
  isSpec: "True"
  fullName: Domain.ValueObjects.EntityCreationStatus<TKey>.CreatedOnUtc
  fullName.vb: Domain.ValueObjects.EntityCreationStatus(Of TKey).CreatedOnUtc
  nameWithType: EntityCreationStatus<TKey>.CreatedOnUtc
  nameWithType.vb: EntityCreationStatus(Of TKey).CreatedOnUtc
- uid: Domain.ValueObjects.EntityDeletionStatus`1
  name: EntityDeletionStatus<TKey>
  href: api/Domain.ValueObjects.EntityDeletionStatus-1.html
  commentId: T:Domain.ValueObjects.EntityDeletionStatus`1
  name.vb: EntityDeletionStatus(Of TKey)
  fullName: Domain.ValueObjects.EntityDeletionStatus<TKey>
  fullName.vb: Domain.ValueObjects.EntityDeletionStatus(Of TKey)
  nameWithType: EntityDeletionStatus<TKey>
  nameWithType.vb: EntityDeletionStatus(Of TKey)
- uid: Domain.ValueObjects.EntityDeletionStatus`1.#ctor(System.Boolean,System.Nullable{System.DateTime},`0)
  name: EntityDeletionStatus(bool, DateTime?, TKey?)
  href: api/Domain.ValueObjects.EntityDeletionStatus-1.html#Domain_ValueObjects_EntityDeletionStatus_1__ctor_System_Boolean_System_Nullable_System_DateTime___0_
  commentId: M:Domain.ValueObjects.EntityDeletionStatus`1.#ctor(System.Boolean,System.Nullable{System.DateTime},`0)
  name.vb: New(Boolean, Date?, TKey)
  fullName: Domain.ValueObjects.EntityDeletionStatus<TKey>.EntityDeletionStatus(bool, System.DateTime?, TKey?)
  fullName.vb: Domain.ValueObjects.EntityDeletionStatus(Of TKey).New(Boolean, Date?, TKey)
  nameWithType: EntityDeletionStatus<TKey>.EntityDeletionStatus(bool, DateTime?, TKey?)
  nameWithType.vb: EntityDeletionStatus(Of TKey).New(Boolean, Date?, TKey)
- uid: Domain.ValueObjects.EntityDeletionStatus`1.#ctor*
  name: EntityDeletionStatus
  href: api/Domain.ValueObjects.EntityDeletionStatus-1.html#Domain_ValueObjects_EntityDeletionStatus_1__ctor_
  commentId: Overload:Domain.ValueObjects.EntityDeletionStatus`1.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Domain.ValueObjects.EntityDeletionStatus<TKey>.EntityDeletionStatus
  fullName.vb: Domain.ValueObjects.EntityDeletionStatus(Of TKey).New
  nameWithType: EntityDeletionStatus<TKey>.EntityDeletionStatus
  nameWithType.vb: EntityDeletionStatus(Of TKey).New
- uid: Domain.ValueObjects.EntityDeletionStatus`1.DeletedBy
  name: DeletedBy
  href: api/Domain.ValueObjects.EntityDeletionStatus-1.html#Domain_ValueObjects_EntityDeletionStatus_1_DeletedBy
  commentId: P:Domain.ValueObjects.EntityDeletionStatus`1.DeletedBy
  fullName: Domain.ValueObjects.EntityDeletionStatus<TKey>.DeletedBy
  fullName.vb: Domain.ValueObjects.EntityDeletionStatus(Of TKey).DeletedBy
  nameWithType: EntityDeletionStatus<TKey>.DeletedBy
  nameWithType.vb: EntityDeletionStatus(Of TKey).DeletedBy
- uid: Domain.ValueObjects.EntityDeletionStatus`1.DeletedBy*
  name: DeletedBy
  href: api/Domain.ValueObjects.EntityDeletionStatus-1.html#Domain_ValueObjects_EntityDeletionStatus_1_DeletedBy_
  commentId: Overload:Domain.ValueObjects.EntityDeletionStatus`1.DeletedBy
  isSpec: "True"
  fullName: Domain.ValueObjects.EntityDeletionStatus<TKey>.DeletedBy
  fullName.vb: Domain.ValueObjects.EntityDeletionStatus(Of TKey).DeletedBy
  nameWithType: EntityDeletionStatus<TKey>.DeletedBy
  nameWithType.vb: EntityDeletionStatus(Of TKey).DeletedBy
- uid: Domain.ValueObjects.EntityDeletionStatus`1.DeletedOnUtc
  name: DeletedOnUtc
  href: api/Domain.ValueObjects.EntityDeletionStatus-1.html#Domain_ValueObjects_EntityDeletionStatus_1_DeletedOnUtc
  commentId: P:Domain.ValueObjects.EntityDeletionStatus`1.DeletedOnUtc
  fullName: Domain.ValueObjects.EntityDeletionStatus<TKey>.DeletedOnUtc
  fullName.vb: Domain.ValueObjects.EntityDeletionStatus(Of TKey).DeletedOnUtc
  nameWithType: EntityDeletionStatus<TKey>.DeletedOnUtc
  nameWithType.vb: EntityDeletionStatus(Of TKey).DeletedOnUtc
- uid: Domain.ValueObjects.EntityDeletionStatus`1.DeletedOnUtc*
  name: DeletedOnUtc
  href: api/Domain.ValueObjects.EntityDeletionStatus-1.html#Domain_ValueObjects_EntityDeletionStatus_1_DeletedOnUtc_
  commentId: Overload:Domain.ValueObjects.EntityDeletionStatus`1.DeletedOnUtc
  isSpec: "True"
  fullName: Domain.ValueObjects.EntityDeletionStatus<TKey>.DeletedOnUtc
  fullName.vb: Domain.ValueObjects.EntityDeletionStatus(Of TKey).DeletedOnUtc
  nameWithType: EntityDeletionStatus<TKey>.DeletedOnUtc
  nameWithType.vb: EntityDeletionStatus(Of TKey).DeletedOnUtc
- uid: Domain.ValueObjects.EntityDeletionStatus`1.IsDeleted
  name: IsDeleted
  href: api/Domain.ValueObjects.EntityDeletionStatus-1.html#Domain_ValueObjects_EntityDeletionStatus_1_IsDeleted
  commentId: P:Domain.ValueObjects.EntityDeletionStatus`1.IsDeleted
  fullName: Domain.ValueObjects.EntityDeletionStatus<TKey>.IsDeleted
  fullName.vb: Domain.ValueObjects.EntityDeletionStatus(Of TKey).IsDeleted
  nameWithType: EntityDeletionStatus<TKey>.IsDeleted
  nameWithType.vb: EntityDeletionStatus(Of TKey).IsDeleted
- uid: Domain.ValueObjects.EntityDeletionStatus`1.IsDeleted*
  name: IsDeleted
  href: api/Domain.ValueObjects.EntityDeletionStatus-1.html#Domain_ValueObjects_EntityDeletionStatus_1_IsDeleted_
  commentId: Overload:Domain.ValueObjects.EntityDeletionStatus`1.IsDeleted
  isSpec: "True"
  fullName: Domain.ValueObjects.EntityDeletionStatus<TKey>.IsDeleted
  fullName.vb: Domain.ValueObjects.EntityDeletionStatus(Of TKey).IsDeleted
  nameWithType: EntityDeletionStatus<TKey>.IsDeleted
  nameWithType.vb: EntityDeletionStatus(Of TKey).IsDeleted
- uid: Domain.ValueObjects.EntityModificationStatus`1
  name: EntityModificationStatus<TKey>
  href: api/Domain.ValueObjects.EntityModificationStatus-1.html
  commentId: T:Domain.ValueObjects.EntityModificationStatus`1
  name.vb: EntityModificationStatus(Of TKey)
  fullName: Domain.ValueObjects.EntityModificationStatus<TKey>
  fullName.vb: Domain.ValueObjects.EntityModificationStatus(Of TKey)
  nameWithType: EntityModificationStatus<TKey>
  nameWithType.vb: EntityModificationStatus(Of TKey)
- uid: Domain.ValueObjects.EntityModificationStatus`1.#ctor(System.Nullable{System.DateTime},`0)
  name: EntityModificationStatus(DateTime?, TKey?)
  href: api/Domain.ValueObjects.EntityModificationStatus-1.html#Domain_ValueObjects_EntityModificationStatus_1__ctor_System_Nullable_System_DateTime___0_
  commentId: M:Domain.ValueObjects.EntityModificationStatus`1.#ctor(System.Nullable{System.DateTime},`0)
  name.vb: New(Date?, TKey)
  fullName: Domain.ValueObjects.EntityModificationStatus<TKey>.EntityModificationStatus(System.DateTime?, TKey?)
  fullName.vb: Domain.ValueObjects.EntityModificationStatus(Of TKey).New(Date?, TKey)
  nameWithType: EntityModificationStatus<TKey>.EntityModificationStatus(DateTime?, TKey?)
  nameWithType.vb: EntityModificationStatus(Of TKey).New(Date?, TKey)
- uid: Domain.ValueObjects.EntityModificationStatus`1.#ctor*
  name: EntityModificationStatus
  href: api/Domain.ValueObjects.EntityModificationStatus-1.html#Domain_ValueObjects_EntityModificationStatus_1__ctor_
  commentId: Overload:Domain.ValueObjects.EntityModificationStatus`1.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Domain.ValueObjects.EntityModificationStatus<TKey>.EntityModificationStatus
  fullName.vb: Domain.ValueObjects.EntityModificationStatus(Of TKey).New
  nameWithType: EntityModificationStatus<TKey>.EntityModificationStatus
  nameWithType.vb: EntityModificationStatus(Of TKey).New
- uid: Domain.ValueObjects.EntityModificationStatus`1.ModifiedBy
  name: ModifiedBy
  href: api/Domain.ValueObjects.EntityModificationStatus-1.html#Domain_ValueObjects_EntityModificationStatus_1_ModifiedBy
  commentId: P:Domain.ValueObjects.EntityModificationStatus`1.ModifiedBy
  fullName: Domain.ValueObjects.EntityModificationStatus<TKey>.ModifiedBy
  fullName.vb: Domain.ValueObjects.EntityModificationStatus(Of TKey).ModifiedBy
  nameWithType: EntityModificationStatus<TKey>.ModifiedBy
  nameWithType.vb: EntityModificationStatus(Of TKey).ModifiedBy
- uid: Domain.ValueObjects.EntityModificationStatus`1.ModifiedBy*
  name: ModifiedBy
  href: api/Domain.ValueObjects.EntityModificationStatus-1.html#Domain_ValueObjects_EntityModificationStatus_1_ModifiedBy_
  commentId: Overload:Domain.ValueObjects.EntityModificationStatus`1.ModifiedBy
  isSpec: "True"
  fullName: Domain.ValueObjects.EntityModificationStatus<TKey>.ModifiedBy
  fullName.vb: Domain.ValueObjects.EntityModificationStatus(Of TKey).ModifiedBy
  nameWithType: EntityModificationStatus<TKey>.ModifiedBy
  nameWithType.vb: EntityModificationStatus(Of TKey).ModifiedBy
- uid: Domain.ValueObjects.EntityModificationStatus`1.ModifiedOnUtc
  name: ModifiedOnUtc
  href: api/Domain.ValueObjects.EntityModificationStatus-1.html#Domain_ValueObjects_EntityModificationStatus_1_ModifiedOnUtc
  commentId: P:Domain.ValueObjects.EntityModificationStatus`1.ModifiedOnUtc
  fullName: Domain.ValueObjects.EntityModificationStatus<TKey>.ModifiedOnUtc
  fullName.vb: Domain.ValueObjects.EntityModificationStatus(Of TKey).ModifiedOnUtc
  nameWithType: EntityModificationStatus<TKey>.ModifiedOnUtc
  nameWithType.vb: EntityModificationStatus(Of TKey).ModifiedOnUtc
- uid: Domain.ValueObjects.EntityModificationStatus`1.ModifiedOnUtc*
  name: ModifiedOnUtc
  href: api/Domain.ValueObjects.EntityModificationStatus-1.html#Domain_ValueObjects_EntityModificationStatus_1_ModifiedOnUtc_
  commentId: Overload:Domain.ValueObjects.EntityModificationStatus`1.ModifiedOnUtc
  isSpec: "True"
  fullName: Domain.ValueObjects.EntityModificationStatus<TKey>.ModifiedOnUtc
  fullName.vb: Domain.ValueObjects.EntityModificationStatus(Of TKey).ModifiedOnUtc
  nameWithType: EntityModificationStatus<TKey>.ModifiedOnUtc
  nameWithType.vb: EntityModificationStatus(Of TKey).ModifiedOnUtc
- uid: Persistence.Configurations
  name: Persistence.Configurations
  href: api/Persistence.Configurations.html
  commentId: N:Persistence.Configurations
  fullName: Persistence.Configurations
  nameWithType: Persistence.Configurations
- uid: Persistence.Configurations.ActivityConfiguration
  name: ActivityConfiguration
  href: api/Persistence.Configurations.ActivityConfiguration.html
  commentId: T:Persistence.Configurations.ActivityConfiguration
  fullName: Persistence.Configurations.ActivityConfiguration
  nameWithType: ActivityConfiguration
- uid: Persistence.Configurations.ActivityConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{Domain.Aggregates.Identity.Activity})
  name: Configure(EntityTypeBuilder<Activity>)
  href: api/Persistence.Configurations.ActivityConfiguration.html#Persistence_Configurations_ActivityConfiguration_Configure_Microsoft_EntityFrameworkCore_Metadata_Builders_EntityTypeBuilder_Domain_Aggregates_Identity_Activity__
  commentId: M:Persistence.Configurations.ActivityConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{Domain.Aggregates.Identity.Activity})
  name.vb: Configure(EntityTypeBuilder(Of Activity))
  fullName: Persistence.Configurations.ActivityConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder<Domain.Aggregates.Identity.Activity>)
  fullName.vb: Persistence.Configurations.ActivityConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder(Of Domain.Aggregates.Identity.Activity))
  nameWithType: ActivityConfiguration.Configure(EntityTypeBuilder<Activity>)
  nameWithType.vb: ActivityConfiguration.Configure(EntityTypeBuilder(Of Activity))
- uid: Persistence.Configurations.ActivityConfiguration.Configure*
  name: Configure
  href: api/Persistence.Configurations.ActivityConfiguration.html#Persistence_Configurations_ActivityConfiguration_Configure_
  commentId: Overload:Persistence.Configurations.ActivityConfiguration.Configure
  isSpec: "True"
  fullName: Persistence.Configurations.ActivityConfiguration.Configure
  nameWithType: ActivityConfiguration.Configure
- uid: Persistence.Configurations.ClientApplicationConfiguration
  name: ClientApplicationConfiguration
  href: api/Persistence.Configurations.ClientApplicationConfiguration.html
  commentId: T:Persistence.Configurations.ClientApplicationConfiguration
  fullName: Persistence.Configurations.ClientApplicationConfiguration
  nameWithType: ClientApplicationConfiguration
- uid: Persistence.Configurations.ClientApplicationConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{Domain.Aggregates.Identity.ClientApplication})
  name: Configure(EntityTypeBuilder<ClientApplication>)
  href: api/Persistence.Configurations.ClientApplicationConfiguration.html#Persistence_Configurations_ClientApplicationConfiguration_Configure_Microsoft_EntityFrameworkCore_Metadata_Builders_EntityTypeBuilder_Domain_Aggregates_Identity_ClientApplication__
  commentId: M:Persistence.Configurations.ClientApplicationConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{Domain.Aggregates.Identity.ClientApplication})
  name.vb: Configure(EntityTypeBuilder(Of ClientApplication))
  fullName: Persistence.Configurations.ClientApplicationConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder<Domain.Aggregates.Identity.ClientApplication>)
  fullName.vb: Persistence.Configurations.ClientApplicationConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder(Of Domain.Aggregates.Identity.ClientApplication))
  nameWithType: ClientApplicationConfiguration.Configure(EntityTypeBuilder<ClientApplication>)
  nameWithType.vb: ClientApplicationConfiguration.Configure(EntityTypeBuilder(Of ClientApplication))
- uid: Persistence.Configurations.ClientApplicationConfiguration.Configure*
  name: Configure
  href: api/Persistence.Configurations.ClientApplicationConfiguration.html#Persistence_Configurations_ClientApplicationConfiguration_Configure_
  commentId: Overload:Persistence.Configurations.ClientApplicationConfiguration.Configure
  isSpec: "True"
  fullName: Persistence.Configurations.ClientApplicationConfiguration.Configure
  nameWithType: ClientApplicationConfiguration.Configure
- uid: Persistence.Configurations.RoleClaimConfiguration
  name: RoleClaimConfiguration
  href: api/Persistence.Configurations.RoleClaimConfiguration.html
  commentId: T:Persistence.Configurations.RoleClaimConfiguration
  fullName: Persistence.Configurations.RoleClaimConfiguration
  nameWithType: RoleClaimConfiguration
- uid: Persistence.Configurations.RoleClaimConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{Domain.Aggregates.Identity.RoleClaim})
  name: Configure(EntityTypeBuilder<RoleClaim>)
  href: api/Persistence.Configurations.RoleClaimConfiguration.html#Persistence_Configurations_RoleClaimConfiguration_Configure_Microsoft_EntityFrameworkCore_Metadata_Builders_EntityTypeBuilder_Domain_Aggregates_Identity_RoleClaim__
  commentId: M:Persistence.Configurations.RoleClaimConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{Domain.Aggregates.Identity.RoleClaim})
  name.vb: Configure(EntityTypeBuilder(Of RoleClaim))
  fullName: Persistence.Configurations.RoleClaimConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder<Domain.Aggregates.Identity.RoleClaim>)
  fullName.vb: Persistence.Configurations.RoleClaimConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder(Of Domain.Aggregates.Identity.RoleClaim))
  nameWithType: RoleClaimConfiguration.Configure(EntityTypeBuilder<RoleClaim>)
  nameWithType.vb: RoleClaimConfiguration.Configure(EntityTypeBuilder(Of RoleClaim))
- uid: Persistence.Configurations.RoleClaimConfiguration.Configure*
  name: Configure
  href: api/Persistence.Configurations.RoleClaimConfiguration.html#Persistence_Configurations_RoleClaimConfiguration_Configure_
  commentId: Overload:Persistence.Configurations.RoleClaimConfiguration.Configure
  isSpec: "True"
  fullName: Persistence.Configurations.RoleClaimConfiguration.Configure
  nameWithType: RoleClaimConfiguration.Configure
- uid: Persistence.Configurations.RoleConfiguration
  name: RoleConfiguration
  href: api/Persistence.Configurations.RoleConfiguration.html
  commentId: T:Persistence.Configurations.RoleConfiguration
  fullName: Persistence.Configurations.RoleConfiguration
  nameWithType: RoleConfiguration
- uid: Persistence.Configurations.RoleConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{Domain.Aggregates.Identity.Role})
  name: Configure(EntityTypeBuilder<Role>)
  href: api/Persistence.Configurations.RoleConfiguration.html#Persistence_Configurations_RoleConfiguration_Configure_Microsoft_EntityFrameworkCore_Metadata_Builders_EntityTypeBuilder_Domain_Aggregates_Identity_Role__
  commentId: M:Persistence.Configurations.RoleConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{Domain.Aggregates.Identity.Role})
  name.vb: Configure(EntityTypeBuilder(Of Role))
  fullName: Persistence.Configurations.RoleConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder<Domain.Aggregates.Identity.Role>)
  fullName.vb: Persistence.Configurations.RoleConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder(Of Domain.Aggregates.Identity.Role))
  nameWithType: RoleConfiguration.Configure(EntityTypeBuilder<Role>)
  nameWithType.vb: RoleConfiguration.Configure(EntityTypeBuilder(Of Role))
- uid: Persistence.Configurations.RoleConfiguration.Configure*
  name: Configure
  href: api/Persistence.Configurations.RoleConfiguration.html#Persistence_Configurations_RoleConfiguration_Configure_
  commentId: Overload:Persistence.Configurations.RoleConfiguration.Configure
  isSpec: "True"
  fullName: Persistence.Configurations.RoleConfiguration.Configure
  nameWithType: RoleConfiguration.Configure
- uid: Persistence.Configurations.SessionConfiguration
  name: SessionConfiguration
  href: api/Persistence.Configurations.SessionConfiguration.html
  commentId: T:Persistence.Configurations.SessionConfiguration
  fullName: Persistence.Configurations.SessionConfiguration
  nameWithType: SessionConfiguration
- uid: Persistence.Configurations.SessionConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{Domain.Aggregates.Identity.Session})
  name: Configure(EntityTypeBuilder<Session>)
  href: api/Persistence.Configurations.SessionConfiguration.html#Persistence_Configurations_SessionConfiguration_Configure_Microsoft_EntityFrameworkCore_Metadata_Builders_EntityTypeBuilder_Domain_Aggregates_Identity_Session__
  commentId: M:Persistence.Configurations.SessionConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{Domain.Aggregates.Identity.Session})
  name.vb: Configure(EntityTypeBuilder(Of Session))
  fullName: Persistence.Configurations.SessionConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder<Domain.Aggregates.Identity.Session>)
  fullName.vb: Persistence.Configurations.SessionConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder(Of Domain.Aggregates.Identity.Session))
  nameWithType: SessionConfiguration.Configure(EntityTypeBuilder<Session>)
  nameWithType.vb: SessionConfiguration.Configure(EntityTypeBuilder(Of Session))
- uid: Persistence.Configurations.SessionConfiguration.Configure*
  name: Configure
  href: api/Persistence.Configurations.SessionConfiguration.html#Persistence_Configurations_SessionConfiguration_Configure_
  commentId: Overload:Persistence.Configurations.SessionConfiguration.Configure
  isSpec: "True"
  fullName: Persistence.Configurations.SessionConfiguration.Configure
  nameWithType: SessionConfiguration.Configure
- uid: Persistence.Configurations.UserClaimConfiguration
  name: UserClaimConfiguration
  href: api/Persistence.Configurations.UserClaimConfiguration.html
  commentId: T:Persistence.Configurations.UserClaimConfiguration
  fullName: Persistence.Configurations.UserClaimConfiguration
  nameWithType: UserClaimConfiguration
- uid: Persistence.Configurations.UserClaimConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{Domain.Aggregates.Identity.UserClaim})
  name: Configure(EntityTypeBuilder<UserClaim>)
  href: api/Persistence.Configurations.UserClaimConfiguration.html#Persistence_Configurations_UserClaimConfiguration_Configure_Microsoft_EntityFrameworkCore_Metadata_Builders_EntityTypeBuilder_Domain_Aggregates_Identity_UserClaim__
  commentId: M:Persistence.Configurations.UserClaimConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{Domain.Aggregates.Identity.UserClaim})
  name.vb: Configure(EntityTypeBuilder(Of UserClaim))
  fullName: Persistence.Configurations.UserClaimConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder<Domain.Aggregates.Identity.UserClaim>)
  fullName.vb: Persistence.Configurations.UserClaimConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder(Of Domain.Aggregates.Identity.UserClaim))
  nameWithType: UserClaimConfiguration.Configure(EntityTypeBuilder<UserClaim>)
  nameWithType.vb: UserClaimConfiguration.Configure(EntityTypeBuilder(Of UserClaim))
- uid: Persistence.Configurations.UserClaimConfiguration.Configure*
  name: Configure
  href: api/Persistence.Configurations.UserClaimConfiguration.html#Persistence_Configurations_UserClaimConfiguration_Configure_
  commentId: Overload:Persistence.Configurations.UserClaimConfiguration.Configure
  isSpec: "True"
  fullName: Persistence.Configurations.UserClaimConfiguration.Configure
  nameWithType: UserClaimConfiguration.Configure
- uid: Persistence.Configurations.UserClientApplicationConfiguration
  name: UserClientApplicationConfiguration
  href: api/Persistence.Configurations.UserClientApplicationConfiguration.html
  commentId: T:Persistence.Configurations.UserClientApplicationConfiguration
  fullName: Persistence.Configurations.UserClientApplicationConfiguration
  nameWithType: UserClientApplicationConfiguration
- uid: Persistence.Configurations.UserClientApplicationConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{Domain.Aggregates.Identity.UserClientApplication})
  name: Configure(EntityTypeBuilder<UserClientApplication>)
  href: api/Persistence.Configurations.UserClientApplicationConfiguration.html#Persistence_Configurations_UserClientApplicationConfiguration_Configure_Microsoft_EntityFrameworkCore_Metadata_Builders_EntityTypeBuilder_Domain_Aggregates_Identity_UserClientApplication__
  commentId: M:Persistence.Configurations.UserClientApplicationConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{Domain.Aggregates.Identity.UserClientApplication})
  name.vb: Configure(EntityTypeBuilder(Of UserClientApplication))
  fullName: Persistence.Configurations.UserClientApplicationConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder<Domain.Aggregates.Identity.UserClientApplication>)
  fullName.vb: Persistence.Configurations.UserClientApplicationConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder(Of Domain.Aggregates.Identity.UserClientApplication))
  nameWithType: UserClientApplicationConfiguration.Configure(EntityTypeBuilder<UserClientApplication>)
  nameWithType.vb: UserClientApplicationConfiguration.Configure(EntityTypeBuilder(Of UserClientApplication))
- uid: Persistence.Configurations.UserClientApplicationConfiguration.Configure*
  name: Configure
  href: api/Persistence.Configurations.UserClientApplicationConfiguration.html#Persistence_Configurations_UserClientApplicationConfiguration_Configure_
  commentId: Overload:Persistence.Configurations.UserClientApplicationConfiguration.Configure
  isSpec: "True"
  fullName: Persistence.Configurations.UserClientApplicationConfiguration.Configure
  nameWithType: UserClientApplicationConfiguration.Configure
- uid: Persistence.Configurations.UserConfiguration
  name: UserConfiguration
  href: api/Persistence.Configurations.UserConfiguration.html
  commentId: T:Persistence.Configurations.UserConfiguration
  fullName: Persistence.Configurations.UserConfiguration
  nameWithType: UserConfiguration
- uid: Persistence.Configurations.UserConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{Domain.Aggregates.Identity.User})
  name: Configure(EntityTypeBuilder<User>)
  href: api/Persistence.Configurations.UserConfiguration.html#Persistence_Configurations_UserConfiguration_Configure_Microsoft_EntityFrameworkCore_Metadata_Builders_EntityTypeBuilder_Domain_Aggregates_Identity_User__
  commentId: M:Persistence.Configurations.UserConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{Domain.Aggregates.Identity.User})
  name.vb: Configure(EntityTypeBuilder(Of User))
  fullName: Persistence.Configurations.UserConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder<Domain.Aggregates.Identity.User>)
  fullName.vb: Persistence.Configurations.UserConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder(Of Domain.Aggregates.Identity.User))
  nameWithType: UserConfiguration.Configure(EntityTypeBuilder<User>)
  nameWithType.vb: UserConfiguration.Configure(EntityTypeBuilder(Of User))
- uid: Persistence.Configurations.UserConfiguration.Configure*
  name: Configure
  href: api/Persistence.Configurations.UserConfiguration.html#Persistence_Configurations_UserConfiguration_Configure_
  commentId: Overload:Persistence.Configurations.UserConfiguration.Configure
  isSpec: "True"
  fullName: Persistence.Configurations.UserConfiguration.Configure
  nameWithType: UserConfiguration.Configure
- uid: Persistence.Configurations.UserLoginConfiguration
  name: UserLoginConfiguration
  href: api/Persistence.Configurations.UserLoginConfiguration.html
  commentId: T:Persistence.Configurations.UserLoginConfiguration
  fullName: Persistence.Configurations.UserLoginConfiguration
  nameWithType: UserLoginConfiguration
- uid: Persistence.Configurations.UserLoginConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{Microsoft.AspNetCore.Identity.IdentityUserLogin{System.String}})
  name: Configure(EntityTypeBuilder<IdentityUserLogin<string>>)
  href: api/Persistence.Configurations.UserLoginConfiguration.html#Persistence_Configurations_UserLoginConfiguration_Configure_Microsoft_EntityFrameworkCore_Metadata_Builders_EntityTypeBuilder_Microsoft_AspNetCore_Identity_IdentityUserLogin_System_String___
  commentId: M:Persistence.Configurations.UserLoginConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{Microsoft.AspNetCore.Identity.IdentityUserLogin{System.String}})
  name.vb: Configure(EntityTypeBuilder(Of IdentityUserLogin(Of String)))
  fullName: Persistence.Configurations.UserLoginConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder<Microsoft.AspNetCore.Identity.IdentityUserLogin<string>>)
  fullName.vb: Persistence.Configurations.UserLoginConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder(Of Microsoft.AspNetCore.Identity.IdentityUserLogin(Of String)))
  nameWithType: UserLoginConfiguration.Configure(EntityTypeBuilder<IdentityUserLogin<string>>)
  nameWithType.vb: UserLoginConfiguration.Configure(EntityTypeBuilder(Of IdentityUserLogin(Of String)))
- uid: Persistence.Configurations.UserLoginConfiguration.Configure*
  name: Configure
  href: api/Persistence.Configurations.UserLoginConfiguration.html#Persistence_Configurations_UserLoginConfiguration_Configure_
  commentId: Overload:Persistence.Configurations.UserLoginConfiguration.Configure
  isSpec: "True"
  fullName: Persistence.Configurations.UserLoginConfiguration.Configure
  nameWithType: UserLoginConfiguration.Configure
- uid: Persistence.Configurations.UserRoleConfiguration
  name: UserRoleConfiguration
  href: api/Persistence.Configurations.UserRoleConfiguration.html
  commentId: T:Persistence.Configurations.UserRoleConfiguration
  fullName: Persistence.Configurations.UserRoleConfiguration
  nameWithType: UserRoleConfiguration
- uid: Persistence.Configurations.UserRoleConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{Domain.Aggregates.Identity.UserRole})
  name: Configure(EntityTypeBuilder<UserRole>)
  href: api/Persistence.Configurations.UserRoleConfiguration.html#Persistence_Configurations_UserRoleConfiguration_Configure_Microsoft_EntityFrameworkCore_Metadata_Builders_EntityTypeBuilder_Domain_Aggregates_Identity_UserRole__
  commentId: M:Persistence.Configurations.UserRoleConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{Domain.Aggregates.Identity.UserRole})
  name.vb: Configure(EntityTypeBuilder(Of UserRole))
  fullName: Persistence.Configurations.UserRoleConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder<Domain.Aggregates.Identity.UserRole>)
  fullName.vb: Persistence.Configurations.UserRoleConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder(Of Domain.Aggregates.Identity.UserRole))
  nameWithType: UserRoleConfiguration.Configure(EntityTypeBuilder<UserRole>)
  nameWithType.vb: UserRoleConfiguration.Configure(EntityTypeBuilder(Of UserRole))
- uid: Persistence.Configurations.UserRoleConfiguration.Configure*
  name: Configure
  href: api/Persistence.Configurations.UserRoleConfiguration.html#Persistence_Configurations_UserRoleConfiguration_Configure_
  commentId: Overload:Persistence.Configurations.UserRoleConfiguration.Configure
  isSpec: "True"
  fullName: Persistence.Configurations.UserRoleConfiguration.Configure
  nameWithType: UserRoleConfiguration.Configure
- uid: Persistence.Configurations.UserTokenConfiguration
  name: UserTokenConfiguration
  href: api/Persistence.Configurations.UserTokenConfiguration.html
  commentId: T:Persistence.Configurations.UserTokenConfiguration
  fullName: Persistence.Configurations.UserTokenConfiguration
  nameWithType: UserTokenConfiguration
- uid: Persistence.Configurations.UserTokenConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{Microsoft.AspNetCore.Identity.IdentityUserToken{System.String}})
  name: Configure(EntityTypeBuilder<IdentityUserToken<string>>)
  href: api/Persistence.Configurations.UserTokenConfiguration.html#Persistence_Configurations_UserTokenConfiguration_Configure_Microsoft_EntityFrameworkCore_Metadata_Builders_EntityTypeBuilder_Microsoft_AspNetCore_Identity_IdentityUserToken_System_String___
  commentId: M:Persistence.Configurations.UserTokenConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{Microsoft.AspNetCore.Identity.IdentityUserToken{System.String}})
  name.vb: Configure(EntityTypeBuilder(Of IdentityUserToken(Of String)))
  fullName: Persistence.Configurations.UserTokenConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder<Microsoft.AspNetCore.Identity.IdentityUserToken<string>>)
  fullName.vb: Persistence.Configurations.UserTokenConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder(Of Microsoft.AspNetCore.Identity.IdentityUserToken(Of String)))
  nameWithType: UserTokenConfiguration.Configure(EntityTypeBuilder<IdentityUserToken<string>>)
  nameWithType.vb: UserTokenConfiguration.Configure(EntityTypeBuilder(Of IdentityUserToken(Of String)))
- uid: Persistence.Configurations.UserTokenConfiguration.Configure*
  name: Configure
  href: api/Persistence.Configurations.UserTokenConfiguration.html#Persistence_Configurations_UserTokenConfiguration_Configure_
  commentId: Overload:Persistence.Configurations.UserTokenConfiguration.Configure
  isSpec: "True"
  fullName: Persistence.Configurations.UserTokenConfiguration.Configure
  nameWithType: UserTokenConfiguration.Configure
- uid: Persistence.Contexts
  name: Persistence.Contexts
  href: api/Persistence.Contexts.html
  commentId: N:Persistence.Contexts
  fullName: Persistence.Contexts
  nameWithType: Persistence.Contexts
- uid: Persistence.Contexts.AppDbContext
  name: AppDbContext
  href: api/Persistence.Contexts.AppDbContext.html
  commentId: T:Persistence.Contexts.AppDbContext
  fullName: Persistence.Contexts.AppDbContext
  nameWithType: AppDbContext
- uid: Persistence.Contexts.AppDbContext.#ctor
  name: AppDbContext()
  href: api/Persistence.Contexts.AppDbContext.html#Persistence_Contexts_AppDbContext__ctor
  commentId: M:Persistence.Contexts.AppDbContext.#ctor
  name.vb: New()
  fullName: Persistence.Contexts.AppDbContext.AppDbContext()
  fullName.vb: Persistence.Contexts.AppDbContext.New()
  nameWithType: AppDbContext.AppDbContext()
  nameWithType.vb: AppDbContext.New()
- uid: Persistence.Contexts.AppDbContext.#ctor(Microsoft.EntityFrameworkCore.DbContextOptions{Persistence.Contexts.AppDbContext},Microsoft.Extensions.Configuration.IConfiguration)
  name: AppDbContext(DbContextOptions<AppDbContext>, IConfiguration)
  href: api/Persistence.Contexts.AppDbContext.html#Persistence_Contexts_AppDbContext__ctor_Microsoft_EntityFrameworkCore_DbContextOptions_Persistence_Contexts_AppDbContext__Microsoft_Extensions_Configuration_IConfiguration_
  commentId: M:Persistence.Contexts.AppDbContext.#ctor(Microsoft.EntityFrameworkCore.DbContextOptions{Persistence.Contexts.AppDbContext},Microsoft.Extensions.Configuration.IConfiguration)
  name.vb: New(DbContextOptions(Of AppDbContext), IConfiguration)
  fullName: Persistence.Contexts.AppDbContext.AppDbContext(Microsoft.EntityFrameworkCore.DbContextOptions<Persistence.Contexts.AppDbContext>, Microsoft.Extensions.Configuration.IConfiguration)
  fullName.vb: Persistence.Contexts.AppDbContext.New(Microsoft.EntityFrameworkCore.DbContextOptions(Of Persistence.Contexts.AppDbContext), Microsoft.Extensions.Configuration.IConfiguration)
  nameWithType: AppDbContext.AppDbContext(DbContextOptions<AppDbContext>, IConfiguration)
  nameWithType.vb: AppDbContext.New(DbContextOptions(Of AppDbContext), IConfiguration)
- uid: Persistence.Contexts.AppDbContext.#ctor*
  name: AppDbContext
  href: api/Persistence.Contexts.AppDbContext.html#Persistence_Contexts_AppDbContext__ctor_
  commentId: Overload:Persistence.Contexts.AppDbContext.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Persistence.Contexts.AppDbContext.AppDbContext
  fullName.vb: Persistence.Contexts.AppDbContext.New
  nameWithType: AppDbContext.AppDbContext
  nameWithType.vb: AppDbContext.New
- uid: Persistence.Contexts.AppDbContext.Activities
  name: Activities
  href: api/Persistence.Contexts.AppDbContext.html#Persistence_Contexts_AppDbContext_Activities
  commentId: P:Persistence.Contexts.AppDbContext.Activities
  fullName: Persistence.Contexts.AppDbContext.Activities
  nameWithType: AppDbContext.Activities
- uid: Persistence.Contexts.AppDbContext.Activities*
  name: Activities
  href: api/Persistence.Contexts.AppDbContext.html#Persistence_Contexts_AppDbContext_Activities_
  commentId: Overload:Persistence.Contexts.AppDbContext.Activities
  isSpec: "True"
  fullName: Persistence.Contexts.AppDbContext.Activities
  nameWithType: AppDbContext.Activities
- uid: Persistence.Contexts.AppDbContext.ClientApplications
  name: ClientApplications
  href: api/Persistence.Contexts.AppDbContext.html#Persistence_Contexts_AppDbContext_ClientApplications
  commentId: P:Persistence.Contexts.AppDbContext.ClientApplications
  fullName: Persistence.Contexts.AppDbContext.ClientApplications
  nameWithType: AppDbContext.ClientApplications
- uid: Persistence.Contexts.AppDbContext.ClientApplications*
  name: ClientApplications
  href: api/Persistence.Contexts.AppDbContext.html#Persistence_Contexts_AppDbContext_ClientApplications_
  commentId: Overload:Persistence.Contexts.AppDbContext.ClientApplications
  isSpec: "True"
  fullName: Persistence.Contexts.AppDbContext.ClientApplications
  nameWithType: AppDbContext.ClientApplications
- uid: Persistence.Contexts.AppDbContext.Configuration
  name: Configuration
  href: api/Persistence.Contexts.AppDbContext.html#Persistence_Contexts_AppDbContext_Configuration
  commentId: P:Persistence.Contexts.AppDbContext.Configuration
  fullName: Persistence.Contexts.AppDbContext.Configuration
  nameWithType: AppDbContext.Configuration
- uid: Persistence.Contexts.AppDbContext.Configuration*
  name: Configuration
  href: api/Persistence.Contexts.AppDbContext.html#Persistence_Contexts_AppDbContext_Configuration_
  commentId: Overload:Persistence.Contexts.AppDbContext.Configuration
  isSpec: "True"
  fullName: Persistence.Contexts.AppDbContext.Configuration
  nameWithType: AppDbContext.Configuration
- uid: Persistence.Contexts.AppDbContext.OnConfiguring(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder)
  name: OnConfiguring(DbContextOptionsBuilder)
  href: api/Persistence.Contexts.AppDbContext.html#Persistence_Contexts_AppDbContext_OnConfiguring_Microsoft_EntityFrameworkCore_DbContextOptionsBuilder_
  commentId: M:Persistence.Contexts.AppDbContext.OnConfiguring(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder)
  fullName: Persistence.Contexts.AppDbContext.OnConfiguring(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder)
  nameWithType: AppDbContext.OnConfiguring(DbContextOptionsBuilder)
- uid: Persistence.Contexts.AppDbContext.OnConfiguring*
  name: OnConfiguring
  href: api/Persistence.Contexts.AppDbContext.html#Persistence_Contexts_AppDbContext_OnConfiguring_
  commentId: Overload:Persistence.Contexts.AppDbContext.OnConfiguring
  isSpec: "True"
  fullName: Persistence.Contexts.AppDbContext.OnConfiguring
  nameWithType: AppDbContext.OnConfiguring
- uid: Persistence.Contexts.AppDbContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)
  name: OnModelCreating(ModelBuilder)
  href: api/Persistence.Contexts.AppDbContext.html#Persistence_Contexts_AppDbContext_OnModelCreating_Microsoft_EntityFrameworkCore_ModelBuilder_
  commentId: M:Persistence.Contexts.AppDbContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)
  fullName: Persistence.Contexts.AppDbContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)
  nameWithType: AppDbContext.OnModelCreating(ModelBuilder)
- uid: Persistence.Contexts.AppDbContext.OnModelCreating*
  name: OnModelCreating
  href: api/Persistence.Contexts.AppDbContext.html#Persistence_Contexts_AppDbContext_OnModelCreating_
  commentId: Overload:Persistence.Contexts.AppDbContext.OnModelCreating
  isSpec: "True"
  fullName: Persistence.Contexts.AppDbContext.OnModelCreating
  nameWithType: AppDbContext.OnModelCreating
- uid: Persistence.Contexts.AppDbContext.RoleClaims
  name: RoleClaims
  href: api/Persistence.Contexts.AppDbContext.html#Persistence_Contexts_AppDbContext_RoleClaims
  commentId: P:Persistence.Contexts.AppDbContext.RoleClaims
  fullName: Persistence.Contexts.AppDbContext.RoleClaims
  nameWithType: AppDbContext.RoleClaims
- uid: Persistence.Contexts.AppDbContext.RoleClaims*
  name: RoleClaims
  href: api/Persistence.Contexts.AppDbContext.html#Persistence_Contexts_AppDbContext_RoleClaims_
  commentId: Overload:Persistence.Contexts.AppDbContext.RoleClaims
  isSpec: "True"
  fullName: Persistence.Contexts.AppDbContext.RoleClaims
  nameWithType: AppDbContext.RoleClaims
- uid: Persistence.Contexts.AppDbContext.Roles
  name: Roles
  href: api/Persistence.Contexts.AppDbContext.html#Persistence_Contexts_AppDbContext_Roles
  commentId: P:Persistence.Contexts.AppDbContext.Roles
  fullName: Persistence.Contexts.AppDbContext.Roles
  nameWithType: AppDbContext.Roles
- uid: Persistence.Contexts.AppDbContext.Roles*
  name: Roles
  href: api/Persistence.Contexts.AppDbContext.html#Persistence_Contexts_AppDbContext_Roles_
  commentId: Overload:Persistence.Contexts.AppDbContext.Roles
  isSpec: "True"
  fullName: Persistence.Contexts.AppDbContext.Roles
  nameWithType: AppDbContext.Roles
- uid: Persistence.Contexts.AppDbContext.Sessions
  name: Sessions
  href: api/Persistence.Contexts.AppDbContext.html#Persistence_Contexts_AppDbContext_Sessions
  commentId: P:Persistence.Contexts.AppDbContext.Sessions
  fullName: Persistence.Contexts.AppDbContext.Sessions
  nameWithType: AppDbContext.Sessions
- uid: Persistence.Contexts.AppDbContext.Sessions*
  name: Sessions
  href: api/Persistence.Contexts.AppDbContext.html#Persistence_Contexts_AppDbContext_Sessions_
  commentId: Overload:Persistence.Contexts.AppDbContext.Sessions
  isSpec: "True"
  fullName: Persistence.Contexts.AppDbContext.Sessions
  nameWithType: AppDbContext.Sessions
- uid: Persistence.Contexts.AppDbContext.UserClaims
  name: UserClaims
  href: api/Persistence.Contexts.AppDbContext.html#Persistence_Contexts_AppDbContext_UserClaims
  commentId: P:Persistence.Contexts.AppDbContext.UserClaims
  fullName: Persistence.Contexts.AppDbContext.UserClaims
  nameWithType: AppDbContext.UserClaims
- uid: Persistence.Contexts.AppDbContext.UserClaims*
  name: UserClaims
  href: api/Persistence.Contexts.AppDbContext.html#Persistence_Contexts_AppDbContext_UserClaims_
  commentId: Overload:Persistence.Contexts.AppDbContext.UserClaims
  isSpec: "True"
  fullName: Persistence.Contexts.AppDbContext.UserClaims
  nameWithType: AppDbContext.UserClaims
- uid: Persistence.Contexts.AppDbContext.UserClientApplications
  name: UserClientApplications
  href: api/Persistence.Contexts.AppDbContext.html#Persistence_Contexts_AppDbContext_UserClientApplications
  commentId: P:Persistence.Contexts.AppDbContext.UserClientApplications
  fullName: Persistence.Contexts.AppDbContext.UserClientApplications
  nameWithType: AppDbContext.UserClientApplications
- uid: Persistence.Contexts.AppDbContext.UserClientApplications*
  name: UserClientApplications
  href: api/Persistence.Contexts.AppDbContext.html#Persistence_Contexts_AppDbContext_UserClientApplications_
  commentId: Overload:Persistence.Contexts.AppDbContext.UserClientApplications
  isSpec: "True"
  fullName: Persistence.Contexts.AppDbContext.UserClientApplications
  nameWithType: AppDbContext.UserClientApplications
- uid: Persistence.Contexts.AppDbContext.UserLogins
  name: UserLogins
  href: api/Persistence.Contexts.AppDbContext.html#Persistence_Contexts_AppDbContext_UserLogins
  commentId: P:Persistence.Contexts.AppDbContext.UserLogins
  fullName: Persistence.Contexts.AppDbContext.UserLogins
  nameWithType: AppDbContext.UserLogins
- uid: Persistence.Contexts.AppDbContext.UserLogins*
  name: UserLogins
  href: api/Persistence.Contexts.AppDbContext.html#Persistence_Contexts_AppDbContext_UserLogins_
  commentId: Overload:Persistence.Contexts.AppDbContext.UserLogins
  isSpec: "True"
  fullName: Persistence.Contexts.AppDbContext.UserLogins
  nameWithType: AppDbContext.UserLogins
- uid: Persistence.Contexts.AppDbContext.UserRoles
  name: UserRoles
  href: api/Persistence.Contexts.AppDbContext.html#Persistence_Contexts_AppDbContext_UserRoles
  commentId: P:Persistence.Contexts.AppDbContext.UserRoles
  fullName: Persistence.Contexts.AppDbContext.UserRoles
  nameWithType: AppDbContext.UserRoles
- uid: Persistence.Contexts.AppDbContext.UserRoles*
  name: UserRoles
  href: api/Persistence.Contexts.AppDbContext.html#Persistence_Contexts_AppDbContext_UserRoles_
  commentId: Overload:Persistence.Contexts.AppDbContext.UserRoles
  isSpec: "True"
  fullName: Persistence.Contexts.AppDbContext.UserRoles
  nameWithType: AppDbContext.UserRoles
- uid: Persistence.Contexts.AppDbContext.UserTokens
  name: UserTokens
  href: api/Persistence.Contexts.AppDbContext.html#Persistence_Contexts_AppDbContext_UserTokens
  commentId: P:Persistence.Contexts.AppDbContext.UserTokens
  fullName: Persistence.Contexts.AppDbContext.UserTokens
  nameWithType: AppDbContext.UserTokens
- uid: Persistence.Contexts.AppDbContext.UserTokens*
  name: UserTokens
  href: api/Persistence.Contexts.AppDbContext.html#Persistence_Contexts_AppDbContext_UserTokens_
  commentId: Overload:Persistence.Contexts.AppDbContext.UserTokens
  isSpec: "True"
  fullName: Persistence.Contexts.AppDbContext.UserTokens
  nameWithType: AppDbContext.UserTokens
- uid: Persistence.Contexts.AppDbContext.Users
  name: Users
  href: api/Persistence.Contexts.AppDbContext.html#Persistence_Contexts_AppDbContext_Users
  commentId: P:Persistence.Contexts.AppDbContext.Users
  fullName: Persistence.Contexts.AppDbContext.Users
  nameWithType: AppDbContext.Users
- uid: Persistence.Contexts.AppDbContext.Users*
  name: Users
  href: api/Persistence.Contexts.AppDbContext.html#Persistence_Contexts_AppDbContext_Users_
  commentId: Overload:Persistence.Contexts.AppDbContext.Users
  isSpec: "True"
  fullName: Persistence.Contexts.AppDbContext.Users
  nameWithType: AppDbContext.Users
- uid: Persistence.Seed
  name: Persistence.Seed
  href: api/Persistence.Seed.html
  commentId: N:Persistence.Seed
  fullName: Persistence.Seed
  nameWithType: Persistence.Seed
- uid: Persistence.Seed.Seed
  name: Seed
  href: api/Persistence.Seed.Seed.html
  commentId: T:Persistence.Seed.Seed
  fullName: Persistence.Seed.Seed
  nameWithType: Seed
- uid: Persistence.Seed.Seed.AddressValue
  name: AddressValue
  href: api/Persistence.Seed.Seed.html#Persistence_Seed_Seed_AddressValue
  commentId: F:Persistence.Seed.Seed.AddressValue
  fullName: Persistence.Seed.Seed.AddressValue
  nameWithType: Seed.AddressValue
- uid: Persistence.Seed.Seed.CreatedBy
  name: CreatedBy
  href: api/Persistence.Seed.Seed.html#Persistence_Seed_Seed_CreatedBy
  commentId: F:Persistence.Seed.Seed.CreatedBy
  fullName: Persistence.Seed.Seed.CreatedBy
  nameWithType: Seed.CreatedBy
- uid: Persistence.Seed.Seed.SeedAdminUserAsync(Microsoft.AspNetCore.Builder.WebApplication)
  name: SeedAdminUserAsync(WebApplication)
  href: api/Persistence.Seed.Seed.html#Persistence_Seed_Seed_SeedAdminUserAsync_Microsoft_AspNetCore_Builder_WebApplication_
  commentId: M:Persistence.Seed.Seed.SeedAdminUserAsync(Microsoft.AspNetCore.Builder.WebApplication)
  fullName: Persistence.Seed.Seed.SeedAdminUserAsync(Microsoft.AspNetCore.Builder.WebApplication)
  nameWithType: Seed.SeedAdminUserAsync(WebApplication)
- uid: Persistence.Seed.Seed.SeedAdminUserAsync*
  name: SeedAdminUserAsync
  href: api/Persistence.Seed.Seed.html#Persistence_Seed_Seed_SeedAdminUserAsync_
  commentId: Overload:Persistence.Seed.Seed.SeedAdminUserAsync
  isSpec: "True"
  fullName: Persistence.Seed.Seed.SeedAdminUserAsync
  nameWithType: Seed.SeedAdminUserAsync
- uid: Persistence.Seed.Seed.SeedClientApplicationAsync(Microsoft.AspNetCore.Builder.WebApplication)
  name: SeedClientApplicationAsync(WebApplication)
  href: api/Persistence.Seed.Seed.html#Persistence_Seed_Seed_SeedClientApplicationAsync_Microsoft_AspNetCore_Builder_WebApplication_
  commentId: M:Persistence.Seed.Seed.SeedClientApplicationAsync(Microsoft.AspNetCore.Builder.WebApplication)
  fullName: Persistence.Seed.Seed.SeedClientApplicationAsync(Microsoft.AspNetCore.Builder.WebApplication)
  nameWithType: Seed.SeedClientApplicationAsync(WebApplication)
- uid: Persistence.Seed.Seed.SeedClientApplicationAsync*
  name: SeedClientApplicationAsync
  href: api/Persistence.Seed.Seed.html#Persistence_Seed_Seed_SeedClientApplicationAsync_
  commentId: Overload:Persistence.Seed.Seed.SeedClientApplicationAsync
  isSpec: "True"
  fullName: Persistence.Seed.Seed.SeedClientApplicationAsync
  nameWithType: Seed.SeedClientApplicationAsync
- uid: Persistence.Seed.Seed.SeedRolesAsync(Microsoft.AspNetCore.Builder.WebApplication)
  name: SeedRolesAsync(WebApplication)
  href: api/Persistence.Seed.Seed.html#Persistence_Seed_Seed_SeedRolesAsync_Microsoft_AspNetCore_Builder_WebApplication_
  commentId: M:Persistence.Seed.Seed.SeedRolesAsync(Microsoft.AspNetCore.Builder.WebApplication)
  fullName: Persistence.Seed.Seed.SeedRolesAsync(Microsoft.AspNetCore.Builder.WebApplication)
  nameWithType: Seed.SeedRolesAsync(WebApplication)
- uid: Persistence.Seed.Seed.SeedRolesAsync*
  name: SeedRolesAsync
  href: api/Persistence.Seed.Seed.html#Persistence_Seed_Seed_SeedRolesAsync_
  commentId: Overload:Persistence.Seed.Seed.SeedRolesAsync
  isSpec: "True"
  fullName: Persistence.Seed.Seed.SeedRolesAsync
  nameWithType: Seed.SeedRolesAsync
- uid: Persistence.Seed.Seed.Test
  name: Seed.Test
  href: api/Persistence.Seed.Seed.Test.html
  commentId: T:Persistence.Seed.Seed.Test
  fullName: Persistence.Seed.Seed.Test
  nameWithType: Seed.Test
- uid: Persistence.Seed.Seed.Test.AdminEmail
  name: AdminEmail
  href: api/Persistence.Seed.Seed.Test.html#Persistence_Seed_Seed_Test_AdminEmail
  commentId: F:Persistence.Seed.Seed.Test.AdminEmail
  fullName: Persistence.Seed.Seed.Test.AdminEmail
  nameWithType: Seed.Test.AdminEmail
- uid: Persistence.Seed.Seed.Test.AuthorizeUserEmail
  name: AuthorizeUserEmail
  href: api/Persistence.Seed.Seed.Test.html#Persistence_Seed_Seed_Test_AuthorizeUserEmail
  commentId: F:Persistence.Seed.Seed.Test.AuthorizeUserEmail
  fullName: Persistence.Seed.Seed.Test.AuthorizeUserEmail
  nameWithType: Seed.Test.AuthorizeUserEmail
- uid: Persistence.Seed.Seed.Test.DeleteUserEmail
  name: DeleteUserEmail
  href: api/Persistence.Seed.Seed.Test.html#Persistence_Seed_Seed_Test_DeleteUserEmail
  commentId: F:Persistence.Seed.Seed.Test.DeleteUserEmail
  fullName: Persistence.Seed.Seed.Test.DeleteUserEmail
  nameWithType: Seed.Test.DeleteUserEmail
- uid: Persistence.Seed.Seed.Test.MultiFactorUserEmail
  name: MultiFactorUserEmail
  href: api/Persistence.Seed.Seed.Test.html#Persistence_Seed_Seed_Test_MultiFactorUserEmail
  commentId: F:Persistence.Seed.Seed.Test.MultiFactorUserEmail
  fullName: Persistence.Seed.Seed.Test.MultiFactorUserEmail
  nameWithType: Seed.Test.MultiFactorUserEmail
- uid: Persistence.Seed.Seed.Test.OldDeletedUserEmail
  name: OldDeletedUserEmail
  href: api/Persistence.Seed.Seed.Test.html#Persistence_Seed_Seed_Test_OldDeletedUserEmail
  commentId: F:Persistence.Seed.Seed.Test.OldDeletedUserEmail
  fullName: Persistence.Seed.Seed.Test.OldDeletedUserEmail
  nameWithType: Seed.Test.OldDeletedUserEmail
- uid: Persistence.Seed.Seed.Test.RecentlyDeletedUserEmail
  name: RecentlyDeletedUserEmail
  href: api/Persistence.Seed.Seed.Test.html#Persistence_Seed_Seed_Test_RecentlyDeletedUserEmail
  commentId: F:Persistence.Seed.Seed.Test.RecentlyDeletedUserEmail
  fullName: Persistence.Seed.Seed.Test.RecentlyDeletedUserEmail
  nameWithType: Seed.Test.RecentlyDeletedUserEmail
- uid: Persistence.Seed.Seed.Test.SeedAuthorizeUser(Microsoft.AspNetCore.Builder.WebApplication)
  name: SeedAuthorizeUser(WebApplication)
  href: api/Persistence.Seed.Seed.Test.html#Persistence_Seed_Seed_Test_SeedAuthorizeUser_Microsoft_AspNetCore_Builder_WebApplication_
  commentId: M:Persistence.Seed.Seed.Test.SeedAuthorizeUser(Microsoft.AspNetCore.Builder.WebApplication)
  fullName: Persistence.Seed.Seed.Test.SeedAuthorizeUser(Microsoft.AspNetCore.Builder.WebApplication)
  nameWithType: Seed.Test.SeedAuthorizeUser(WebApplication)
- uid: Persistence.Seed.Seed.Test.SeedAuthorizeUser*
  name: SeedAuthorizeUser
  href: api/Persistence.Seed.Seed.Test.html#Persistence_Seed_Seed_Test_SeedAuthorizeUser_
  commentId: Overload:Persistence.Seed.Seed.Test.SeedAuthorizeUser
  isSpec: "True"
  fullName: Persistence.Seed.Seed.Test.SeedAuthorizeUser
  nameWithType: Seed.Test.SeedAuthorizeUser
- uid: Persistence.Seed.Seed.Test.SeedBackgroundServiceUsers(Microsoft.AspNetCore.Builder.WebApplication)
  name: SeedBackgroundServiceUsers(WebApplication)
  href: api/Persistence.Seed.Seed.Test.html#Persistence_Seed_Seed_Test_SeedBackgroundServiceUsers_Microsoft_AspNetCore_Builder_WebApplication_
  commentId: M:Persistence.Seed.Seed.Test.SeedBackgroundServiceUsers(Microsoft.AspNetCore.Builder.WebApplication)
  fullName: Persistence.Seed.Seed.Test.SeedBackgroundServiceUsers(Microsoft.AspNetCore.Builder.WebApplication)
  nameWithType: Seed.Test.SeedBackgroundServiceUsers(WebApplication)
- uid: Persistence.Seed.Seed.Test.SeedBackgroundServiceUsers*
  name: SeedBackgroundServiceUsers
  href: api/Persistence.Seed.Seed.Test.html#Persistence_Seed_Seed_Test_SeedBackgroundServiceUsers_
  commentId: Overload:Persistence.Seed.Seed.Test.SeedBackgroundServiceUsers
  isSpec: "True"
  fullName: Persistence.Seed.Seed.Test.SeedBackgroundServiceUsers
  nameWithType: Seed.Test.SeedBackgroundServiceUsers
- uid: Persistence.Seed.Seed.Test.SeedDeletedUser(Microsoft.AspNetCore.Builder.WebApplication)
  name: SeedDeletedUser(WebApplication)
  href: api/Persistence.Seed.Seed.Test.html#Persistence_Seed_Seed_Test_SeedDeletedUser_Microsoft_AspNetCore_Builder_WebApplication_
  commentId: M:Persistence.Seed.Seed.Test.SeedDeletedUser(Microsoft.AspNetCore.Builder.WebApplication)
  fullName: Persistence.Seed.Seed.Test.SeedDeletedUser(Microsoft.AspNetCore.Builder.WebApplication)
  nameWithType: Seed.Test.SeedDeletedUser(WebApplication)
- uid: Persistence.Seed.Seed.Test.SeedDeletedUser*
  name: SeedDeletedUser
  href: api/Persistence.Seed.Seed.Test.html#Persistence_Seed_Seed_Test_SeedDeletedUser_
  commentId: Overload:Persistence.Seed.Seed.Test.SeedDeletedUser
  isSpec: "True"
  fullName: Persistence.Seed.Seed.Test.SeedDeletedUser
  nameWithType: Seed.Test.SeedDeletedUser
- uid: Persistence.Seed.Seed.Test.SeedMultiFactorUser(Microsoft.AspNetCore.Builder.WebApplication)
  name: SeedMultiFactorUser(WebApplication)
  href: api/Persistence.Seed.Seed.Test.html#Persistence_Seed_Seed_Test_SeedMultiFactorUser_Microsoft_AspNetCore_Builder_WebApplication_
  commentId: M:Persistence.Seed.Seed.Test.SeedMultiFactorUser(Microsoft.AspNetCore.Builder.WebApplication)
  fullName: Persistence.Seed.Seed.Test.SeedMultiFactorUser(Microsoft.AspNetCore.Builder.WebApplication)
  nameWithType: Seed.Test.SeedMultiFactorUser(WebApplication)
- uid: Persistence.Seed.Seed.Test.SeedMultiFactorUser*
  name: SeedMultiFactorUser
  href: api/Persistence.Seed.Seed.Test.html#Persistence_Seed_Seed_Test_SeedMultiFactorUser_
  commentId: Overload:Persistence.Seed.Seed.Test.SeedMultiFactorUser
  isSpec: "True"
  fullName: Persistence.Seed.Seed.Test.SeedMultiFactorUser
  nameWithType: Seed.Test.SeedMultiFactorUser
- uid: Persistence.Seed.Seed.Test.SeedOldDeletedClientApplicationAsync(Microsoft.AspNetCore.Builder.WebApplication)
  name: SeedOldDeletedClientApplicationAsync(WebApplication)
  href: api/Persistence.Seed.Seed.Test.html#Persistence_Seed_Seed_Test_SeedOldDeletedClientApplicationAsync_Microsoft_AspNetCore_Builder_WebApplication_
  commentId: M:Persistence.Seed.Seed.Test.SeedOldDeletedClientApplicationAsync(Microsoft.AspNetCore.Builder.WebApplication)
  fullName: Persistence.Seed.Seed.Test.SeedOldDeletedClientApplicationAsync(Microsoft.AspNetCore.Builder.WebApplication)
  nameWithType: Seed.Test.SeedOldDeletedClientApplicationAsync(WebApplication)
- uid: Persistence.Seed.Seed.Test.SeedOldDeletedClientApplicationAsync*
  name: SeedOldDeletedClientApplicationAsync
  href: api/Persistence.Seed.Seed.Test.html#Persistence_Seed_Seed_Test_SeedOldDeletedClientApplicationAsync_
  commentId: Overload:Persistence.Seed.Seed.Test.SeedOldDeletedClientApplicationAsync
  isSpec: "True"
  fullName: Persistence.Seed.Seed.Test.SeedOldDeletedClientApplicationAsync
  nameWithType: Seed.Test.SeedOldDeletedClientApplicationAsync
- uid: Persistence.Seed.Seed.Test.SeedRecentDeletedClientApplicationAsync(Microsoft.AspNetCore.Builder.WebApplication)
  name: SeedRecentDeletedClientApplicationAsync(WebApplication)
  href: api/Persistence.Seed.Seed.Test.html#Persistence_Seed_Seed_Test_SeedRecentDeletedClientApplicationAsync_Microsoft_AspNetCore_Builder_WebApplication_
  commentId: M:Persistence.Seed.Seed.Test.SeedRecentDeletedClientApplicationAsync(Microsoft.AspNetCore.Builder.WebApplication)
  fullName: Persistence.Seed.Seed.Test.SeedRecentDeletedClientApplicationAsync(Microsoft.AspNetCore.Builder.WebApplication)
  nameWithType: Seed.Test.SeedRecentDeletedClientApplicationAsync(WebApplication)
- uid: Persistence.Seed.Seed.Test.SeedRecentDeletedClientApplicationAsync*
  name: SeedRecentDeletedClientApplicationAsync
  href: api/Persistence.Seed.Seed.Test.html#Persistence_Seed_Seed_Test_SeedRecentDeletedClientApplicationAsync_
  commentId: Overload:Persistence.Seed.Seed.Test.SeedRecentDeletedClientApplicationAsync
  isSpec: "True"
  fullName: Persistence.Seed.Seed.Test.SeedRecentDeletedClientApplicationAsync
  nameWithType: Seed.Test.SeedRecentDeletedClientApplicationAsync
- uid: Persistence.Seed.Seed.Test.SeedTestAdminUserAsync(Microsoft.AspNetCore.Builder.WebApplication)
  name: SeedTestAdminUserAsync(WebApplication)
  href: api/Persistence.Seed.Seed.Test.html#Persistence_Seed_Seed_Test_SeedTestAdminUserAsync_Microsoft_AspNetCore_Builder_WebApplication_
  commentId: M:Persistence.Seed.Seed.Test.SeedTestAdminUserAsync(Microsoft.AspNetCore.Builder.WebApplication)
  fullName: Persistence.Seed.Seed.Test.SeedTestAdminUserAsync(Microsoft.AspNetCore.Builder.WebApplication)
  nameWithType: Seed.Test.SeedTestAdminUserAsync(WebApplication)
- uid: Persistence.Seed.Seed.Test.SeedTestAdminUserAsync*
  name: SeedTestAdminUserAsync
  href: api/Persistence.Seed.Seed.Test.html#Persistence_Seed_Seed_Test_SeedTestAdminUserAsync_
  commentId: Overload:Persistence.Seed.Seed.Test.SeedTestAdminUserAsync
  isSpec: "True"
  fullName: Persistence.Seed.Seed.Test.SeedTestAdminUserAsync
  nameWithType: Seed.Test.SeedTestAdminUserAsync
- uid: Persistence.Seed.Seed.Test.SeedTestClientApplicationAsync(Microsoft.AspNetCore.Builder.WebApplication)
  name: SeedTestClientApplicationAsync(WebApplication)
  href: api/Persistence.Seed.Seed.Test.html#Persistence_Seed_Seed_Test_SeedTestClientApplicationAsync_Microsoft_AspNetCore_Builder_WebApplication_
  commentId: M:Persistence.Seed.Seed.Test.SeedTestClientApplicationAsync(Microsoft.AspNetCore.Builder.WebApplication)
  fullName: Persistence.Seed.Seed.Test.SeedTestClientApplicationAsync(Microsoft.AspNetCore.Builder.WebApplication)
  nameWithType: Seed.Test.SeedTestClientApplicationAsync(WebApplication)
- uid: Persistence.Seed.Seed.Test.SeedTestClientApplicationAsync*
  name: SeedTestClientApplicationAsync
  href: api/Persistence.Seed.Seed.Test.html#Persistence_Seed_Seed_Test_SeedTestClientApplicationAsync_
  commentId: Overload:Persistence.Seed.Seed.Test.SeedTestClientApplicationAsync
  isSpec: "True"
  fullName: Persistence.Seed.Seed.Test.SeedTestClientApplicationAsync
  nameWithType: Seed.Test.SeedTestClientApplicationAsync
- uid: Persistence.Seed.Seed.Test.SeedTestRolesAsync(Microsoft.AspNetCore.Builder.WebApplication)
  name: SeedTestRolesAsync(WebApplication)
  href: api/Persistence.Seed.Seed.Test.html#Persistence_Seed_Seed_Test_SeedTestRolesAsync_Microsoft_AspNetCore_Builder_WebApplication_
  commentId: M:Persistence.Seed.Seed.Test.SeedTestRolesAsync(Microsoft.AspNetCore.Builder.WebApplication)
  fullName: Persistence.Seed.Seed.Test.SeedTestRolesAsync(Microsoft.AspNetCore.Builder.WebApplication)
  nameWithType: Seed.Test.SeedTestRolesAsync(WebApplication)
- uid: Persistence.Seed.Seed.Test.SeedTestRolesAsync*
  name: SeedTestRolesAsync
  href: api/Persistence.Seed.Seed.Test.html#Persistence_Seed_Seed_Test_SeedTestRolesAsync_
  commentId: Overload:Persistence.Seed.Seed.Test.SeedTestRolesAsync
  isSpec: "True"
  fullName: Persistence.Seed.Seed.Test.SeedTestRolesAsync
  nameWithType: Seed.Test.SeedTestRolesAsync
